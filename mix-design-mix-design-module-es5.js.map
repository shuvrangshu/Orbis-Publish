{"version":3,"sources":["webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/overlay.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/portal.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/stepper.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/text-field.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/card.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/checkbox.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/form-field.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/input.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/select.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/stepper.js","webpack:///src/app/+main/mix-design/mix-design-routing.module.ts","webpack:///src/app/+main/mix-design/mix-design.component.ts","webpack:///src/app/+main/mix-design/mix-design.component.html","webpack:///src/app/+main/mix-design/mix-design.module.ts"],"names":["BlockScrollStrategy","_viewportRuler","document","_previousHTMLStyles","top","left","_isEnabled","_document","_canBeEnabled","root","documentElement","_previousScrollPosition","getViewportScrollPosition","style","classList","add","html","body","htmlStyle","bodyStyle","previousHtmlScrollBehavior","scrollBehavior","previousBodyScrollBehavior","remove","window","scroll","contains","viewport","getViewportSize","scrollHeight","height","scrollWidth","width","ScrollStrategy","getMatScrollStrategyAlreadyAttachedError","Error","CloseScrollStrategyConfig","CloseScrollStrategy","_scrollDispatcher","_ngZone","_config","_scrollSubscription","_detach","disable","_overlayRef","hasAttached","run","detach","overlayRef","stream","scrolled","threshold","_initialScrollPosition","subscribe","scrollPosition","Math","abs","updatePosition","unsubscribe","NoopScrollStrategy","isElementScrolledOutsideView","element","scrollContainers","some","containerBounds","outsideAbove","bottom","outsideBelow","outsideLeft","right","outsideRight","isElementClippedByScrolling","scrollContainerRect","clippedAbove","clippedBelow","clippedLeft","clippedRight","RepositionScrollStrategyConfig","RepositionScrollStrategy","throttle","scrollThrottle","autoClose","overlayRect","overlayElement","getBoundingClientRect","parentRects","ScrollStrategyOptions","noop","close","config","block","reposition","ɵfac","ScrollStrategyOptions_Factory","t","ctorParameters","type","undefined","decorators","args","ɵprov","factory","token","providedIn","OverlayConfig","scrollStrategy","panelClass","hasBackdrop","backdropClass","disposeOnNavigation","configKeys","Object","keys","key","OriginConnectionPosition","OverlayConnectionPosition","ConnectionPositionPair","origin","overlay","offsetX","offsetY","originX","originY","overlayX","overlayY","ScrollingVisibility","ConnectedOverlayPositionChange","connectionPair","scrollableViewProperties","validateVerticalPosition","property","value","validateHorizontalPosition","OverlayKeyboardDispatcher","_attachedOverlays","_keydownListener","event","overlays","i","length","_keydownEventSubscriptions","_keydownEvents","next","_isAttached","addEventListener","push","index","indexOf","splice","removeEventListener","OverlayKeyboardDispatcher_Factory","OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY","dispatcher","OVERLAY_KEYBOARD_DISPATCHER_PROVIDER","provide","deps","useFactory","isTestEnvironment","__karma__","jasmine","OverlayContainer","_platform","container","_containerElement","parentNode","removeChild","_createContainer","isBrowser","containerClass","oppositePlatformContainers","querySelectorAll","createElement","setAttribute","appendChild","OverlayContainer_Factory","OVERLAY_CONTAINER_PROVIDER_FACTORY","parentContainer","OVERLAY_CONTAINER_PROVIDER","OverlayRef","_portalOutlet","_host","_pane","_keyboardDispatcher","_location","_backdropElement","_backdropClick","_attachments","_detachments","_locationChanges","EMPTY","_backdropClickHandler","_keydownEventsObservable","observer","subscription","_scrollStrategy","attach","_positionStrategy","positionStrategy","portal","attachResult","parentElement","_previousHostParent","_updateStackingOrder","_updateElementSize","_updateElementDirection","enable","onStable","asObservable","pipe","_togglePointerEvents","_attachBackdrop","_toggleClasses","dispose","detachBackdrop","detachmentResult","_detachContentWhenStable","isAttached","_disposeScrollStrategy","complete","apply","strategy","sizeConfig","assign","dir","direction","classes","getDirection","minWidth","minHeight","maxWidth","maxHeight","enablePointer","pointerEvents","showingClass","insertBefore","requestAnimationFrame","runOutsideAngular","nextSibling","backdropToDetach","timeoutId","finishDetach","clearTimeout","setTimeout","cssClasses","isAdd","forEach","cssClass","children","OverlaySizeConfig","boundingBoxClass","cssUnitPattern","FlexibleConnectedPositionStrategy","connectedTo","_overlayContainer","_lastBoundingBoxSize","_isPushed","_canPush","_growAfterOpen","_hasFlexibleDimensions","_positionLocked","_viewportMargin","_scrollables","_preferredPositions","_positionChanges","_resizeSubscription","_offsetX","_offsetY","_appliedPanelClasses","positionChanges","setOrigin","_validatePositions","hostElement","_boundingBox","_isDisposed","_isInitialRender","_lastPosition","change","reapplyLastPosition","_clearPanelClasses","_resetOverlayElementStyles","_resetBoundingBoxStyles","_viewportRect","_getNarrowedViewportRect","_originRect","_getOriginRect","_overlayRect","originRect","viewportRect","flexibleFits","fallback","pos","originPoint","_getOriginPoint","overlayPoint","_getOverlayPoint","overlayFit","_getOverlayFit","isCompletelyWithinViewport","_applyPosition","_canFitWithFlexibleDimensions","position","boundingBoxRect","_calculateBoundingBoxRect","visibleArea","bestFit","bestScore","fit","score","weight","_previousPushAmount","extendStyles","alignItems","justifyContent","lastPosition","scrollables","positions","margin","flexibleDimensions","growAfterOpen","canPush","isLocked","_origin","offset","selector","_transformOriginSelector","x","startX","_isRtl","endX","y","overlayStartX","overlayStartY","point","_getOffset","leftOverflow","rightOverflow","topOverflow","bottomOverflow","visibleWidth","_subtractOverflows","visibleHeight","fitsInViewportVertically","fitsInViewportHorizontally","availableHeight","availableWidth","getPixelValue","getConfig","verticalFit","horizontalFit","start","overflowRight","max","overflowBottom","overflowTop","overflowLeft","pushX","pushY","_setTransformOrigin","_setOverlayElementStyles","_setBoundingBoxStyles","_addPanelClasses","observers","_getScrollVisibility","changeEvent","elements","xOrigin","yOrigin","transformOrigin","isRtl","smallestDistanceToViewportEdge","min","previousHeight","isBoundedByRightViewportEdge","isBoundedByLeftViewportEdge","previousWidth","styles","_hasExactPosition","transform","hasExactPosition","hasFlexibleDimensions","_getExactOverlayY","_getExactOverlayX","transformString","trim","_pushOverlayOnScreen","virtualKeyboardOffset","getContainerElement","documentHeight","clientHeight","horizontalStyleProperty","documentWidth","clientWidth","originBounds","overlayBounds","scrollContainerBounds","map","scrollable","getElementRef","nativeElement","isOriginClipped","isOriginOutsideView","isOverlayClipped","isOverlayOutsideView","overflows","reduce","currentValue","currentOverflow","axis","pair","Element","Point","OverlayFit","FallbackPosition","BoundingBoxRect","FlexibleFit","ConnectedPosition","destination","source","hasOwnProperty","input","split","units","parseFloat","ConnectedPositionStrategy","originPos","overlayPos","viewportRuler","platform","overlayContainer","withFlexibleDimensions","withPush","withViewportMargin","withFallbackPosition","_direction","setDirection","withScrollableContainers","withPositions","withDefaultOffsetX","withDefaultOffsetY","withLockedPosition","slice","wrapperClass","GlobalPositionStrategy","_cssPosition","_topOffset","_bottomOffset","_leftOffset","_rightOffset","_alignItems","_justifyContent","_width","_height","updateSize","parentStyles","shouldBeFlushHorizontally","shouldBeFlushVertically","marginLeft","marginTop","marginBottom","marginRight","parent","OverlayPositionBuilder","elementRef","OverlayPositionBuilder_Factory","nextUniqueId","Overlay","scrollStrategies","_componentFactoryResolver","_positionBuilder","_injector","_directionality","host","_createHostElement","pane","_createPaneElement","portalOutlet","_createPortalOutlet","overlayConfig","id","_appRef","get","Overlay_Factory","defaultPositionList","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_FACTORY","CdkOverlayOrigin","CdkOverlayOrigin_Factory","ɵdir","selectors","exportAs","CdkConnectedOverlay","_overlay","templateRef","viewContainerRef","scrollStrategyFactory","_dir","_hasBackdrop","_lockPosition","_flexibleDimensions","_push","_backdropSubscription","viewportMargin","open","backdropClick","positionChange","overlayKeydown","_templatePortal","_scrollStrategyFactory","changes","_position","_updatePositionStrategy","_attachOverlay","_detachOverlay","create","_buildConfig","keydownEvents","keyCode","preventDefault","_createPositionStrategy","currentPosition","withGrowAfterOpen","lockPosition","withTransformOriginOn","transformOriginSelector","flexibleConnectedTo","p","emit","_createOverlay","CdkConnectedOverlay_Factory","inputs","outputs","features","propDecorators","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER","OverlayModule","ɵmod","ɵinj","OverlayModule_Factory","providers","imports","ngJitMode","declarations","exports","OVERLAY_PROVIDERS","FullscreenOverlayContainer","_fullScreenEventName","_fullScreenListener","_adjustParentForFullscreenChange","_addFullscreenChangeListener","fullscreenElement","getFullscreenElement","fn","eventName","_getEventName","fullscreenEnabled","webkitFullscreenEnabled","mozFullScreenEnabled","msFullscreenEnabled","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","FullscreenOverlayContainer_Factory","throwNullPortalError","throwPortalAlreadyAttachedError","throwPortalOutletAlreadyDisposedError","throwUnknownPortalTypeError","throwNullPortalOutletError","throwNoPortalAttachedError","ComponentType","Portal","_attachedHost","ComponentPortal","component","injector","componentFactoryResolver","TemplatePortal","template","context","DomPortal","PortalOutlet","BasePortalOutlet","attachDomPortal","_attachedPortal","attachComponentPortal","attachTemplatePortal","setAttachedHost","_invokeDisposeFn","_disposeFn","BasePortalHost","DomPortalOutlet","outletElement","_defaultInjector","anchorNode","createComment","replaceChild","resolver","componentFactory","resolveComponentFactory","componentRef","createComponent","setDisposeFn","destroy","attachView","hostView","detachView","_getComponentRootNode","viewContainer","viewRef","createEmbeddedView","detectChanges","rootNodes","rootNode","DomPortalHost","CdkPortal","CdkPortal_Factory","TemplatePortalDirective","TemplatePortalDirective_Factory","ɵTemplatePortalDirective_BaseFactory","useExisting","CdkPortalOutlet","_viewContainerRef","_isInitialized","attached","_getRootNode","_attachedRef","ref","clear","nodeType","ELEMENT_NODE","CdkPortalOutlet_Factory","PortalHostDirective","PortalHostDirective_Factory","ɵPortalHostDirective_BaseFactory","PortalModule","PortalModule_Factory","PortalInjector","_parentInjector","_customTokens","notFoundValue","CdkStep_ng_template_0_Template","rf","ctx","_c0","CdkStepHeader","_elementRef","focus","CdkStepHeader_Factory","hostAttrs","CdkStepLabel","CdkStepLabel_Factory","nextId","StepperSelectionEvent","STEP_STATE","NUMBER","EDIT","DONE","ERROR","STEPPER_GLOBAL_OPTIONS","MAT_STEPPER_GLOBAL_OPTIONS","StepperOptions","CdkStep","_stepper","stepperOptions","interacted","_editable","_optional","_completedOverride","_customError","_stepperOptions","_displayDefaultIndicatorType","displayDefaultIndicatorType","_showError","showError","stepControl","valid","invalid","selected","reset","_stateChanged","_getDefaultCompleted","_getDefaultError","CdkStep_Factory","CdkStepper","ɵcmp","contentQueries","CdkStep_ContentQueries","dirIndex","_t","stepLabel","first","viewQuery","CdkStep_Query","content","editable","optional","completed","hasError","label","errorMessage","ariaLabel","ariaLabelledby","state","ngContentSelectors","decls","vars","CdkStep_Template","encapsulation","changeDetection","None","OnPush","_changeDetectorRef","_destroyed","_linear","_selectedIndex","selectionChange","_orientation","_groupId","_keyManager","_stepHeader","withWrap","withVerticalOrientation","_layoutDirection","withHorizontalOrientation","updateActiveItem","steps","selectedIndex","_updateSelectedItemIndex","step","markForCheck","toArray","isCurrentStep","_isCurrentStep","_getDefaultIndicatorLogic","_getGuidelineLogic","activeItemIndex","newIndex","stepsArray","previouslySelectedIndex","selectedStep","previouslySelectedStep","_containsFocus","setActiveItem","hasModifier","manager","setFirstItemActive","setLastItemActive","onKeydown","control","isIncomplete","pending","stepperElement","focusedElement","activeElement","_steps","_anyControlsInvalidOrPending","CdkStepper_Factory","CdkStepper_ContentQueries","linear","descendants","AbstractControlLike","CdkStepperNext","CdkStepperNext_Factory","hostVars","hostBindings","CdkStepperNext_HostBindings","CdkStepperNext_click_HostBindingHandler","_handleClick","CdkStepperPrevious","previous","CdkStepperPrevious_Factory","CdkStepperPrevious_HostBindings","CdkStepperPrevious_click_HostBindingHandler","CdkStepperModule","CdkStepperModule_Factory","listenerOptions","passive","AutofillMonitor","_monitoredElements","Map","elementOrRef","info","subject","result","listener","animationName","target","isAutofilled","set","unlisten","_info","stopMonitoring","AutofillMonitor_Factory","CdkAutofill","_autofillMonitor","cdkAutofill","monitor","CdkAutofill_Factory","CdkTextareaAutosize","_enabled","_previousMinRows","_textareaElement","minRows","_cachedLineHeight","maxRows","_initialHeight","resizeToFitContent","_getWindow","textareaClone","cloneNode","rows","visibility","border","padding","overflow","_setMinHeight","_setMaxHeight","force","_cacheTextareaLineHeight","textarea","_minRows","_previousValue","placeholderText","placeholder","_scrollToCaretPosition","doc","_getDocument","defaultView","selectionStart","selectionEnd","isStopped","setSelectionRange","_maxRows","CdkTextareaAutosize_Factory","CdkTextareaAutosize_HostBindings","CdkTextareaAutosize_input_HostBindingHandler","_noopInputHandler","enabled","TextFieldModule","TextFieldModule_Factory","_c1","_c2","_c3","_c4","_c5","MatCardContent","MatCardContent_Factory","MatCardTitle","MatCardTitle_Factory","MatCardSubtitle","MatCardSubtitle_Factory","MatCardActions","align","MatCardActions_Factory","MatCardActions_HostBindings","MatCardFooter","MatCardFooter_Factory","MatCardImage","MatCardImage_Factory","MatCardSmImage","MatCardSmImage_Factory","MatCardMdImage","MatCardMdImage_Factory","MatCardLgImage","MatCardLgImage_Factory","MatCardXlImage","MatCardXlImage_Factory","MatCardAvatar","MatCardAvatar_Factory","MatCard","_animationMode","MatCard_Factory","MatCard_HostBindings","MatCard_Template","String","MatCardHeader","MatCardHeader_Factory","consts","MatCardHeader_Template","MatCardTitleGroup","MatCardTitleGroup_Factory","MatCardTitleGroup_Template","MatCardModule","MatCardModule_Factory","enterDuration","MatCheckboxDefaultOptions","MAT_CHECKBOX_DEFAULT_OPTIONS","MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY","color","clickAction","MAT_CHECKBOX_CLICK_ACTION","MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR","MatCheckbox","multi","TransitionCheckState","Init","Checked","Unchecked","Indeterminate","MatCheckboxChange","MatCheckboxBase","_MatCheckboxMixinBase","_focusMonitor","tabIndex","_clickAction","_options","_uniqueId","labelPosition","name","indeterminateChange","_onTouched","_currentAnimationClass","_currentCheckState","_controlValueAccessorChangeFn","_checked","_disabled","_indeterminate","parseInt","focusOrigin","Promise","resolve","then","_syncIndeterminate","disableRipple","disabled","checked","isDisabled","indeterminate","newState","oldState","_getAnimationClassForCheckStateTransition","animationClass","stopPropagation","toggle","_transitionCheckState","_emitChangeEvent","_inputElement","options","focusVia","animSuffix","nativeCheckbox","_required","newValue","changed","MatCheckbox_Factory","MatCheckbox_Query","ripple","MatCheckbox_HostBindings","required","MatCheckbox_Template","MatCheckbox_Template_input_change_3_listener","$event","_onInteractionEvent","MatCheckbox_Template_input_click_3_listener","_onInputClick","MatCheckbox_Template_span_cdkObserveContent_12_listener","_onLabelTextChange","_r0","_r2","inputId","textContent","_getAriaChecked","_isRippleDisabled","directives","MAT_CHECKBOX_REQUIRED_VALIDATOR","MatCheckboxRequiredValidator","MatCheckboxRequiredValidator_Factory","ɵMatCheckboxRequiredValidator_BaseFactory","_MatCheckboxRequiredValidatorModule","_MatCheckboxRequiredValidatorModule_Factory","MatCheckboxModule","MatCheckboxModule_Factory","MatFormField_ng_container_3_Template","MatFormField_div_4_Template","MatFormField_label_9_ng_container_2_Template","ctx_r10","_control","MatFormField_label_9_3_Template","MatFormField_label_9_span_4_Template","MatFormField_label_9_Template","_r14","MatFormField_label_9_Template_label_cdkObserveContent_0_listener","ctx_r13","updateOutlineGap","ctx_r4","empty","_shouldAlwaysFloat","appearance","_labelId","_hasLabel","hideRequiredMarker","MatFormField_div_10_Template","MatFormField_div_11_Template","ctx_r6","MatFormField_div_13_Template","ctx_r7","_subscriptAnimationState","MatFormField_div_14_div_1_Template","ctx_r16","_hintLabelId","hintLabel","MatFormField_div_14_Template","ctx_r8","MatError","MatError_Factory","MatError_HostBindings","matFormFieldAnimations","transitionMessages","opacity","MatFormFieldControl","MatFormFieldControl_Factory","getMatFormFieldPlaceholderConflictError","getMatFormFieldDuplicatedHintError","getMatFormFieldMissingControlError","nextUniqueId$1","MatHint","MatHint_Factory","MatHint_HostBindings","MatLabel","MatLabel_Factory","MatPlaceholder","MatPlaceholder_Factory","MatPrefix","MatPrefix_Factory","MatSuffix","MatSuffix_Factory","nextUniqueId$2","floatingLabelScale","outlineGapPadding","MatFormFieldBase","_MatFormFieldMixinBase","MatFormFieldDefaultOptions","MAT_FORM_FIELD_DEFAULT_OPTIONS","MAT_FORM_FIELD","MatFormField","labelOptions","_defaults","_outlineGapCalculationNeededImmediately","_outlineGapCalculationNeededOnStable","_showAlwaysAnimate","_hintLabel","_labelOptions","floatLabel","_getDefaultFloatLabelState","_animationsEnabled","_hideRequiredMarker","_connectionContainerRef","_validateControlChild","controlType","stateChanges","_validatePlaceholders","_syncDescribedByIds","ngControl","valueChanges","_prefixChildren","_suffixChildren","_hintChildren","_processHints","_errorChildren","prop","_placeholderChild","_labelChild","_canLabelFloat","shouldLabelFloat","_shouldLabelFloat","_hasPlaceholder","errorState","_hasFloatingLabel","_label","_validateHints","startHint","endHint","hint","ids","_getDisplayedMessages","find","error","setDescribedByIds","labelEl","_isAttachedToDOM","startWidth","gapWidth","startEls","gapEls","containerRect","containerStart","_getStartEnd","labelStart","labelWidth","child","offsetWidth","rect","getRootNode","_appearance","oldValue","_floatLabel","_explicitFormFieldControl","_controlNonStatic","_controlStatic","_labelChildNonStatic","_labelChildStatic","MatFormField_Factory","MatFormField_ContentQueries","MatFormField_Query","underlineRef","_inputContainerRef","MatFormField_HostBindings","_hideControlPlaceholder","autofilled","focused","_shouldForward","MatFormField_Template","MatFormField_Template_div_click_1_listener","onContainerClick","data","animation","animations","MatFormFieldModule","MatFormFieldModule_Factory","MatTextareaAutosize","MatTextareaAutosize_Factory","ɵMatTextareaAutosize_BaseFactory","cdkAutosizeMinRows","cdkAutosizeMaxRows","matAutosizeMinRows","matAutosizeMaxRows","matAutosize","matTextareaAutosize","getMatInputUnsupportedTypeError","MAT_INPUT_VALUE_ACCESSOR","MAT_INPUT_INVALID_TYPES","MatInputBase","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","_MatInputMixinBase","MatInput","inputValueAccessor","ngZone","_uid","_isServer","_isNativeSelect","_type","_readonly","_neverEmptyInputTypes","filter","has","_inputValueAccessor","_previousNativeValue","IOS","el","nodeName","toLowerCase","multiple","updateErrorState","_dirtyCheckNativeValue","isFocused","readonly","validity","badInput","_ariaDescribedby","join","_id","_validateType","_isTextarea","_isNeverEmpty","_isBadInput","selectElement","firstOption","MatInput_Factory","MatInput_HostBindings","MatInput_blur_HostBindingHandler","_focusChanged","MatInput_focus_HostBindingHandler","MatInput_input_HostBindingHandler","_onInput","toString","errorStateMatcher","MatInputModule","MatInputModule_Factory","MatSelect_span_4_Template","ctx_r2","MatSelect_span_5_span_1_Template","ctx_r5","triggerValue","MatSelect_span_5_2_Template","MatSelect_span_5_Template","ctx_r3","customTrigger","MatSelect_ng_template_8_Template","_r9","MatSelect_ng_template_8_Template_div_animation_transformPanel_done_1_listener","_panelDoneAnimatingStream","toState","MatSelect_ng_template_8_Template_div_keydown_1_listener","_handleKeydown","_getPanelTheme","_transformOrigin","_triggerFontSize","matSelectAnimations","transformPanelWrap","transformPanel","getMatSelectDynamicMultipleError","getMatSelectNonArrayValueError","getMatSelectNonFunctionValueError","SELECT_PANEL_MAX_HEIGHT","SELECT_PANEL_PADDING_X","SELECT_PANEL_INDENT_PADDING_X","SELECT_ITEM_HEIGHT_EM","SELECT_MULTIPLE_PANEL_PADDING_X","SELECT_PANEL_VIEWPORT_PADDING","MAT_SELECT_SCROLL_STRATEGY","MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY","MatSelectConfig","MAT_SELECT_CONFIG","MAT_SELECT_SCROLL_STRATEGY_PROVIDER","MatSelectChange","MatSelectBase","_MatSelectMixinBase","MatSelectTrigger","MatSelectTrigger_Factory","MatSelect","_parentFormField","_liveAnnouncer","defaults","_panelOpen","_scrollTop","_multiple","_compareWith","o1","o2","_destroy","_onChange","_optionIds","_positions","_disableOptionCentering","_focused","optionSelectionChanges","option","onSelectionChange","openedChange","_openedStream","o","_closedStream","valueChange","valueAccessor","disableOptionCentering","typeaheadDebounceInterval","_selectionModel","panelOpen","overlayDir","_triggerRect","trigger","_initKeyManager","added","select","removed","deselect","_resetOptions","_initializeSelection","withTypeAhead","_typeaheadDebounceInterval","getComputedStyle","fontSize","_calculateOverlayPosition","_highlightCorrectOption","_setSelectionByValue","_handleOpenKeydown","_handleClosedKeydown","isArrowKey","isOpenKey","isTyping","altKey","previouslySelectedOption","selectedOption","announce","viewValue","activeItem","_selectViaInteraction","ctrlKey","hasDeselectedOptions","opt","previouslyFocusedIndex","shiftKey","_calculateOverlayOffsetX","panel","scrollTop","_value","Array","isArray","_selectValue","_sortValues","correspondingOption","console","warn","withAllowedModifierKeys","tabOut","_scrollActiveOptionIntoView","changedOrDestroyed","_onSelect","isUserInput","_stateChanges","_setOptionIds","wasSelected","isSelected","_propagateChanges","sort","a","b","sortComparator","fallbackValue","valueToEmit","activeOptionIndex","labelCount","optionGroups","_getItemHeight","current","itemHeight","items","_getItemCount","panelHeight","scrollContainerHeight","maxScroll","selectedOptionOffset","_getOptionIndex","scrollBuffer","_calculateOverlayScroll","_calculateOverlayOffsetY","_checkOverlayWithinViewport","optionOffsetFromScrollTop","halfOptionHeight","optimalScrollPosition","_getAriaLabel","viewportSize","paddingWidth","group","round","optionHeightAdjustment","maxOptionsDisplayed","floor","optionOffsetFromPanelTop","firstDisplayedIndex","selectedDisplayIndex","partialItemHeight","topSpaceAvailable","bottomSpaceAvailable","panelHeightTop","totalPanelHeight","panelHeightBottom","_adjustPanelUp","_adjustPanelDown","_getOriginBasedOnOption","distanceBelowViewport","distanceAboveViewport","_placeholder","writeValue","selectedOptions","reverse","isEmpty","MatSelect_Factory","MatSelect_ContentQueries","MatSelect_Query","MatSelect_HostBindings","MatSelect_keydown_HostBindingHandler","MatSelect_focus_HostBindingHandler","_onFocus","MatSelect_blur_HostBindingHandler","_onBlur","_getAriaLabelledby","_getAriaActiveDescendant","compareWith","MatSelect_Template","MatSelect_Template_div_click_0_listener","MatSelect_Template_ng_template_backdropClick_8_listener","MatSelect_Template_ng_template_attach_8_listener","_onAttached","MatSelect_Template_ng_template_detach_8_listener","MatSelectModule","MatSelectModule_Factory","MatStepHeader_ng_container_3_Template","ctx_r0","iconOverrides","_getIconContext","MatStepHeader_ng_container_4_span_1_Template","_getDefaultTextForState","MatStepHeader_ng_container_4_mat_icon_2_Template","MatStepHeader_ng_container_4_Template","ctx_r1","MatStepHeader_ng_container_6_Template","_templateLabel","MatStepHeader_div_7_Template","MatStepHeader_div_8_Template","_intl","optionalLabel","MatStepHeader_div_9_Template","MatStep_ng_template_0_Template","MatHorizontalStepper_ng_container_1_div_2_Template","MatHorizontalStepper_ng_container_1_Template","_r8","MatHorizontalStepper_ng_container_1_Template_mat_step_header_click_1_listener","step_r2","$implicit","MatHorizontalStepper_ng_container_1_Template_mat_step_header_keydown_1_listener","_onKeydown","i_r3","isLast_r4","last","_getFocusIndex","_getStepLabelId","_getIndicatorType","_iconOverrides","_getStepContentId","MatHorizontalStepper_div_3_Template","_r12","MatHorizontalStepper_div_3_Template_div_animation_stepTransition_done_0_listener","ctx_r11","_animationDone","step_r9","i_r10","_getAnimationDirection","MatVerticalStepper_div_0_Template","_r6","MatVerticalStepper_div_0_Template_mat_step_header_click_1_listener","step_r1","MatVerticalStepper_div_0_Template_mat_step_header_keydown_1_listener","MatVerticalStepper_div_0_Template_div_animation_stepTransition_done_3_listener","i_r2","isLast_r3","MatStepLabel","MatStepLabel_Factory","ɵMatStepLabel_BaseFactory","MatStepperIntl","MatStepperIntl_Factory","MAT_STEPPER_INTL_PROVIDER_FACTORY","parentIntl","MAT_STEPPER_INTL_PROVIDER","MatStepHeader","changeDetectorRef","_intlSubscription","active","MatStepHeader_Factory","MatStepHeader_Template","_getHostElement","_stringLabel","matStepperAnimations","horizontalStepTransition","verticalStepTransition","MatStepperIconContext","MatStepperIcon","MatStepperIcon_Factory","MatStep","stepper","_errorStateMatcher","form","originalErrorState","isErrorState","customErrorState","MatStep_Factory","MatStepper","MatStep_ContentQueries","MatStep_Template","arguments","animationDone","_icons","fromState","MatStepper_Factory","ɵMatStepper_BaseFactory","MatStepper_ContentQueries","MatStepper_Query","MatHorizontalStepper","MatHorizontalStepper_Factory","ɵMatHorizontalStepper_BaseFactory","MatHorizontalStepper_HostBindings","MatHorizontalStepper_Template","MatVerticalStepper","MatVerticalStepper_Factory","MatVerticalStepper_Template","MatStepperNext","MatStepperNext_Factory","ɵMatStepperNext_BaseFactory","MatStepperNext_HostBindings","MatStepperPrevious","MatStepperPrevious_Factory","ɵMatStepperPrevious_BaseFactory","MatStepperPrevious_HostBindings","MatStepperModule","MatStepperModule_Factory","routes","path","MixDesignRoutingModule","forChild","MixDesignComponent","_formBuilder","isLinear","firstFormGroup","firstCtrl","secondFormGroup","secondCtrl","templateUrl","styleUrls","MixDesignModule"],"mappingsiBA;;;;;;AAKA;;;;;QAGMA,mB;AACF;;;;AAIA,mCAAYC,cAAZ,EAA4BC,QAA5B,EAAsC;AAAA;;AAClC,aAAKD,cAAL,GAAsBA,cAAtB;AACA,aAAKE,mBAAL,GAA2B;AAAEC,aAAG,EAAE,EAAP;AAAWC,cAAI,EAAE;AAAjB,SAA3B;AACA,aAAKC,UAAL,GAAkB,KAAlB;AACA,aAAKC,SAAL,GAAiBL,QAAjB;AACH;AACD;;;;;;;;iCAIS,CAAG;AACZ;;;;;;;iCAIS;AACL,cAAI,KAAKM,aAAL,EAAJ,EAA0B;AACtB;AACA,gBAAMC,IAAI;AAAI;AAAkB,iBAAKF,SAAL,CAAeG,eAA/C;AACA,iBAAKC,uBAAL,GAA+B,KAAKV,cAAL,CAAoBW,yBAApB,EAA/B,CAHsB,CAItB;;AACA,iBAAKT,mBAAL,CAAyBE,IAAzB,GAAgCI,IAAI,CAACI,KAAL,CAAWR,IAAX,IAAmB,EAAnD;AACA,iBAAKF,mBAAL,CAAyBC,GAAzB,GAA+BK,IAAI,CAACI,KAAL,CAAWT,GAAX,IAAkB,EAAjD,CANsB,CAOtB;AACA;;AACAK,gBAAI,CAACI,KAAL,CAAWR,IAAX,GAAkB,kFAAoB,CAAC,KAAKM,uBAAL,CAA6BN,IAAlD,CAAlB;AACAI,gBAAI,CAACI,KAAL,CAAWT,GAAX,GAAiB,kFAAoB,CAAC,KAAKO,uBAAL,CAA6BP,GAAlD,CAAjB;AACAK,gBAAI,CAACK,SAAL,CAAeC,GAAf,CAAmB,wBAAnB;AACA,iBAAKT,UAAL,GAAkB,IAAlB;AACH;AACJ;AACD;;;;;;;kCAIU;AACN,cAAI,KAAKA,UAAT,EAAqB;AACjB;AACA,gBAAMU,IAAI;AAAI;AAAkB,iBAAKT,SAAL,CAAeG,eAA/C;AACA;;AACA,gBAAMO,IAAI;AAAI;AAAkB,iBAAKV,SAAL,CAAeU,IAA/C;AACA;;AACA,gBAAMC,SAAS;AAAI;AAAkBF,gBAAI,CAACH,KAA1C;AACA;;AACA,gBAAMM,SAAS;AAAI;AAAkBF,gBAAI,CAACJ,KAA1C;AACA;;AACA,gBAAMO,0BAA0B,GAAGF,SAAS,CAACG,cAAV,IAA4B,EAA/D;AACA;;AACA,gBAAMC,0BAA0B,GAAGH,SAAS,CAACE,cAAV,IAA4B,EAA/D;AACA,iBAAKf,UAAL,GAAkB,KAAlB;AACAY,qBAAS,CAACb,IAAV,GAAiB,KAAKF,mBAAL,CAAyBE,IAA1C;AACAa,qBAAS,CAACd,GAAV,GAAgB,KAAKD,mBAAL,CAAyBC,GAAzC;AACAY,gBAAI,CAACF,SAAL,CAAeS,MAAf,CAAsB,wBAAtB,EAhBiB,CAiBjB;AACA;;AACAL,qBAAS,CAACG,cAAV,GAA2BF,SAAS,CAACE,cAAV,GAA2B,MAAtD;AACAG,kBAAM,CAACC,MAAP,CAAc,KAAKd,uBAAL,CAA6BN,IAA3C,EAAiD,KAAKM,uBAAL,CAA6BP,GAA9E;AACAc,qBAAS,CAACG,cAAV,GAA2BD,0BAA3B;AACAD,qBAAS,CAACE,cAAV,GAA2BC,0BAA3B;AACH;AACJ;AACD;;;;;;;wCAIgB;AACZ;AACA;AACA;;AACA;AACA,cAAMN,IAAI;AAAI;AAAkB,eAAKT,SAAL,CAAeG,eAA/C;;AACA,cAAIM,IAAI,CAACF,SAAL,CAAeY,QAAf,CAAwB,wBAAxB,KAAqD,KAAKpB,UAA9D,EAA0E;AACtE,mBAAO,KAAP;AACH;AACD;;;AACA,cAAMW,IAAI,GAAG,KAAKV,SAAL,CAAeU,IAA5B;AACA;;AACA,cAAMU,QAAQ,GAAG,KAAK1B,cAAL,CAAoB2B,eAApB,EAAjB;;AACA,iBAAOX,IAAI,CAACY,YAAL,GAAoBF,QAAQ,CAACG,MAA7B,IAAuCb,IAAI,CAACc,WAAL,GAAmBJ,QAAQ,CAACK,KAA1E;AACH;;;;;;AAEL,QAAI,KAAJ,EAAW,CA0BV;AAED;;;;;;AAKA;;;;;;;;AAOA;;;;;;AAIA,aAASC,cAAT,GAA0B,CAAG;;AAC7B,QAAI,KAAJ,EAAW,CAqBV;AACD;;;;;;AAIA,aAASC,wCAAT,GAAoD;AAChD,aAAOC,KAAK,8CAAZ;AACH;AAED;;;;;;AAKA;;;;;;AAIA,aAASC,yBAAT,GAAqC,CAAG;;AACxC,QAAI,KAAJ,EAAW,CAMV;AACD;;;;;QAGMC,mB;AACF;;;;;;AAMA,mCAAYC,iBAAZ,EAA+BC,OAA/B,EAAwCtC,cAAxC,EAAwDuC,OAAxD,EAAiE;AAAA;;AAAA;;AAC7D,aAAKF,iBAAL,GAAyBA,iBAAzB;AACA,aAAKC,OAAL,GAAeA,OAAf;AACA,aAAKtC,cAAL,GAAsBA,cAAtB;AACA,aAAKuC,OAAL,GAAeA,OAAf;AACA,aAAKC,mBAAL,GAA2B,IAA3B;AACA;;;;AAGA,aAAKC,OAAL;AAAgB;;;AAGhB,oBAAM;AACF,eAAI,CAACC,OAAL;;AACA,cAAI,KAAI,CAACC,WAAL,CAAiBC,WAAjB,EAAJ,EAAoC;AAChC,iBAAI,CAACN,OAAL,CAAaO,GAAb;AAAkB;;;AAGlB;AAAA,qBAAM,KAAI,CAACF,WAAL,CAAiBG,MAAjB,EAAN;AAAA,aAHA;AAIH;AACJ,SAXD;AAYH;AACD;;;;;;;;;+BAKOC,U,EAAY;AACf,cAAI,KAAKJ,WAAT,EAAsB;AAClB,kBAAMV,wCAAwC,EAA9C;AACH;;AACD,eAAKU,WAAL,GAAmBI,UAAnB;AACH;AACD;;;;;;;iCAIS;AAAA;;AACL,cAAI,KAAKP,mBAAT,EAA8B;AAC1B;AACH;AACD;;;AACA,cAAMQ,MAAM,GAAG,KAAKX,iBAAL,CAAuBY,QAAvB,CAAgC,CAAhC,CAAf;;AACA,cAAI,KAAKV,OAAL,IAAgB,KAAKA,OAAL,CAAaW,SAA7B,IAA0C,KAAKX,OAAL,CAAaW,SAAb,GAAyB,CAAvE,EAA0E;AACtE,iBAAKC,sBAAL,GAA8B,KAAKnD,cAAL,CAAoBW,yBAApB,GAAgDR,GAA9E;AACA,iBAAKqC,mBAAL,GAA2BQ,MAAM,CAACI,SAAP;AAAkB;;;AAG7C,wBAAM;AACF;AACA,kBAAMC,cAAc,GAAG,MAAI,CAACrD,cAAL,CAAoBW,yBAApB,GAAgDR,GAAvE;;AACA,kBAAImD,IAAI,CAACC,GAAL,CAASF,cAAc,GAAG,MAAI,CAACF,sBAA/B;AAA0D;;AAAmB;AAAkB,oBAAI,CAACZ,OAAxB,CAAkCW,SAAlH,EAA+H;AAC3H,sBAAI,CAACT,OAAL;AACH,eAFD,MAGK;AACD,sBAAI,CAACE,WAAL,CAAiBa,cAAjB;AACH;AACJ,aAZ0B,CAA3B;AAaH,WAfD,MAgBK;AACD,iBAAKhB,mBAAL,GAA2BQ,MAAM,CAACI,SAAP,CAAiB,KAAKX,OAAtB,CAA3B;AACH;AACJ;AACD;;;;;;;kCAIU;AACN,cAAI,KAAKD,mBAAT,EAA8B;AAC1B,iBAAKA,mBAAL,CAAyBiB,WAAzB;;AACA,iBAAKjB,mBAAL,GAA2B,IAA3B;AACH;AACJ;AACD;;;;;;iCAGS;AACL,eAAKE,OAAL;AACA,eAAKC,WAAL;AAAoB;AAAkB,cAAtC;AACH;;;;;;AAEL,QAAI,KAAJ,EAAW,CA0CV;AAED;;;;;;AAKA;;;;;;;;AAOA;;;;;QAGMe,kB;;;;;;;;AACF;;;;iCAIS,CAAG;AACZ;;;;;;;kCAIU,CAAG;AACb;;;;;;;iCAIS,CAAG;;;;;AAGhB;;;;;;AAKA;;;;;;;AAOA;AACA;;AACA;;;;;;;;;AAOA,aAASC,4BAAT,CAAsCC,OAAtC,EAA+CC,gBAA/C,EAAiE;AAC7D,aAAOA,gBAAgB,CAACC,IAAjB;AAAuB;;;;AAI9B,gBAAAC,eAAe,EAAI;AACf;AACA,YAAMC,YAAY,GAAGJ,OAAO,CAACK,MAAR,GAAiBF,eAAe,CAAC5D,GAAtD;AACA;;AACA,YAAM+D,YAAY,GAAGN,OAAO,CAACzD,GAAR,GAAc4D,eAAe,CAACE,MAAnD;AACA;;AACA,YAAME,WAAW,GAAGP,OAAO,CAACQ,KAAR,GAAgBL,eAAe,CAAC3D,IAApD;AACA;;AACA,YAAMiE,YAAY,GAAGT,OAAO,CAACxD,IAAR,GAAe2D,eAAe,CAACK,KAApD;AACA,eAAOJ,YAAY,IAAIE,YAAhB,IAAgCC,WAAhC,IAA+CE,YAAtD;AACH,OAdM,CAAP;AAeH;AACD;;;;;;;;;AAOA,aAASC,2BAAT,CAAqCV,OAArC,EAA8CC,gBAA9C,EAAgE;AAC5D,aAAOA,gBAAgB,CAACC,IAAjB;AAAuB;;;;AAI9B,gBAAAS,mBAAmB,EAAI;AACnB;AACA,YAAMC,YAAY,GAAGZ,OAAO,CAACzD,GAAR,GAAcoE,mBAAmB,CAACpE,GAAvD;AACA;;AACA,YAAMsE,YAAY,GAAGb,OAAO,CAACK,MAAR,GAAiBM,mBAAmB,CAACN,MAA1D;AACA;;AACA,YAAMS,WAAW,GAAGd,OAAO,CAACxD,IAAR,GAAemE,mBAAmB,CAACnE,IAAvD;AACA;;AACA,YAAMuE,YAAY,GAAGf,OAAO,CAACQ,KAAR,GAAgBG,mBAAmB,CAACH,KAAzD;AACA,eAAOI,YAAY,IAAIC,YAAhB,IAAgCC,WAAhC,IAA+CC,YAAtD;AACH,OAdM,CAAP;AAeH;AAED;;;;;;AAKA;;;;;;AAIA,aAASC,8BAAT,GAA0C,CAAG;;AAC7C,QAAI,KAAJ,EAAW,CAWV;AACD;;;;;QAGMC,wB;AACF;;;;;;AAMA,wCAAYxC,iBAAZ,EAA+BrC,cAA/B,EAA+CsC,OAA/C,EAAwDC,OAAxD,EAAiE;AAAA;;AAC7D,aAAKF,iBAAL,GAAyBA,iBAAzB;AACA,aAAKrC,cAAL,GAAsBA,cAAtB;AACA,aAAKsC,OAAL,GAAeA,OAAf;AACA,aAAKC,OAAL,GAAeA,OAAf;AACA,aAAKC,mBAAL,GAA2B,IAA3B;AACH;AACD;;;;;;;;;+BAKOO,U,EAAY;AACf,cAAI,KAAKJ,WAAT,EAAsB;AAClB,kBAAMV,wCAAwC,EAA9C;AACH;;AACD,eAAKU,WAAL,GAAmBI,UAAnB;AACH;AACD;;;;;;;iCAIS;AAAA;;AACL,cAAI,CAAC,KAAKP,mBAAV,EAA+B;AAC3B;AACA,gBAAMsC,QAAQ,GAAG,KAAKvC,OAAL,GAAe,KAAKA,OAAL,CAAawC,cAA5B,GAA6C,CAA9D;AACA,iBAAKvC,mBAAL,GAA2B,KAAKH,iBAAL,CAAuBY,QAAvB,CAAgC6B,QAAhC,EAA0C1B,SAA1C;AAAqD;;;AAGhF,wBAAM;AACF,oBAAI,CAACT,WAAL,CAAiBa,cAAjB,GADE,CAEF;;;AACA,kBAAI,MAAI,CAACjB,OAAL,IAAgB,MAAI,CAACA,OAAL,CAAayC,SAAjC,EAA4C;AACxC;AACA,oBAAMC,WAAW,GAAG,MAAI,CAACtC,WAAL,CAAiBuC,cAAjB,CAAgCC,qBAAhC,EAApB;;AAFwC,4CAGd,MAAI,CAACnF,cAAL,CAAoB2B,eAApB,EAHc;AAAA,oBAGhCI,KAHgC,yBAGhCA,KAHgC;AAAA,oBAGzBF,MAHyB,yBAGzBA,MAHyB,EAIxC;AACA;;AACA;;;AACA,oBAAMuD,WAAW,GAAG,CAAC;AAAErD,uBAAK,EAALA,KAAF;AAASF,wBAAM,EAANA,MAAT;AAAiBoC,wBAAM,EAAEpC,MAAzB;AAAiCuC,uBAAK,EAAErC,KAAxC;AAA+C5B,qBAAG,EAAE,CAApD;AAAuDC,sBAAI,EAAE;AAA7D,iBAAD,CAApB;;AACA,oBAAIuD,4BAA4B,CAACsB,WAAD,EAAcG,WAAd,CAAhC,EAA4D;AACxD,wBAAI,CAAC1C,OAAL;;AACA,wBAAI,CAACJ,OAAL,CAAaO,GAAb;AAAkB;;;AAGlB;AAAA,2BAAM,MAAI,CAACF,WAAL,CAAiBG,MAAjB,EAAN;AAAA,mBAHA;AAIH;AACJ;AACJ,aAtB0B,CAA3B;AAuBH;AACJ;AACD;;;;;;;kCAIU;AACN,cAAI,KAAKN,mBAAT,EAA8B;AAC1B,iBAAKA,mBAAL,CAAyBiB,WAAzB;;AACA,iBAAKjB,mBAAL,GAA2B,IAA3B;AACH;AACJ;AACD;;;;;;iCAGS;AACL,eAAKE,OAAL;AACA,eAAKC,WAAL;AAAoB;AAAkB,cAAtC;AACH;;;;;;AAEL,QAAI,KAAJ,EAAW,CA+BV;AAED;;;;;;AAKA;;;;;;;;QAMM0C,qB;AACF;;;;;;AAMA,mCAAYhD,iBAAZ,EAA+BrC,cAA/B,EAA+CsC,OAA/C,EAAwDrC,QAAxD,EAAkE;AAAA;;AAAA;;AAC9D,WAAKoC,iBAAL,GAAyBA,iBAAzB;AACA,WAAKrC,cAAL,GAAsBA,cAAtB;AACA,WAAKsC,OAAL,GAAeA,OAAf;AACA;;;;AAGA,WAAKgD,IAAL;AAAa;;;AAGb;AAAA,eAAM,IAAI5B,kBAAJ,EAAN;AAAA,OAHA;AAIA;;;;;;AAIA,WAAK6B,KAAL;AAAc;;;;AAId,gBAACC,MAAD;AAAA,eAAY,IAAIpD,mBAAJ,CAAwB,MAAI,CAACC,iBAA7B,EAAgD,MAAI,CAACC,OAArD,EAA8D,MAAI,CAACtC,cAAnE,EAAmFwF,MAAnF,CAAZ;AAAA,OAJA;AAKA;;;;;AAGA,WAAKC,KAAL;AAAc;;;AAGd;AAAA,eAAM,IAAI1F,mBAAJ,CAAwB,MAAI,CAACC,cAA7B,EAA6C,MAAI,CAACM,SAAlD,CAAN;AAAA,OAHA;AAIA;;;;;;;AAKA,WAAKoF,UAAL;AAAmB;;;;AAInB,gBAACF,MAAD;AAAA,eAAY,IAAIX,wBAAJ,CAA6B,MAAI,CAACxC,iBAAlC,EAAqD,MAAI,CAACrC,cAA1D,EAA0E,MAAI,CAACsC,OAA/E,EAAwFkD,MAAxF,CAAZ;AAAA,OAJA;;AAKA,WAAKlF,SAAL,GAAiBL,QAAjB;AACH,K;;AAELoF,yBAAqB,CAACM,IAAtB,GAA6B,SAASC,6BAAT,CAAuCC,CAAvC,EAA0C;AAAE,aAAO,KAAKA,CAAC,IAAIR,qBAAV,EAAiC,uDAAgB,uEAAhB,CAAjC,EAA2E,uDAAgB,oEAAhB,CAA3E,EAAkH,uDAAgB,oDAAhB,CAAlH,EAAkJ,uDAAgB,wDAAhB,CAAlJ,CAAP;AAAsL,KAA/P;AACA;;;AACAA,yBAAqB,CAACS,cAAtB,GAAuC;AAAA,aAAM,CACzC;AAAEC,YAAI,EAAE;AAAR,OADyC,EAEzC;AAAEA,YAAI,EAAE;AAAR,OAFyC,EAGzC;AAAEA,YAAI,EAAE;AAAR,OAHyC,EAIzC;AAAEA,YAAI,EAAEC,SAAR;AAAmBC,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAAC,wDAAD;AAAtB,SAAD;AAA/B,OAJyC,CAAN;AAAA,KAAvC;AAMA;;;AAAmBb,yBAAqB,CAACc,KAAtB,GAA8B,yEAAmB;AAAEC,aAAO,EAAE,SAASR,6BAAT,GAAyC;AAAE,eAAO,IAAIP,qBAAJ,CAA0B,+DAAS,uEAAT,CAA1B,EAAsD,+DAAS,oEAAT,CAAtD,EAA+E,+DAAS,oDAAT,CAA/E,EAAiG,+DAAS,wDAAT,CAAjG,CAAP;AAA8H,OAApL;AAAsLgB,WAAK,EAAEhB,qBAA7L;AAAoNiB,gBAAU,EAAE;AAAhO,KAAnB,CAA9B;AACnB;;AAAc,KAAC,YAAY;AAAE,sEAAyBjB,qBAAzB,EAAgD,CAAC;AACtEU,YAAI,EAAE,wDADgE;AAEtEG,YAAI,EAAE,CAAC;AAAEI,oBAAU,EAAE;AAAd,SAAD;AAFgE,OAAD,CAAhD,EAGrB,YAAY;AAAE,eAAO,CAAC;AAAEP,cAAI,EAAE;AAAR,SAAD,EAAoC;AAAEA,cAAI,EAAE;AAAR,SAApC,EAAoE;AAAEA,cAAI,EAAE;AAAR,SAApE,EAA6F;AAAEA,cAAI,EAAEC,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAC1IF,gBAAI,EAAE,oDADoI;AAE1IG,gBAAI,EAAE,CAAC,wDAAD;AAFoI,WAAD;AAA/B,SAA7F,CAAP;AAGF,OANS,EAMP,IANO;AAMC,KANhB;;AAOd,QAAI,KAAJ,EAAW,CA4CV;AAED;;;;;;AAMA;;;;;;AAKA;;;;;QAGMK,a;AACF;;;AAGA,2BAAYf,MAAZ,EAAoB;AAAA;;AAChB;;;AAGA,WAAKgB,cAAL,GAAsB,IAAI9C,kBAAJ,EAAtB;AACA;;;;AAGA,WAAK+C,UAAL,GAAkB,EAAlB;AACA;;;;AAGA,WAAKC,WAAL,GAAmB,KAAnB;AACA;;;;AAGA,WAAKC,aAAL,GAAqB,2BAArB;AACA;;;;;;AAKA,WAAKC,mBAAL,GAA2B,KAA3B;;AACA,UAAIpB,MAAJ,EAAY;AACR;AACA;AACA;;AACA;AACA,YAAMqB,UAAU;AAAI;AAAkBC,cAAM,CAACC,IAAP,CAAYvB,MAAZ,CAAtC;;AACA,uCAAkBqB,UAAlB,iCAA8B;AAAzB,cAAMG,GAAG,kBAAT;;AACD,cAAIxB,MAAM,CAACwB,GAAD,CAAN,KAAgBhB,SAApB,EAA+B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,iBAAKgB,GAAL;AAAa;AAAkBxB,kBAAM,CAACwB,GAAD,CAArC;AACH;AACJ;AACJ;AACJ,K;;AAEL,QAAI,KAAJ,EAAW,CAqEV;AAED;;;;;;AAKA;;;;;;AAIA,aAASC,wBAAT,GAAoC,CAAG;;AACvC,QAAI,KAAJ,EAAW,CAKV;AACD;;;;;;AAIA,aAASC,yBAAT,GAAqC,CAAG;;AACxC,QAAI,KAAJ,EAAW,CAKV;AACD;;;;;QAGMC,sB;AACF;;;;;;;AAOA,oCAAYC,MAAZ,EAAoBC,OAApB,EAA6BC,OAA7B,EAAsCC,OAAtC,EAA+Cd,UAA/C,EAA2D;AAAA;;AACvD,WAAKa,OAAL,GAAeA,OAAf;AACA,WAAKC,OAAL,GAAeA,OAAf;AACA,WAAKd,UAAL,GAAkBA,UAAlB;AACA,WAAKe,OAAL,GAAeJ,MAAM,CAACI,OAAtB;AACA,WAAKC,OAAL,GAAeL,MAAM,CAACK,OAAtB;AACA,WAAKC,QAAL,GAAgBL,OAAO,CAACK,QAAxB;AACA,WAAKC,QAAL,GAAgBN,OAAO,CAACM,QAAxB;AACH,K;;AAEL,QAAI,KAAJ,EAAW,CAoCV;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;QAyBMC,mB;;;;AAEN,QAAI,KAAJ,EAAW,CASV;AACD;;;;;QAGMC,8B;AACF;;;;AAIA,4CAAYC,cAAZ,EAA4BC,wBAA5B,EAAsD;AAAA;;AAClD,WAAKD,cAAL,GAAsBA,cAAtB;AACA,WAAKC,wBAAL,GAAgCA,wBAAhC;AACH,K;AAEL;;;AACAF,kCAA8B,CAAC/B,cAA/B,GAAgD;AAAA,aAAM,CAClD;AAAEC,YAAI,EAAEoB;AAAR,OADkD,EAElD;AAAEpB,YAAI,EAAE6B,mBAAR;AAA6B3B,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD;AAAzC,OAFkD,CAAN;AAAA,KAAhD;;AAIA,QAAI,KAAJ,EAAW,CAWV;AACD;;;;;;;;;AAOA,aAASiC,wBAAT,CAAkCC,QAAlC,EAA4CC,KAA5C,EAAmD;AAC/C,UAAIA,KAAK,KAAK,KAAV,IAAmBA,KAAK,KAAK,QAA7B,IAAyCA,KAAK,KAAK,QAAvD,EAAiE;AAC7D,cAAMhG,KAAK,CAAC,qCAA8B+F,QAA9B,gBAA2CC,KAA3C,yDAAD,CAAX;AAEH;AACJ;AACD;;;;;;;;;AAOA,aAASC,0BAAT,CAAoCF,QAApC,EAA8CC,KAA9C,EAAqD;AACjD,UAAIA,KAAK,KAAK,OAAV,IAAqBA,KAAK,KAAK,KAA/B,IAAwCA,KAAK,KAAK,QAAtD,EAAgE;AAC5D,cAAMhG,KAAK,CAAC,qCAA8B+F,QAA9B,gBAA2CC,KAA3C,wDAAD,CAAX;AAEH;AACJ;AAED;;;;;;AAKA;;;;;;;QAKME,yB;AACF;;;AAGA,yCAAYnI,QAAZ,EAAsB;AAAA;;AAAA;;AAClB;;;AAGA,aAAKoI,iBAAL,GAAyB,EAAzB;AACA;;;;AAGA,aAAKC,gBAAL;AAAyB;;;;AAIzB,kBAACC,KAAD,EAAW;AACP;AACA,cAAMC,QAAQ,GAAG,MAAI,CAACH,iBAAtB;;AACA,eAAK,IAAII,CAAC,GAAGD,QAAQ,CAACE,MAAT,GAAkB,CAA/B,EAAkCD,CAAC,GAAG,CAAC,CAAvC,EAA0CA,CAAC,EAA3C,EAA+C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,gBAAID,QAAQ,CAACC,CAAD,CAAR,CAAYE,0BAAZ,GAAyC,CAA7C,EAAgD;AAC5CH,sBAAQ,CAACC,CAAD,CAAR,CAAYG,cAAZ,CAA2BC,IAA3B,CAAgCN,KAAhC;;AACA;AACH;AACJ;AACJ,SAnBD;;AAoBA,aAAKjI,SAAL,GAAiBL,QAAjB;AACH;AACD;;;;;;;sCAGc;AACV,eAAKwC,OAAL;AACH;AACD;;;;;;;;4BAKIM,U,EAAY;AACZ;AACA,eAAKzB,MAAL,CAAYyB,UAAZ,EAFY,CAGZ;;AACA,cAAI,CAAC,KAAK+F,WAAV,EAAuB;AACnB,iBAAKxI,SAAL,CAAeU,IAAf,CAAoB+H,gBAApB,CAAqC,SAArC,EAAgD,KAAKT,gBAArD;;AACA,iBAAKQ,WAAL,GAAmB,IAAnB;AACH;;AACD,eAAKT,iBAAL,CAAuBW,IAAvB,CAA4BjG,UAA5B;AACH;AACD;;;;;;;;+BAKOA,U,EAAY;AACf;AACA,cAAMkG,KAAK,GAAG,KAAKZ,iBAAL,CAAuBa,OAAvB,CAA+BnG,UAA/B,CAAd;;AACA,cAAIkG,KAAK,GAAG,CAAC,CAAb,EAAgB;AACZ,iBAAKZ,iBAAL,CAAuBc,MAAvB,CAA8BF,KAA9B,EAAqC,CAArC;AACH,WALc,CAMf;;;AACA,cAAI,KAAKZ,iBAAL,CAAuBK,MAAvB,KAAkC,CAAtC,EAAyC;AACrC,iBAAKjG,OAAL;AACH;AACJ;AACD;;;;;;;;kCAKU;AACN,cAAI,KAAKqG,WAAT,EAAsB;AAClB,iBAAKxI,SAAL,CAAeU,IAAf,CAAoBoI,mBAApB,CAAwC,SAAxC,EAAmD,KAAKd,gBAAxD;;AACA,iBAAKQ,WAAL,GAAmB,KAAnB;AACH;AACJ;;;;;;AAELV,6BAAyB,CAACzC,IAA1B,GAAiC,SAAS0D,iCAAT,CAA2CxD,CAA3C,EAA8C;AAAE,aAAO,KAAKA,CAAC,IAAIuC,yBAAV,EAAqC,uDAAgB,wDAAhB,CAArC,CAAP;AAAyE,KAA1J;AACA;;;AACAA,6BAAyB,CAACtC,cAA1B,GAA2C;AAAA,aAAM,CAC7C;AAAEC,YAAI,EAAEC,SAAR;AAAmBC,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAAC,wDAAD;AAAtB,SAAD;AAA/B,OAD6C,CAAN;AAAA,KAA3C;AAGA;;;AAAmBkC,6BAAyB,CAACjC,KAA1B,GAAkC,yEAAmB;AAAEC,aAAO,EAAE,SAASiD,iCAAT,GAA6C;AAAE,eAAO,IAAIjB,yBAAJ,CAA8B,+DAAS,wDAAT,CAA9B,CAAP;AAA2D,OAArH;AAAuH/B,WAAK,EAAE+B,yBAA9H;AAAyJ9B,gBAAU,EAAE;AAArK,KAAnB,CAAlC;AACnB;;AAAc,KAAC,YAAY;AAAE,sEAAyB8B,yBAAzB,EAAoD,CAAC;AAC1ErC,YAAI,EAAE,wDADoE;AAE1EG,YAAI,EAAE,CAAC;AAAEI,oBAAU,EAAE;AAAd,SAAD;AAFoE,OAAD,CAApD,EAGrB,YAAY;AAAE,eAAO,CAAC;AAAEP,cAAI,EAAEC,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAC9CF,gBAAI,EAAE,oDADwC;AAE9CG,gBAAI,EAAE,CAAC,wDAAD;AAFwC,WAAD;AAA/B,SAAD,CAAP;AAGF,OANS,EAMP,IANO;AAMC,KANhB;;AAOd,QAAI,KAAJ,EAAW,CAsBV;AACD;;;;;;;;AAMA,aAASoD,4CAAT,CAAsDC,UAAtD,EAAkEjJ,SAAlE,EAA6E;AACzE,aAAOiJ,UAAU,IAAI,IAAInB,yBAAJ,CAA8B9H,SAA9B,CAArB;AACH;AACD;;;;;;AAIA,QAAMkJ,oCAAoC,GAAG;AACzC;AACA;AACAC,aAAO,EAAErB,yBAHgC;AAIzCsB,UAAI,EAAE,CACF,CAAC,IAAI,sDAAJ,EAAD,EAAiB,IAAI,sDAAJ,EAAjB,EAAiCtB,yBAAjC,CADE;AAED;AACD;AACA;AACA,8DALE,CAJmC;AAWzCuB,gBAAU,EAAEL;AAX6B,KAA7C;AAcA;;;;;;AAKA;;;;;;AAKA,QAAMM,iBAAiB,GAAG,OAAOrI,MAAP,KAAkB,WAAlB,IAAiC,CAAC,CAACA,MAAnC,IACtB,CAAC;AAAI;AAAkBA,UAApB,CAA8BsI,SAA9B;AAA6C;AAAkBtI,UAApB,CAA8BuI,OAA3E,CADL;AAEA;;;;QAGMC,gB;AACF;;;;AAIA,gCAAY9J,QAAZ,EAAsB+J,SAAtB,EAAiC;AAAA;;AAC7B,aAAKA,SAAL,GAAiBA,SAAjB;AACA,aAAK1J,SAAL,GAAiBL,QAAjB;AACH;AACD;;;;;;;sCAGc;AACV;AACA,cAAMgK,SAAS,GAAG,KAAKC,iBAAvB;;AACA,cAAID,SAAS,IAAIA,SAAS,CAACE,UAA3B,EAAuC;AACnCF,qBAAS,CAACE,UAAV,CAAqBC,WAArB,CAAiCH,SAAjC;AACH;AACJ;AACD;;;;;;;;;8CAMsB;AAClB,cAAI,CAAC,KAAKC,iBAAV,EAA6B;AACzB,iBAAKG,gBAAL;AACH;;AACD,iBAAO,KAAKH,iBAAZ;AACH;AACD;;;;;;;;;2CAMmB;AACf;;AACA;AACA,cAAMI,SAAS,GAAG,KAAKN,SAAL,GAAiB,KAAKA,SAAL,CAAeM,SAAhC,GAA4C,OAAO/I,MAAP,KAAkB,WAAhF;AACA;;AACA,cAAMgJ,cAAc,GAAG,uBAAvB;;AACA,cAAID,SAAS,IAAIV,iBAAjB,EAAoC;AAChC;AACA,gBAAMY,0BAA0B,GAAG,KAAKlK,SAAL,CAAemK,gBAAf,CAAgC,WAAIF,cAAJ,0CAC3DA,cAD2D,wBAAhC,CAAnC,CAFgC,CAIhC;AACA;;;AACA,iBAAK,IAAI9B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG+B,0BAA0B,CAAC9B,MAA/C,EAAuDD,CAAC,EAAxD,EAA4D;AACvD;AAAkB+B,wCAA0B,CAAC/B,CAAD,CAA1B,CAA8B0B,UAAjD,CAA8DC,WAA9D,CAA0EI,0BAA0B,CAAC/B,CAAD,CAApG;AACH;AACJ;AACD;;;AACA,cAAMwB,SAAS,GAAG,KAAK3J,SAAL,CAAeoK,aAAf,CAA6B,KAA7B,CAAlB;;AACAT,mBAAS,CAACpJ,SAAV,CAAoBC,GAApB,CAAwByJ,cAAxB,EAlBe,CAmBf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,cAAIX,iBAAJ,EAAuB;AACnBK,qBAAS,CAACU,YAAV,CAAuB,UAAvB,EAAmC,MAAnC;AACH,WAFD,MAGK,IAAI,CAACL,SAAL,EAAgB;AACjBL,qBAAS,CAACU,YAAV,CAAuB,UAAvB,EAAmC,QAAnC;AACH;;AACD,eAAKrK,SAAL,CAAeU,IAAf,CAAoB4J,WAApB,CAAgCX,SAAhC;;AACA,eAAKC,iBAAL,GAAyBD,SAAzB;AACH;;;;;;AAELF,oBAAgB,CAACpE,IAAjB,GAAwB,SAASkF,wBAAT,CAAkChF,CAAlC,EAAqC;AAAE,aAAO,KAAKA,CAAC,IAAIkE,gBAAV,EAA4B,uDAAgB,wDAAhB,CAA5B,EAAuD,uDAAgB,8DAAhB,CAAvD,CAAP;AAAkG,KAAjK;AACA;;;AACAA,oBAAgB,CAACjE,cAAjB,GAAkC;AAAA,aAAM,CACpC;AAAEC,YAAI,EAAEC,SAAR;AAAmBC,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAAC,wDAAD;AAAtB,SAAD;AAA/B,OADoC,EAEpC;AAAEH,YAAI,EAAE;AAAR,OAFoC,CAAN;AAAA,KAAlC;AAIA;;;AAAmBgE,oBAAgB,CAAC5D,KAAjB,GAAyB,yEAAmB;AAAEC,aAAO,EAAE,SAASyE,wBAAT,GAAoC;AAAE,eAAO,IAAId,gBAAJ,CAAqB,+DAAS,wDAAT,CAArB,EAAyC,+DAAS,8DAAT,CAAzC,CAAP;AAAsE,OAAvH;AAAyH1D,WAAK,EAAE0D,gBAAhI;AAAkJzD,gBAAU,EAAE;AAA9J,KAAnB,CAAzB;AACnB;;AAAc,KAAC,YAAY;AAAE,sEAAyByD,gBAAzB,EAA2C,CAAC;AACjEhE,YAAI,EAAE,wDAD2D;AAEjEG,YAAI,EAAE,CAAC;AAAEI,oBAAU,EAAE;AAAd,SAAD;AAF2D,OAAD,CAA3C,EAGrB,YAAY;AAAE,eAAO,CAAC;AAAEP,cAAI,EAAEC,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAC9CF,gBAAI,EAAE,oDADwC;AAE9CG,gBAAI,EAAE,CAAC,wDAAD;AAFwC,WAAD;AAA/B,SAAD,EAGX;AAAEH,cAAI,EAAE;AAAR,SAHW,CAAP;AAGyB,OANlB,EAMoB,IANpB;AAM4B,KAN3C;;AAOd,QAAI,KAAJ,EAAW,CAkBV;AACD;;;;;;;;AAMA,aAAS+E,kCAAT,CAA4CC,eAA5C,EAA6DzK,SAA7D,EAAwE;AACpE,aAAOyK,eAAe,IAAI,IAAIhB,gBAAJ,CAAqBzJ,SAArB,CAA1B;AACH;AACD;;;;;;AAIA,QAAM0K,0BAA0B,GAAG;AAC/B;AACAvB,aAAO,EAAEM,gBAFsB;AAG/BL,UAAI,EAAE,CACF,CAAC,IAAI,sDAAJ,EAAD,EAAiB,IAAI,sDAAJ,EAAjB,EAAiCK,gBAAjC,CADE;AAED;AAAkB,8DAFjB,CAHyB;AAO/BJ,gBAAU,EAAEmB;AAPmB,KAAnC;AAUA;;;;;;AAKA;;;;;QAIMG,U;AACF;;;;;;;;;;AAUA,0BAAYC,aAAZ,EAA2BC,KAA3B,EAAkCC,KAAlC,EAAyC7I,OAAzC,EAAkDD,OAAlD,EAA2D+I,mBAA3D,EAAgF/K,SAAhF,EAA2FgL,SAA3F,EAAsG;AAAA;;AAAA;;AAClG,aAAKJ,aAAL,GAAqBA,aAArB;AACA,aAAKC,KAAL,GAAaA,KAAb;AACA,aAAKC,KAAL,GAAaA,KAAb;AACA,aAAK7I,OAAL,GAAeA,OAAf;AACA,aAAKD,OAAL,GAAeA,OAAf;AACA,aAAK+I,mBAAL,GAA2BA,mBAA3B;AACA,aAAK/K,SAAL,GAAiBA,SAAjB;AACA,aAAKgL,SAAL,GAAiBA,SAAjB;AACA,aAAKC,gBAAL,GAAwB,IAAxB;AACA,aAAKC,cAAL,GAAsB,IAAI,4CAAJ,EAAtB;AACA,aAAKC,YAAL,GAAoB,IAAI,4CAAJ,EAApB;AACA,aAAKC,YAAL,GAAoB,IAAI,4CAAJ,EAApB;AACA,aAAKC,gBAAL,GAAwB,kDAAaC,KAArC;;AACA,aAAKC,qBAAL;AAA8B;;;;AAI9B,kBAACtD,KAAD;AAAA,iBAAW,MAAI,CAACiD,cAAL,CAAoB3C,IAApB,CAAyBN,KAAzB,CAAX;AAAA,SAJA;;AAKA,aAAKuD,wBAAL,GAAgC,IAAI,+CAAJ;AAAgB;;;;AAIhD,kBAACC,QAAD,EAAc;AACV;AACA,cAAMC,YAAY,GAAG,MAAI,CAACpD,cAAL,CAAoBxF,SAApB,CAA8B2I,QAA9B,CAArB;;AACA,gBAAI,CAACpD,0BAAL;AACA;AAAQ;;;AAGR,wBAAM;AACFqD,0BAAY,CAACvI,WAAb;AACA,oBAAI,CAACkF,0BAAL;AACH;AAND;AAOH,SAf+B,CAAhC;AAgBA;;;;AAGA,aAAKC,cAAL,GAAsB,IAAI,4CAAJ,EAAtB;AACA;;;;AAGA,aAAKD,0BAAL,GAAkC,CAAlC;;AACA,YAAIpG,OAAO,CAACiE,cAAZ,EAA4B;AACxB,eAAKyF,eAAL,GAAuB1J,OAAO,CAACiE,cAA/B;;AACA,eAAKyF,eAAL,CAAqBC,MAArB,CAA4B,IAA5B;AACH;;AACD,aAAKC,iBAAL,GAAyB5J,OAAO,CAAC6J,gBAAjC;AACH;AACD;;;;;;;;;AAuBA;;;;;;;+BAOOC,M,EAAQ;AAAA;;AACX;AACA,cAAIC,YAAY,GAAG,KAAKpB,aAAL,CAAmBgB,MAAnB,CAA0BG,MAA1B,CAAnB,CAFW,CAGX;;;AACA,cAAI,CAAC,KAAKlB,KAAL,CAAWoB,aAAZ,IAA6B,KAAKC,mBAAtC,EAA2D;AACvD,iBAAKA,mBAAL,CAAyB5B,WAAzB,CAAqC,KAAKO,KAA1C;AACH;;AACD,cAAI,KAAKgB,iBAAT,EAA4B;AACxB,iBAAKA,iBAAL,CAAuBD,MAAvB,CAA8B,IAA9B;AACH;;AACD,eAAKO,oBAAL;;AACA,eAAKC,kBAAL;;AACA,eAAKC,uBAAL;;AACA,cAAI,KAAKV,eAAT,EAA0B;AACtB,iBAAKA,eAAL,CAAqBW,MAArB;AACH,WAfU,CAgBX;AACA;AACA;;;AACA,eAAKtK,OAAL,CAAauK,QAAb,CACKC,YADL,GAEKC,IAFL,CAEU,4DAAK,CAAL,CAFV,EAGK3J,SAHL;AAGgB;;;AAGhB,sBAAM;AACF;AACA,gBAAI,MAAI,CAACR,WAAL,EAAJ,EAAwB;AACpB,oBAAI,CAACY,cAAL;AACH;AACJ,WAXD,EAnBW,CA+BX;;;AACA,eAAKwJ,oBAAL,CAA0B,IAA1B;;AACA,cAAI,KAAKzK,OAAL,CAAamE,WAAjB,EAA8B;AAC1B,iBAAKuG,eAAL;AACH;;AACD,cAAI,KAAK1K,OAAL,CAAakE,UAAjB,EAA6B;AACzB,iBAAKyG,cAAL,CAAoB,KAAK9B,KAAzB,EAAgC,KAAK7I,OAAL,CAAakE,UAA7C,EAAyD,IAAzD;AACH,WAtCU,CAuCX;;;AACA,eAAKgF,YAAL,CAAkB5C,IAAlB,GAxCW,CAyCX;;;AACA,eAAKwC,mBAAL,CAAyBvK,GAAzB,CAA6B,IAA7B,EA1CW,CA2CX;AACA;;;AACA,cAAI,KAAKyB,OAAL,CAAaqE,mBAAb,IAAoC,KAAK0E,SAA7C,EAAwD;AACpD,iBAAKK,gBAAL,GAAwB,KAAKL,SAAL,CAAelI,SAAf;AAA0B;;;AAGlD;AAAA,qBAAM,MAAI,CAAC+J,OAAL,EAAN;AAAA,aAHwB,CAAxB;AAIH;;AACD,iBAAOb,YAAP;AACH;AACD;;;;;;;iCAIS;AACL,cAAI,CAAC,KAAK1J,WAAL,EAAL,EAAyB;AACrB;AACH;;AACD,eAAKwK,cAAL,GAJK,CAKL;AACA;AACA;;AACA,eAAKJ,oBAAL,CAA0B,KAA1B;;AACA,cAAI,KAAKb,iBAAL,IAA0B,KAAKA,iBAAL,CAAuBrJ,MAArD,EAA6D;AACzD,iBAAKqJ,iBAAL,CAAuBrJ,MAAvB;AACH;;AACD,cAAI,KAAKmJ,eAAT,EAA0B;AACtB,iBAAKA,eAAL,CAAqBvJ,OAArB;AACH;AACD;;;AACA,cAAM2K,gBAAgB,GAAG,KAAKnC,aAAL,CAAmBpI,MAAnB,EAAzB,CAhBK,CAiBL;;;AACA,eAAK4I,YAAL,CAAkB7C,IAAlB,GAlBK,CAmBL;;;AACA,eAAKwC,mBAAL,CAAyB/J,MAAzB,CAAgC,IAAhC,EApBK,CAqBL;AACA;;;AACA,eAAKgM,wBAAL,GAvBK,CAwBL;;;AACA,eAAK3B,gBAAL,CAAsBlI,WAAtB;;AACA,iBAAO4J,gBAAP;AACH;AACD;;;;;;;kCAIU;AACN;AACA,cAAME,UAAU,GAAG,KAAK3K,WAAL,EAAnB;;AACA,cAAI,KAAKuJ,iBAAT,EAA4B;AACxB,iBAAKA,iBAAL,CAAuBgB,OAAvB;AACH;;AACD,eAAKK,sBAAL;;AACA,eAAKJ,cAAL;;AACA,eAAKzB,gBAAL,CAAsBlI,WAAtB;;AACA,eAAK4H,mBAAL,CAAyB/J,MAAzB,CAAgC,IAAhC;;AACA,eAAK4J,aAAL,CAAmBiC,OAAnB;;AACA,eAAK1B,YAAL,CAAkBgC,QAAlB;;AACA,eAAKjC,cAAL,CAAoBiC,QAApB;;AACA,eAAK7E,cAAL,CAAoB6E,QAApB;;AACA,cAAI,KAAKtC,KAAL,IAAc,KAAKA,KAAL,CAAWhB,UAA7B,EAAyC;AACrC,iBAAKgB,KAAL,CAAWhB,UAAX,CAAsBC,WAAtB,CAAkC,KAAKe,KAAvC;;AACA,iBAAKA,KAAL;AAAc;AAAkB,gBAAhC;AACH;;AACD,eAAKqB,mBAAL,GAA2B,KAAKpB,KAAL;AAAc;AAAkB,cAA3D;;AACA,cAAImC,UAAJ,EAAgB;AACZ,iBAAK7B,YAAL,CAAkB7C,IAAlB;AACH;;AACD,eAAK6C,YAAL,CAAkB+B,QAAlB;AACH;AACD;;;;;;;sCAIc;AACV,iBAAO,KAAKvC,aAAL,CAAmBtI,WAAnB,EAAP;AACH;AACD;;;;;;;wCAIgB;AACZ,iBAAO,KAAK4I,cAAL,CAAoBsB,YAApB,EAAP;AACH;AACD;;;;;;;sCAIc;AACV,iBAAO,KAAKrB,YAAL,CAAkBqB,YAAlB,EAAP;AACH;AACD;;;;;;;sCAIc;AACV,iBAAO,KAAKpB,YAAL,CAAkBoB,YAAlB,EAAP;AACH;AACD;;;;;;;wCAIgB;AACZ,iBAAO,KAAKhB,wBAAZ;AACH;AACD;;;;;;;oCAIY;AACR,iBAAO,KAAKvJ,OAAZ;AACH;AACD;;;;;;;yCAIiB;AACb,cAAI,KAAK4J,iBAAT,EAA4B;AACxB,iBAAKA,iBAAL,CAAuBuB,KAAvB;AACH;AACJ;AACD;;;;;;;;+CAKuBC,Q,EAAU;AAC7B,cAAIA,QAAQ,KAAK,KAAKxB,iBAAtB,EAAyC;AACrC;AACH;;AACD,cAAI,KAAKA,iBAAT,EAA4B;AACxB,iBAAKA,iBAAL,CAAuBgB,OAAvB;AACH;;AACD,eAAKhB,iBAAL,GAAyBwB,QAAzB;;AACA,cAAI,KAAK/K,WAAL,EAAJ,EAAwB;AACpB+K,oBAAQ,CAACzB,MAAT,CAAgB,IAAhB;AACA,iBAAK1I,cAAL;AACH;AACJ;AACD;;;;;;;;mCAKWoK,U,EAAY;AACnB,eAAKrL,OAAL,GAAeuE,MAAM,CAAC+G,MAAP,CAAc/G,MAAM,CAAC+G,MAAP,CAAc,EAAd,EAAkB,KAAKtL,OAAvB,CAAd,EAA+CqL,UAA/C,CAAf;;AACA,eAAKlB,kBAAL;AACH;AACD;;;;;;;;qCAKaoB,G,EAAK;AACd,eAAKvL,OAAL,GAAeuE,MAAM,CAAC+G,MAAP,CAAc/G,MAAM,CAAC+G,MAAP,CAAc,EAAd,EAAkB,KAAKtL,OAAvB,CAAd,EAA+C;AAAEwL,qBAAS,EAAED;AAAb,WAA/C,CAAf;;AACA,eAAKnB,uBAAL;AACH;AACD;;;;;;;;sCAKcqB,O,EAAS;AACnB,cAAI,KAAK5C,KAAT,EAAgB;AACZ,iBAAK8B,cAAL,CAAoB,KAAK9B,KAAzB,EAAgC4C,OAAhC,EAAyC,IAAzC;AACH;AACJ;AACD;;;;;;;;yCAKiBA,O,EAAS;AACtB,cAAI,KAAK5C,KAAT,EAAgB;AACZ,iBAAK8B,cAAL,CAAoB,KAAK9B,KAAzB,EAAgC4C,OAAhC,EAAyC,KAAzC;AACH;AACJ;AACD;;;;;;;uCAIe;AACX;AACA,cAAMD,SAAS,GAAG,KAAKxL,OAAL,CAAawL,SAA/B;;AACA,cAAI,CAACA,SAAL,EAAgB;AACZ,mBAAO,KAAP;AACH;;AACD,iBAAO,OAAOA,SAAP,KAAqB,QAArB,GAAgCA,SAAhC,GAA4CA,SAAS,CAAC7F,KAA7D;AACH;AACD;;;;;;;;6CAKqByF,Q,EAAU;AAC3B,cAAIA,QAAQ,KAAK,KAAK1B,eAAtB,EAAuC;AACnC;AACH;;AACD,eAAKuB,sBAAL;;AACA,eAAKvB,eAAL,GAAuB0B,QAAvB;;AACA,cAAI,KAAK/K,WAAL,EAAJ,EAAwB;AACpB+K,oBAAQ,CAACzB,MAAT,CAAgB,IAAhB;AACAyB,oBAAQ,CAACf,MAAT;AACH;AACJ;AACD;;;;;;;;kDAK0B;AACtB,eAAKzB,KAAL,CAAWR,YAAX,CAAwB,KAAxB,EAA+B,KAAKsD,YAAL,EAA/B;AACH;AACD;;;;;;;;6CAKqB;AACjB,cAAI,CAAC,KAAK7C,KAAV,EAAiB;AACb;AACH;AACD;;;AACA,cAAMxK,KAAK,GAAG,KAAKwK,KAAL,CAAWxK,KAAzB;AACAA,eAAK,CAACmB,KAAN,GAAc,kFAAoB,KAAKQ,OAAL,CAAaR,KAAjC,CAAd;AACAnB,eAAK,CAACiB,MAAN,GAAe,kFAAoB,KAAKU,OAAL,CAAaV,MAAjC,CAAf;AACAjB,eAAK,CAACsN,QAAN,GAAiB,kFAAoB,KAAK3L,OAAL,CAAa2L,QAAjC,CAAjB;AACAtN,eAAK,CAACuN,SAAN,GAAkB,kFAAoB,KAAK5L,OAAL,CAAa4L,SAAjC,CAAlB;AACAvN,eAAK,CAACwN,QAAN,GAAiB,kFAAoB,KAAK7L,OAAL,CAAa6L,QAAjC,CAAjB;AACAxN,eAAK,CAACyN,SAAN,GAAkB,kFAAoB,KAAK9L,OAAL,CAAa8L,SAAjC,CAAlB;AACH;AACD;;;;;;;;;6CAMqBC,a,EAAe;AAChC,eAAKlD,KAAL,CAAWxK,KAAX,CAAiB2N,aAAjB,GAAiCD,aAAa,GAAG,MAAH,GAAY,MAA1D;AACH;AACD;;;;;;;;0CAKkB;AAAA;;AACd;AACA,cAAME,YAAY,GAAG,8BAArB;AACA,eAAKjD,gBAAL,GAAwB,KAAKjL,SAAL,CAAeoK,aAAf,CAA6B,KAA7B,CAAxB;;AACA,eAAKa,gBAAL,CAAsB1K,SAAtB,CAAgCC,GAAhC,CAAoC,sBAApC;;AACA,cAAI,KAAKyB,OAAL,CAAaoE,aAAjB,EAAgC;AAC5B,iBAAKuG,cAAL,CAAoB,KAAK3B,gBAAzB,EAA2C,KAAKhJ,OAAL,CAAaoE,aAAxD,EAAuE,IAAvE;AACH,WAPa,CAQd;AACA;;;AACC;AAAkB,eAAKwE,KAAL,CAAWoB,aAA9B,CAA8CkC,YAA9C,CAA2D,KAAKlD,gBAAhE,EAAkF,KAAKJ,KAAvF,EAVc,CAWd;AACA;;;AACA,eAAKI,gBAAL,CAAsBxC,gBAAtB,CAAuC,OAAvC,EAAgD,KAAK8C,qBAArD,EAbc,CAcd;;;AACA,cAAI,OAAO6C,qBAAP,KAAiC,WAArC,EAAkD;AAC9C,iBAAKpM,OAAL,CAAaqM,iBAAb;AAAgC;;;AAGhC,wBAAM;AACFD,mCAAqB;AAAE;;;AAGvB,0BAAM;AACF,oBAAI,MAAI,CAACnD,gBAAT,EAA2B;AACvB,wBAAI,CAACA,gBAAL,CAAsB1K,SAAtB,CAAgCC,GAAhC,CAAoC0N,YAApC;AACH;AACJ,eAPoB,CAArB;AAQH,aAZD;AAaH,WAdD,MAeK;AACD,iBAAKjD,gBAAL,CAAsB1K,SAAtB,CAAgCC,GAAhC,CAAoC0N,YAApC;AACH;AACJ;AACD;;;;;;;;;;;;+CASuB;AACnB,cAAI,KAAKrD,KAAL,CAAWyD,WAAf,EAA4B;AACvB;AAAkB,iBAAKzD,KAAL,CAAWhB,UAA9B,CAA2CS,WAA3C,CAAuD,KAAKO,KAA5D;AACH;AACJ;AACD;;;;;;;yCAIiB;AAAA;;AACb;AACA,cAAI0D,gBAAgB,GAAG,KAAKtD,gBAA5B;;AACA,cAAI,CAACsD,gBAAL,EAAuB;AACnB;AACH;AACD;;;AACA,cAAIC,SAAJ;AACA;;AACA,cAAIC,YAAY;AAAI;;;AAGpB,mBAHIA,YAGJ,GAAM;AACF;AACA,gBAAIF,gBAAJ,EAAsB;AAClBA,8BAAgB,CAACzF,mBAAjB,CAAqC,OAArC,EAA8C,MAAI,CAACyC,qBAAnD;AACAgD,8BAAgB,CAACzF,mBAAjB,CAAqC,eAArC,EAAsD2F,YAAtD;;AACA,kBAAIF,gBAAgB,CAAC1E,UAArB,EAAiC;AAC7B0E,gCAAgB,CAAC1E,UAAjB,CAA4BC,WAA5B,CAAwCyE,gBAAxC;AACH;AACJ,aARC,CASF;AACA;AACA;;;AACA,gBAAI,MAAI,CAACtD,gBAAL,IAAyBsD,gBAA7B,EAA+C;AAC3C,oBAAI,CAACtD,gBAAL,GAAwB,IAAxB;AACH;;AACD,gBAAI,MAAI,CAAChJ,OAAL,CAAaoE,aAAjB,EAAgC;AAC5B,oBAAI,CAACuG,cAAL;AAAqB;AAAkB2B,8BAAvC,EAA2D,MAAI,CAACtM,OAAL,CAAaoE,aAAxE,EAAuF,KAAvF;AACH;;AACDqI,wBAAY,CAACF,SAAD,CAAZ;AACH,WAtBD;;AAuBAD,0BAAgB,CAAChO,SAAjB,CAA2BS,MAA3B,CAAkC,8BAAlC;;AACA,eAAKgB,OAAL,CAAaqM,iBAAb;AAAgC;;;AAGhC,sBAAM;AACD;AAAkBE,4BAAnB,CAAsC9F,gBAAtC,CAAuD,eAAvD,EAAwEgG,YAAxE;AACH,WALD,EAjCa,CAuCb;AACA;;;AACAF,0BAAgB,CAACjO,KAAjB,CAAuB2N,aAAvB,GAAuC,MAAvC,CAzCa,CA0Cb;AACA;AACA;;AACAO,mBAAS,GAAG,KAAKxM,OAAL,CAAaqM,iBAAb;AAAgC;;;AAG5C;AAAA,mBAAMM,UAAU,CAACF,YAAD,EAAe,GAAf,CAAhB;AAAA,WAHY,CAAZ;AAIH;AACD;;;;;;;;;;;uCAQenL,O,EAASsL,U,EAAYC,K,EAAO;AACvC;AACA,cAAMtO,SAAS,GAAG+C,OAAO,CAAC/C,SAA1B;AACA,oFAAYqO,UAAZ,EAAwBE,OAAxB;AAAiC;;;;AAIjC,oBAAAC,QAAQ,EAAI;AACR;AACA;AACA,gBAAIA,QAAJ,EAAc;AACVF,mBAAK,GAAGtO,SAAS,CAACC,GAAV,CAAcuO,QAAd,CAAH,GAA6BxO,SAAS,CAACS,MAAV,CAAiB+N,QAAjB,CAAlC;AACH;AACJ,WAVD;AAWH;AACD;;;;;;;;mDAK2B;AAAA;;AACvB;AACA;AACA;AACA,eAAK/M,OAAL,CAAaqM,iBAAb;AAAgC;;;AAGhC,sBAAM;AACF;AACA;AACA;;AACA;AACA,gBAAM3C,YAAY,GAAG,OAAI,CAAC1J,OAAL,CAAauK,QAAb,CAChBC,YADgB,GAEhBC,IAFgB,CAEX,iEAAU,mDAAM,OAAI,CAACtB,YAAX,EAAyB,OAAI,CAACC,YAA9B,CAAV,CAFW,EAGhBtI,SAHgB;AAGL;;;AAGhB,wBAAM;AACF;AACA;AACA,kBAAI,CAAC,OAAI,CAACgI,KAAN,IAAe,CAAC,OAAI,CAACD,KAArB,IAA8B,OAAI,CAACC,KAAL,CAAWkE,QAAX,CAAoB5G,MAApB,KAA+B,CAAjE,EAAoE;AAChE,oBAAI,OAAI,CAAC0C,KAAL,IAAc,OAAI,CAAC7I,OAAL,CAAakE,UAA/B,EAA2C;AACvC,yBAAI,CAACyG,cAAL,CAAoB,OAAI,CAAC9B,KAAzB,EAAgC,OAAI,CAAC7I,OAAL,CAAakE,UAA7C,EAAyD,KAAzD;AACH;;AACD,oBAAI,OAAI,CAAC0E,KAAL,IAAc,OAAI,CAACA,KAAL,CAAWoB,aAA7B,EAA4C;AACxC,yBAAI,CAACC,mBAAL,GAA2B,OAAI,CAACrB,KAAL,CAAWoB,aAAtC;;AACA,yBAAI,CAACC,mBAAL,CAAyBpC,WAAzB,CAAqC,OAAI,CAACe,KAA1C;AACH;;AACDa,4BAAY,CAACvI,WAAb;AACH;AACJ,aAnBoB,CAArB;AAoBH,WA5BD;AA6BH;AACD;;;;;;;;iDAKyB;AACrB;AACA,cAAM+C,cAAc,GAAG,KAAKyF,eAA5B;;AACA,cAAIzF,cAAJ,EAAoB;AAChBA,0BAAc,CAAC9D,OAAf;;AACA,gBAAI8D,cAAc,CAAC1D,MAAnB,EAA2B;AACvB0D,4BAAc,CAAC1D,MAAf;AACH;AACJ;AACJ;;;4BA5eoB;AACjB,iBAAO,KAAKsI,KAAZ;AACH;AACD;;;;;;;4BAIsB;AAClB,iBAAO,KAAKG,gBAAZ;AACH;AACD;;;;;;;;;4BAMkB;AACd,iBAAO,KAAKJ,KAAZ;AACH;;;;;;AA4dL,QAAI,KAAJ,EAAW,CAuGV;AACD;;;;;;AAIA,aAASoE,iBAAT,GAA6B,CAAG;;AAChC,QAAI,KAAJ,EAAW,CAaV;AAED;;;;;AAKA;AACA;;AACA;;;;;;AAIA,QAAMC,gBAAgB,GAAG,6CAAzB;AACA;;;;;AAIA,QAAMC,cAAc,GAAG,eAAvB;AACA;;;;;;;;QAOMC,iC;AACF;;;;;;;AAOA,iDAAYC,WAAZ,EAAyB3P,cAAzB,EAAyCM,SAAzC,EAAoD0J,SAApD,EAA+D4F,iBAA/D,EAAkF;AAAA;;AAC9E,aAAK5P,cAAL,GAAsBA,cAAtB;AACA,aAAKM,SAAL,GAAiBA,SAAjB;AACA,aAAK0J,SAAL,GAAiBA,SAAjB;AACA,aAAK4F,iBAAL,GAAyBA,iBAAzB;AACA;;;;AAGA,aAAKC,oBAAL,GAA4B;AAAE9N,eAAK,EAAE,CAAT;AAAYF,gBAAM,EAAE;AAApB,SAA5B;AACA;;;;AAGA,aAAKiO,SAAL,GAAiB,KAAjB;AACA;;;;AAGA,aAAKC,QAAL,GAAgB,IAAhB;AACA;;;;AAGA,aAAKC,cAAL,GAAsB,KAAtB;AACA;;;;AAGA,aAAKC,sBAAL,GAA8B,IAA9B;AACA;;;;AAGA,aAAKC,eAAL,GAAuB,KAAvB;AACA;;;;AAGA,aAAKC,eAAL,GAAuB,CAAvB;AACA;;;;AAGA,aAAKC,YAAL,GAAoB,EAApB;AACA;;;;AAGA,aAAKC,mBAAL,GAA2B,EAA3B;AACA;;;;AAGA,aAAKC,gBAAL,GAAwB,IAAI,4CAAJ,EAAxB;AACA;;;;AAGA,aAAKC,mBAAL,GAA2B,kDAAa3E,KAAxC;AACA;;;;AAGA,aAAK4E,QAAL,GAAgB,CAAhB;AACA;;;;AAGA,aAAKC,QAAL,GAAgB,CAAhB;AACA;;;;AAGA,aAAKC,oBAAL,GAA4B,EAA5B;AACA;;;;AAGA,aAAKC,eAAL,GAAuB,KAAKL,gBAAL,CAAsBxD,YAAtB,EAAvB;AACA,aAAK8D,SAAL,CAAejB,WAAf;AACH;AACD;;;;;;;;;AAOA;;;;;+BAKO5M,U,EAAY;AAAA;;AACf,cAAI,KAAKJ,WAAL,IAAoBI,UAAU,KAAK,KAAKJ,WAA5C,EAAyD;AACrD,kBAAMT,KAAK,CAAC,0DAAD,CAAX;AACH;;AACD,eAAK2O,kBAAL;;AACA9N,oBAAU,CAAC+N,WAAX,CAAuBjQ,SAAvB,CAAiCC,GAAjC,CAAqC0O,gBAArC;AACA,eAAK7M,WAAL,GAAmBI,UAAnB;AACA,eAAKgO,YAAL,GAAoBhO,UAAU,CAAC+N,WAA/B;AACA,eAAK1F,KAAL,GAAarI,UAAU,CAACmC,cAAxB;AACA,eAAK8L,WAAL,GAAmB,KAAnB;AACA,eAAKC,gBAAL,GAAwB,IAAxB;AACA,eAAKC,aAAL,GAAqB,IAArB;;AACA,eAAKX,mBAAL,CAAyB9M,WAAzB;;AACA,eAAK8M,mBAAL,GAA2B,KAAKvQ,cAAL,CAAoBmR,MAApB,GAA6B/N,SAA7B;AAAwC;;;AAGnE,sBAAM;AACF;AACA;AACA;AACA,mBAAI,CAAC6N,gBAAL,GAAwB,IAAxB;;AACA,mBAAI,CAACvD,KAAL;AACH,WAT0B,CAA3B;AAUH;AACD;;;;;;;;;;;;;;;;;;gCAeQ;AACJ;AACA,cAAI,KAAKsD,WAAL,IAAoB,CAAC,KAAKhH,SAAL,CAAeM,SAAxC,EAAmD;AAC/C;AACH,WAJG,CAKJ;AACA;AACA;;;AACA,cAAI,CAAC,KAAK2G,gBAAN,IAA0B,KAAKf,eAA/B,IAAkD,KAAKgB,aAA3D,EAA0E;AACtE,iBAAKE,mBAAL;AACA;AACH;;AACD,eAAKC,kBAAL;;AACA,eAAKC,0BAAL;;AACA,eAAKC,uBAAL,GAdI,CAeJ;AACA;AACA;;;AACA,eAAKC,aAAL,GAAqB,KAAKC,wBAAL,EAArB;AACA,eAAKC,WAAL,GAAmB,KAAKC,cAAL,EAAnB;AACA,eAAKC,YAAL,GAAoB,KAAKxG,KAAL,CAAWjG,qBAAX,EAApB;AACA;;AACA,cAAM0M,UAAU,GAAG,KAAKH,WAAxB;AACA;;AACA,cAAMzM,WAAW,GAAG,KAAK2M,YAAzB;AACA;;AACA,cAAME,YAAY,GAAG,KAAKN,aAA1B,CA1BI,CA2BJ;;AACA;;AACA,cAAMO,YAAY,GAAG,EAArB,CA7BI,CA8BJ;;AACA;;AACA,cAAIC,QAAJ,CAhCI,CAiCJ;AACA;;AAlCI,qDAmCY,KAAK3B,mBAnCjB;AAAA;;AAAA;AAmCJ,gEAA0C;AAAA,kBAAjC4B,GAAiC;;AACtC;;AACA;AACA,kBAAIC,WAAW,GAAG,KAAKC,eAAL,CAAqBN,UAArB,EAAiCI,GAAjC,CAAlB,CAHsC,CAItC;AACA;AACA;;AACA;;;AACA,kBAAIG,YAAY,GAAG,KAAKC,gBAAL,CAAsBH,WAAtB,EAAmCjN,WAAnC,EAAgDgN,GAAhD,CAAnB,CARsC,CAStC;;AACA;;;AACA,kBAAIK,UAAU,GAAG,KAAKC,cAAL,CAAoBH,YAApB,EAAkCnN,WAAlC,EAA+C6M,YAA/C,EAA6DG,GAA7D,CAAjB,CAXsC,CAYtC;;;AACA,kBAAIK,UAAU,CAACE,0BAAf,EAA2C;AACvC,qBAAK1C,SAAL,GAAiB,KAAjB;;AACA,qBAAK2C,cAAL,CAAoBR,GAApB,EAAyBC,WAAzB;;AACA;AACH,eAjBqC,CAkBtC;AACA;;;AACA,kBAAI,KAAKQ,6BAAL,CAAmCJ,UAAnC,EAA+CF,YAA/C,EAA6DN,YAA7D,CAAJ,EAAgF;AAC5E;AACA;AACAC,4BAAY,CAAC/I,IAAb,CAAkB;AACd2J,0BAAQ,EAAEV,GADI;AAEd7K,wBAAM,EAAE8K,WAFM;AAGdjN,6BAAW,EAAXA,WAHc;AAId2N,iCAAe,EAAE,KAAKC,yBAAL,CAA+BX,WAA/B,EAA4CD,GAA5C;AAJH,iBAAlB;AAMA;AACH,eA9BqC,CA+BtC;AACA;AACA;;;AACA,kBAAI,CAACD,QAAD,IAAaA,QAAQ,CAACM,UAAT,CAAoBQ,WAApB,GAAkCR,UAAU,CAACQ,WAA9D,EAA2E;AACvEd,wBAAQ,GAAG;AAAEM,4BAAU,EAAVA,UAAF;AAAcF,8BAAY,EAAZA,YAAd;AAA4BF,6BAAW,EAAXA,WAA5B;AAAyCS,0BAAQ,EAAEV,GAAnD;AAAwDhN,6BAAW,EAAXA;AAAxD,iBAAX;AACH;AACJ,aAxEG,CAyEJ;AACA;;AA1EI;AAAA;AAAA;AAAA;AAAA;;AA2EJ,cAAI8M,YAAY,CAACrJ,MAAjB,EAAyB;AACrB;AACA,gBAAIqK,OAAO,GAAG,IAAd;AACA;;AACA,gBAAIC,SAAS,GAAG,CAAC,CAAjB;;AAJqB,wDAKHjB,YALG;AAAA;;AAAA;AAKrB,qEAAgC;AAAA,oBAArBkB,GAAqB;;AAC5B;AACA,oBAAMC,KAAK,GAAGD,GAAG,CAACL,eAAJ,CAAoB7Q,KAApB,GAA4BkR,GAAG,CAACL,eAAJ,CAAoB/Q,MAAhD,IAA0DoR,GAAG,CAACN,QAAJ,CAAaQ,MAAb,IAAuB,CAAjF,CAAd;;AACA,oBAAID,KAAK,GAAGF,SAAZ,EAAuB;AACnBA,2BAAS,GAAGE,KAAZ;AACAH,yBAAO,GAAGE,GAAV;AACH;AACJ;AAZoB;AAAA;AAAA;AAAA;AAAA;;AAarB,iBAAKnD,SAAL,GAAiB,KAAjB;;AACA,iBAAK2C,cAAL;AAAqB;AAAkBM,mBAAnB,CAA6BJ,QAAjD;AAA4D;AAAkBI,mBAAnB,CAA6B3L,MAAxF;;AACA;AACH,WA3FG,CA4FJ;AACA;;;AACA,cAAI,KAAK2I,QAAT,EAAmB;AACf;AACA,iBAAKD,SAAL,GAAiB,IAAjB;;AACA,iBAAK2C,cAAL;AAAqB;AAAkBT,oBAAnB,CAA8BW,QAAlD;AAA6D;AAAkBX,oBAAnB,CAA8BE,WAA1F;;AACA;AACH,WAnGG,CAoGJ;AACA;;;AACA,eAAKO,cAAL;AAAqB;AAAkBT,kBAAnB,CAA8BW,QAAlD;AAA6D;AAAkBX,kBAAnB,CAA8BE,WAA1F;AACH;AACD;;;;;;iCAGS;AACL,eAAKb,kBAAL;;AACA,eAAKH,aAAL,GAAqB,IAArB;AACA,eAAKkC,mBAAL,GAA2B,IAA3B;;AACA,eAAK7C,mBAAL,CAAyB9M,WAAzB;AACH;AACD;;;;;;;kCAIU;AACN,cAAI,KAAKuN,WAAT,EAAsB;AAClB;AACH,WAHK,CAIN;AACA;;;AACA,cAAI,KAAKD,YAAT,EAAuB;AACnBsC,wBAAY,CAAC,KAAKtC,YAAL,CAAkBnQ,KAAnB;AAA2B;AAAkB;AACrDT,iBAAG,EAAE,EADgD;AAErDC,kBAAI,EAAE,EAF+C;AAGrDgE,mBAAK,EAAE,EAH8C;AAIrDH,oBAAM,EAAE,EAJ6C;AAKrDpC,oBAAM,EAAE,EAL6C;AAMrDE,mBAAK,EAAE,EAN8C;AAOrDuR,wBAAU,EAAE,EAPyC;AAQrDC,4BAAc,EAAE;AARqC,aAA7C,CAAZ;AAUH;;AACD,cAAI,KAAKnI,KAAT,EAAgB;AACZ,iBAAKkG,0BAAL;AACH;;AACD,cAAI,KAAK3O,WAAT,EAAsB;AAClB,iBAAKA,WAAL,CAAiBmO,WAAjB,CAA6BjQ,SAA7B,CAAuCS,MAAvC,CAA8CkO,gBAA9C;AACH;;AACD,eAAK1M,MAAL;;AACA,eAAKwN,gBAAL,CAAsB7C,QAAtB;;AACA,eAAK9K,WAAL,GAAmB,KAAKoO,YAAL;AAAqB;AAAkB,cAA1D;AACA,eAAKC,WAAL,GAAmB,IAAnB;AACH;AACD;;;;;;;;;8CAMsB;AAClB,cAAI,CAAC,KAAKA,WAAN,KAAsB,CAAC,KAAKhH,SAAN,IAAmB,KAAKA,SAAL,CAAeM,SAAxD,CAAJ,EAAwE;AACpE,iBAAKoH,WAAL,GAAmB,KAAKC,cAAL,EAAnB;AACA,iBAAKC,YAAL,GAAoB,KAAKxG,KAAL,CAAWjG,qBAAX,EAApB;AACA,iBAAKqM,aAAL,GAAqB,KAAKC,wBAAL,EAArB;AACA;;AACA,gBAAM+B,YAAY,GAAG,KAAKtC,aAAL,IAAsB,KAAKb,mBAAL,CAAyB,CAAzB,CAA3C;AACA;;AACA,gBAAM6B,WAAW,GAAG,KAAKC,eAAL,CAAqB,KAAKT,WAA1B,EAAuC8B,YAAvC,CAApB;;AACA,iBAAKf,cAAL,CAAoBe,YAApB,EAAkCtB,WAAlC;AACH;AACJ;AACD;;;;;;;;;;;;iDASyBuB,W,EAAa;AACjC;AAAkB,cAAnB,CAA0BrD,YAA1B,GAAyCqD,WAAzC;AACA;AAAQ;AAAkB;AAA1B;AACH;AACD;;;;;;;;;;sCAOcC,S,EAAW;AACpB;AAAkB,cAAnB,CAA0BrD,mBAA1B,GAAgDqD,SAAhD,CADqB,CAErB;AACA;;AACA,cAAIA,SAAS,CAACxK,OAAV;AAAmB;;AAAmB;AAAkB,cAAnB,CAA0BgI,aAA/D,MAAoF,CAAC,CAAzF,EAA4F;AACvF;AAAkB,gBAAnB,CAA0BA,aAA1B,GAA0C,IAA1C;AACH;;AACA;AAAkB,cAAnB,CAA0BL,kBAA1B;;AACA;AAAQ;AAAkB;AAA1B;AACH;AACD;;;;;;;;;;2CAOmB8C,M,EAAQ;AACtB;AAAkB,cAAnB,CAA0BxD,eAA1B,GAA4CwD,MAA5C;AACA;AAAQ;AAAkB;AAA1B;AACH;AACD;;;;;;;;;;iDAOkD;AAAA,cAA3BC,kBAA2B,uEAAN,IAAM;;AAC7C;AAAkB,cAAnB,CAA0B3D,sBAA1B,GAAmD2D,kBAAnD;AACA;AAAQ;AAAkB;AAA1B;AACH;AACD;;;;;;;;;;4CAOwC;AAAA,cAAtBC,aAAsB,uEAAN,IAAM;;AACnC;AAAkB,cAAnB,CAA0B7D,cAA1B,GAA2C6D,aAA3C;AACA;AAAQ;AAAkB;AAA1B;AACH;AACD;;;;;;;;;;mCAOyB;AAAA,cAAhBC,OAAgB,uEAAN,IAAM;;AACpB;AAAkB,cAAnB,CAA0B/D,QAA1B,GAAqC+D,OAArC;AACA;AAAQ;AAAkB;AAA1B;AACH;AACD;;;;;;;;;;;;6CASoC;AAAA,cAAjBC,QAAiB,uEAAN,IAAM;;AAC/B;AAAkB,cAAnB,CAA0B7D,eAA1B,GAA4C6D,QAA5C;AACA;AAAQ;AAAkB;AAA1B;AACH;AACD;;;;;;;;;;;;;kCAUU3M,M,EAAQ;AACb;AAAkB,cAAnB,CAA0B4M,OAA1B,GAAoC5M,MAApC;AACA;AAAQ;AAAkB;AAA1B;AACH;AACD;;;;;;;;;;2CAOmB6M,M,EAAQ;AACtB;AAAkB,cAAnB,CAA0BzD,QAA1B,GAAqCyD,MAArC;AACA;AAAQ;AAAkB;AAA1B;AACH;AACD;;;;;;;;;;2CAOmBA,M,EAAQ;AACtB;AAAkB,cAAnB,CAA0BxD,QAA1B,GAAqCwD,MAArC;AACA;AAAQ;AAAkB;AAA1B;AACH;AACD;;;;;;;;;;;;;;8CAWsBC,Q,EAAU;AAC3B;AAAkB,cAAnB,CAA0BC,wBAA1B,GAAqDD,QAArD;AACA;AAAQ;AAAkB;AAA1B;AACH;AACD;;;;;;;;;;wCAOgBrC,U,EAAYI,G,EAAK;AAC7B;AACA,cAAImC,CAAJ;;AACA,cAAInC,GAAG,CAACzK,OAAJ,IAAe,QAAnB,EAA6B;AACzB;AACA;AACA4M,aAAC,GAAGvC,UAAU,CAACzR,IAAX,GAAmByR,UAAU,CAAC9P,KAAX,GAAmB,CAA1C;AACH,WAJD,MAKK;AACD;AACA,gBAAMsS,MAAM,GAAG,KAAKC,MAAL,KAAgBzC,UAAU,CAACzN,KAA3B,GAAmCyN,UAAU,CAACzR,IAA7D;AACA;;AACA,gBAAMmU,IAAI,GAAG,KAAKD,MAAL,KAAgBzC,UAAU,CAACzR,IAA3B,GAAkCyR,UAAU,CAACzN,KAA1D;AACAgQ,aAAC,GAAGnC,GAAG,CAACzK,OAAJ,IAAe,OAAf,GAAyB6M,MAAzB,GAAkCE,IAAtC;AACH;AACD;;;AACA,cAAIC,CAAJ;;AACA,cAAIvC,GAAG,CAACxK,OAAJ,IAAe,QAAnB,EAA6B;AACzB+M,aAAC,GAAG3C,UAAU,CAAC1R,GAAX,GAAkB0R,UAAU,CAAChQ,MAAX,GAAoB,CAA1C;AACH,WAFD,MAGK;AACD2S,aAAC,GAAGvC,GAAG,CAACxK,OAAJ,IAAe,KAAf,GAAuBoK,UAAU,CAAC1R,GAAlC,GAAwC0R,UAAU,CAAC5N,MAAvD;AACH;;AACD,iBAAO;AAAEmQ,aAAC,EAADA,CAAF;AAAKI,aAAC,EAADA;AAAL,WAAP;AACH;AACD;;;;;;;;;;;;yCASiBtC,W,EAAajN,W,EAAagN,G,EAAK;AAC5C;AACA;;AACA;AACA,cAAIwC,aAAJ;;AACA,cAAIxC,GAAG,CAACvK,QAAJ,IAAgB,QAApB,EAA8B;AAC1B+M,yBAAa,GAAG,CAACxP,WAAW,CAAClD,KAAb,GAAqB,CAArC;AACH,WAFD,MAGK,IAAIkQ,GAAG,CAACvK,QAAJ,KAAiB,OAArB,EAA8B;AAC/B+M,yBAAa,GAAG,KAAKH,MAAL,KAAgB,CAACrP,WAAW,CAAClD,KAA7B,GAAqC,CAArD;AACH,WAFI,MAGA;AACD0S,yBAAa,GAAG,KAAKH,MAAL,KAAgB,CAAhB,GAAoB,CAACrP,WAAW,CAAClD,KAAjD;AACH;AACD;;;AACA,cAAI2S,aAAJ;;AACA,cAAIzC,GAAG,CAACtK,QAAJ,IAAgB,QAApB,EAA8B;AAC1B+M,yBAAa,GAAG,CAACzP,WAAW,CAACpD,MAAb,GAAsB,CAAtC;AACH,WAFD,MAGK;AACD6S,yBAAa,GAAGzC,GAAG,CAACtK,QAAJ,IAAgB,KAAhB,GAAwB,CAAxB,GAA4B,CAAC1C,WAAW,CAACpD,MAAzD;AACH,WArB2C,CAsB5C;;;AACA,iBAAO;AACHuS,aAAC,EAAElC,WAAW,CAACkC,CAAZ,GAAgBK,aADhB;AAEHD,aAAC,EAAEtC,WAAW,CAACsC,CAAZ,GAAgBE;AAFhB,WAAP;AAIH;AACD;;;;;;;;;;;;uCASeC,K,EAAOtN,O,EAAS3F,Q,EAAUiR,Q,EAAU;AAAA,cACzCyB,CADyC,GAChCO,KADgC,CACzCP,CADyC;AAAA,cACtCI,CADsC,GAChCG,KADgC,CACtCH,CADsC;AAE/C;;AACA,cAAIlN,OAAO,GAAG,KAAKsN,UAAL,CAAgBjC,QAAhB,EAA0B,GAA1B,CAAd;AACA;;;AACA,cAAIpL,OAAO,GAAG,KAAKqN,UAAL,CAAgBjC,QAAhB,EAA0B,GAA1B,CAAd,CAL+C,CAM/C;;;AACA,cAAIrL,OAAJ,EAAa;AACT8M,aAAC,IAAI9M,OAAL;AACH;;AACD,cAAIC,OAAJ,EAAa;AACTiN,aAAC,IAAIjN,OAAL;AACH,WAZ8C,CAa/C;;AACA;;;AACA,cAAIsN,YAAY,GAAG,IAAIT,CAAvB;AACA;;AACA,cAAIU,aAAa,GAAIV,CAAC,GAAG/M,OAAO,CAACtF,KAAb,GAAsBL,QAAQ,CAACK,KAAnD;AACA;;AACA,cAAIgT,WAAW,GAAG,IAAIP,CAAtB;AACA;;AACA,cAAIQ,cAAc,GAAIR,CAAC,GAAGnN,OAAO,CAACxF,MAAb,GAAuBH,QAAQ,CAACG,MAArD,CArB+C,CAsB/C;;AACA;;AACA,cAAIoT,YAAY,GAAG,KAAKC,kBAAL,CAAwB7N,OAAO,CAACtF,KAAhC,EAAuC8S,YAAvC,EAAqDC,aAArD,CAAnB;AACA;;;AACA,cAAIK,aAAa,GAAG,KAAKD,kBAAL,CAAwB7N,OAAO,CAACxF,MAAhC,EAAwCkT,WAAxC,EAAqDC,cAArD,CAApB;AACA;;;AACA,cAAIlC,WAAW,GAAGmC,YAAY,GAAGE,aAAjC;AACA,iBAAO;AACHrC,uBAAW,EAAXA,WADG;AAEHN,sCAA0B,EAAGnL,OAAO,CAACtF,KAAR,GAAgBsF,OAAO,CAACxF,MAAzB,KAAqCiR,WAF9D;AAGHsC,oCAAwB,EAAED,aAAa,KAAK9N,OAAO,CAACxF,MAHjD;AAIHwT,sCAA0B,EAAEJ,YAAY,IAAI5N,OAAO,CAACtF;AAJjD,WAAP;AAMH;AACD;;;;;;;;;;;sDAQ8BkR,G,EAAK0B,K,EAAOjT,Q,EAAU;AAChD,cAAI,KAAKuO,sBAAT,EAAiC;AAC7B;AACA,gBAAMqF,eAAe,GAAG5T,QAAQ,CAACuC,MAAT,GAAkB0Q,KAAK,CAACH,CAAhD;AACA;;AACA,gBAAMe,cAAc,GAAG7T,QAAQ,CAAC0C,KAAT,GAAiBuQ,KAAK,CAACP,CAA9C;AACA;;AACA,gBAAMjG,SAAS,GAAGqH,aAAa,CAAC,KAAK7S,WAAL,CAAiB8S,SAAjB,GAA6BtH,SAA9B,CAA/B;AACA;;AACA,gBAAMD,QAAQ,GAAGsH,aAAa,CAAC,KAAK7S,WAAL,CAAiB8S,SAAjB,GAA6BvH,QAA9B,CAA9B;AACA;;AACA,gBAAMwH,WAAW,GAAGzC,GAAG,CAACmC,wBAAJ,IACfjH,SAAS,IAAI,IAAb,IAAqBA,SAAS,IAAImH,eADvC;AAEA;;AACA,gBAAMK,aAAa,GAAG1C,GAAG,CAACoC,0BAAJ,IACjBnH,QAAQ,IAAI,IAAZ,IAAoBA,QAAQ,IAAIqH,cADrC;AAEA,mBAAOG,WAAW,IAAIC,aAAtB;AACH;;AACD,iBAAO,KAAP;AACH;AACD;;;;;;;;;;;;;;;6CAYqBC,K,EAAOvO,O,EAAShE,c,EAAgB;AACjD;AACA;AACA;AACA,cAAI,KAAK+P,mBAAL,IAA4B,KAAKlD,eAArC,EAAsD;AAClD,mBAAO;AACHkE,eAAC,EAAEwB,KAAK,CAACxB,CAAN,GAAU,KAAKhB,mBAAL,CAAyBgB,CADnC;AAEHI,eAAC,EAAEoB,KAAK,CAACpB,CAAN,GAAU,KAAKpB,mBAAL,CAAyBoB;AAFnC,aAAP;AAIH;AACD;;;AACA,cAAM9S,QAAQ,GAAG,KAAK8P,aAAtB,CAXiD,CAYjD;AACA;;AACA;;AACA,cAAMqE,aAAa,GAAGvS,IAAI,CAACwS,GAAL,CAASF,KAAK,CAACxB,CAAN,GAAU/M,OAAO,CAACtF,KAAlB,GAA0BL,QAAQ,CAAC0C,KAA5C,EAAmD,CAAnD,CAAtB;AACA;;AACA,cAAM2R,cAAc,GAAGzS,IAAI,CAACwS,GAAL,CAASF,KAAK,CAACpB,CAAN,GAAUnN,OAAO,CAACxF,MAAlB,GAA2BH,QAAQ,CAACuC,MAA7C,EAAqD,CAArD,CAAvB;AACA;;AACA,cAAM+R,WAAW,GAAG1S,IAAI,CAACwS,GAAL,CAASpU,QAAQ,CAACvB,GAAT,GAAekD,cAAc,CAAClD,GAA9B,GAAoCyV,KAAK,CAACpB,CAAnD,EAAsD,CAAtD,CAApB;AACA;;AACA,cAAMyB,YAAY,GAAG3S,IAAI,CAACwS,GAAL,CAASpU,QAAQ,CAACtB,IAAT,GAAgBiD,cAAc,CAACjD,IAA/B,GAAsCwV,KAAK,CAACxB,CAArD,EAAwD,CAAxD,CAArB,CArBiD,CAsBjD;;AACA;;AACA,cAAI8B,KAAK,GAAG,CAAZ;AACA;;AACA,cAAIC,KAAK,GAAG,CAAZ,CA1BiD,CA2BjD;AACA;AACA;;AACA,cAAI9O,OAAO,CAACtF,KAAR,IAAiBL,QAAQ,CAACK,KAA9B,EAAqC;AACjCmU,iBAAK,GAAGD,YAAY,IAAI,CAACJ,aAAzB;AACH,WAFD,MAGK;AACDK,iBAAK,GAAGN,KAAK,CAACxB,CAAN,GAAU,KAAKjE,eAAf,GAAkCzO,QAAQ,CAACtB,IAAT,GAAgBiD,cAAc,CAACjD,IAAhC,GAAwCwV,KAAK,CAACxB,CAA/E,GAAmF,CAA3F;AACH;;AACD,cAAI/M,OAAO,CAACxF,MAAR,IAAkBH,QAAQ,CAACG,MAA/B,EAAuC;AACnCsU,iBAAK,GAAGH,WAAW,IAAI,CAACD,cAAxB;AACH,WAFD,MAGK;AACDI,iBAAK,GAAGP,KAAK,CAACpB,CAAN,GAAU,KAAKrE,eAAf,GAAkCzO,QAAQ,CAACvB,GAAT,GAAekD,cAAc,CAAClD,GAA/B,GAAsCyV,KAAK,CAACpB,CAA7E,GAAiF,CAAzF;AACH;;AACD,eAAKpB,mBAAL,GAA2B;AAAEgB,aAAC,EAAE8B,KAAL;AAAY1B,aAAC,EAAE2B;AAAf,WAA3B;AACA,iBAAO;AACH/B,aAAC,EAAEwB,KAAK,CAACxB,CAAN,GAAU8B,KADV;AAEH1B,aAAC,EAAEoB,KAAK,CAACpB,CAAN,GAAU2B;AAFV,WAAP;AAIH;AACD;;;;;;;;;;uCAOexD,Q,EAAUT,W,EAAa;AAClC,eAAKkE,mBAAL,CAAyBzD,QAAzB;;AACA,eAAK0D,wBAAL,CAA8BnE,WAA9B,EAA2CS,QAA3C;;AACA,eAAK2D,qBAAL,CAA2BpE,WAA3B,EAAwCS,QAAxC;;AACA,cAAIA,QAAQ,CAAClM,UAAb,EAAyB;AACrB,iBAAK8P,gBAAL,CAAsB5D,QAAQ,CAAClM,UAA/B;AACH,WANiC,CAOlC;;;AACA,eAAKyK,aAAL,GAAqByB,QAArB,CARkC,CASlC;AACA;AACA;;AACA,cAAI,KAAKrC,gBAAL,CAAsBkG,SAAtB,CAAgC9N,MAApC,EAA4C;AACxC;AACA,gBAAMX,wBAAwB,GAAG,KAAK0O,oBAAL,EAAjC;AACA;;;AACA,gBAAMC,WAAW,GAAG,IAAI7O,8BAAJ,CAAmC8K,QAAnC,EAA6C5K,wBAA7C,CAApB;;AACA,iBAAKuI,gBAAL,CAAsBzH,IAAtB,CAA2B6N,WAA3B;AACH;;AACD,eAAKzF,gBAAL,GAAwB,KAAxB;AACH;AACD;;;;;;;;;4CAMoB0B,Q,EAAU;AAC1B,cAAI,CAAC,KAAKwB,wBAAV,EAAoC;AAChC;AACH;AACD;;;AACA,cAAMwC,QAAQ;AAAI;AAAkB,eAAK5F,YAAxB,CAAuCtG,gBAAvC,CAAwD,KAAK0J,wBAA7D,CAAjB;AACA;;;AACA,cAAIyC,OAAJ;AACA;;AACA,cAAIC,OAAO,GAAGlE,QAAQ,CAAChL,QAAvB;;AACA,cAAIgL,QAAQ,CAACjL,QAAT,KAAsB,QAA1B,EAAoC;AAChCkP,mBAAO,GAAG,QAAV;AACH,WAFD,MAGK,IAAI,KAAKtC,MAAL,EAAJ,EAAmB;AACpBsC,mBAAO,GAAGjE,QAAQ,CAACjL,QAAT,KAAsB,OAAtB,GAAgC,OAAhC,GAA0C,MAApD;AACH,WAFI,MAGA;AACDkP,mBAAO,GAAGjE,QAAQ,CAACjL,QAAT,KAAsB,OAAtB,GAAgC,MAAhC,GAAyC,OAAnD;AACH;;AACD,eAAK,IAAIe,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGkO,QAAQ,CAACjO,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACtCkO,oBAAQ,CAAClO,CAAD,CAAR,CAAY7H,KAAZ,CAAkBkW,eAAlB,aAAuCF,OAAvC,cAAkDC,OAAlD;AACH;AACJ;AACD;;;;;;;;;;;;;kDAU0BzP,M,EAAQuL,Q,EAAU;AACxC;AACA,cAAMjR,QAAQ,GAAG,KAAK8P,aAAtB;AACA;;AACA,cAAMuF,KAAK,GAAG,KAAKzC,MAAL,EAAd;AACA;;;AACA,cAAIzS,MAAJ;AACA;;AACA,cAAI1B,GAAJ;AACA;;AACA,cAAI8D,MAAJ;;AACA,cAAI0O,QAAQ,CAAChL,QAAT,KAAsB,KAA1B,EAAiC;AAC7B;AACAxH,eAAG,GAAGiH,MAAM,CAACoN,CAAb;AACA3S,kBAAM,GAAGH,QAAQ,CAACG,MAAT,GAAkB1B,GAAlB,GAAwB,KAAKgQ,eAAtC;AACH,WAJD,MAKK,IAAIwC,QAAQ,CAAChL,QAAT,KAAsB,QAA1B,EAAoC;AACrC;AACA;AACA;AACA1D,kBAAM,GAAGvC,QAAQ,CAACG,MAAT,GAAkBuF,MAAM,CAACoN,CAAzB,GAA6B,KAAKrE,eAAL,GAAuB,CAA7D;AACAtO,kBAAM,GAAGH,QAAQ,CAACG,MAAT,GAAkBoC,MAAlB,GAA2B,KAAKkM,eAAzC;AACH,WANI,MAOA;AACD;AACA;AACA;AACA;;AACA;AACA,gBAAM6G,8BAA8B,GAAG1T,IAAI,CAAC2T,GAAL,CAASvV,QAAQ,CAACuC,MAAT,GAAkBmD,MAAM,CAACoN,CAAzB,GAA6B9S,QAAQ,CAACvB,GAA/C,EAAoDiH,MAAM,CAACoN,CAA3D,CAAvC;AACA;;AACA,gBAAM0C,cAAc,GAAG,KAAKrH,oBAAL,CAA0BhO,MAAjD;AACAA,kBAAM,GAAGmV,8BAA8B,GAAG,CAA1C;AACA7W,eAAG,GAAGiH,MAAM,CAACoN,CAAP,GAAWwC,8BAAjB;;AACA,gBAAInV,MAAM,GAAGqV,cAAT,IAA2B,CAAC,KAAKjG,gBAAjC,IAAqD,CAAC,KAAKjB,cAA/D,EAA+E;AAC3E7P,iBAAG,GAAGiH,MAAM,CAACoN,CAAP,GAAY0C,cAAc,GAAG,CAAnC;AACH;AACJ,WArCuC,CAsCxC;;AACA;;;AACA,cAAMC,4BAA4B,GAAIxE,QAAQ,CAACjL,QAAT,KAAsB,OAAtB,IAAiC,CAACqP,KAAnC,IAChCpE,QAAQ,CAACjL,QAAT,KAAsB,KAAtB,IAA+BqP,KADpC,CAxCwC,CA0CxC;;AACA;;AACA,cAAMK,2BAA2B,GAAIzE,QAAQ,CAACjL,QAAT,KAAsB,KAAtB,IAA+B,CAACqP,KAAjC,IAC/BpE,QAAQ,CAACjL,QAAT,KAAsB,OAAtB,IAAiCqP,KADtC;AAEA;;AACA,cAAIhV,KAAJ;AACA;;AACA,cAAI3B,IAAJ;AACA;;AACA,cAAIgE,KAAJ;;AACA,cAAIgT,2BAAJ,EAAiC;AAC7BhT,iBAAK,GAAG1C,QAAQ,CAACK,KAAT,GAAiBqF,MAAM,CAACgN,CAAxB,GAA4B,KAAKjE,eAAzC;AACApO,iBAAK,GAAGqF,MAAM,CAACgN,CAAP,GAAW,KAAKjE,eAAxB;AACH,WAHD,MAIK,IAAIgH,4BAAJ,EAAkC;AACnC/W,gBAAI,GAAGgH,MAAM,CAACgN,CAAd;AACArS,iBAAK,GAAGL,QAAQ,CAAC0C,KAAT,GAAiBgD,MAAM,CAACgN,CAAhC;AACH,WAHI,MAIA;AACD;AACA;AACA;AACA;;AACA;AACA,gBAAM4C,+BAA8B,GAAG1T,IAAI,CAAC2T,GAAL,CAASvV,QAAQ,CAAC0C,KAAT,GAAiBgD,MAAM,CAACgN,CAAxB,GAA4B1S,QAAQ,CAACtB,IAA9C,EAAoDgH,MAAM,CAACgN,CAA3D,CAAvC;AACA;;;AACA,gBAAMiD,aAAa,GAAG,KAAKxH,oBAAL,CAA0B9N,KAAhD;AACAA,iBAAK,GAAGiV,+BAA8B,GAAG,CAAzC;AACA5W,gBAAI,GAAGgH,MAAM,CAACgN,CAAP,GAAW4C,+BAAlB;;AACA,gBAAIjV,KAAK,GAAGsV,aAAR,IAAyB,CAAC,KAAKpG,gBAA/B,IAAmD,CAAC,KAAKjB,cAA7D,EAA6E;AACzE5P,kBAAI,GAAGgH,MAAM,CAACgN,CAAP,GAAYiD,aAAa,GAAG,CAAnC;AACH;AACJ;;AACD,iBAAO;AAAElX,eAAG;AAAG;AAAkBA,eAA1B;AAAiCC,gBAAI;AAAG;AAAkBA,gBAA1D;AAAkE6D,kBAAM;AAAG;AAAkBA,kBAA7F;AAAuGG,iBAAK;AAAG;AAAkBA,iBAAjI;AAA0IrC,iBAAK,EAALA,KAA1I;AAAiJF,kBAAM,EAANA;AAAjJ,WAAP;AACH;AACD;;;;;;;;;;;;8CASsBuF,M,EAAQuL,Q,EAAU;AACpC;AACA,cAAMC,eAAe,GAAG,KAAKC,yBAAL,CAA+BzL,MAA/B,EAAuCuL,QAAvC,CAAxB,CAFoC,CAGpC;AACA;;;AACA,cAAI,CAAC,KAAK1B,gBAAN,IAA0B,CAAC,KAAKjB,cAApC,EAAoD;AAChD4C,2BAAe,CAAC/Q,MAAhB,GAAyByB,IAAI,CAAC2T,GAAL,CAASrE,eAAe,CAAC/Q,MAAzB,EAAiC,KAAKgO,oBAAL,CAA0BhO,MAA3D,CAAzB;AACA+Q,2BAAe,CAAC7Q,KAAhB,GAAwBuB,IAAI,CAAC2T,GAAL,CAASrE,eAAe,CAAC7Q,KAAzB,EAAgC,KAAK8N,oBAAL,CAA0B9N,KAA1D,CAAxB;AACH;AACD;;;AACA,cAAMuV,MAAM;AAAI;AAAkB,YAAlC;;AACA,cAAI,KAAKC,iBAAL,EAAJ,EAA8B;AAC1BD,kBAAM,CAACnX,GAAP,GAAamX,MAAM,CAAClX,IAAP,GAAc,GAA3B;AACAkX,kBAAM,CAACrT,MAAP,GAAgBqT,MAAM,CAAClT,KAAP,GAAekT,MAAM,CAACjJ,SAAP,GAAmBiJ,MAAM,CAAClJ,QAAP,GAAkB,EAApE;AACAkJ,kBAAM,CAACvV,KAAP,GAAeuV,MAAM,CAACzV,MAAP,GAAgB,MAA/B;AACH,WAJD,MAKK;AACD;AACA,gBAAMwM,SAAS,GAAG,KAAK1L,WAAL,CAAiB8S,SAAjB,GAA6BpH,SAA/C;AACA;;;AACA,gBAAMD,QAAQ,GAAG,KAAKzL,WAAL,CAAiB8S,SAAjB,GAA6BrH,QAA9C;;AACAkJ,kBAAM,CAACzV,MAAP,GAAgB,kFAAoB+Q,eAAe,CAAC/Q,MAApC,CAAhB;AACAyV,kBAAM,CAACnX,GAAP,GAAa,kFAAoByS,eAAe,CAACzS,GAApC,CAAb;AACAmX,kBAAM,CAACrT,MAAP,GAAgB,kFAAoB2O,eAAe,CAAC3O,MAApC,CAAhB;AACAqT,kBAAM,CAACvV,KAAP,GAAe,kFAAoB6Q,eAAe,CAAC7Q,KAApC,CAAf;AACAuV,kBAAM,CAAClX,IAAP,GAAc,kFAAoBwS,eAAe,CAACxS,IAApC,CAAd;AACAkX,kBAAM,CAAClT,KAAP,GAAe,kFAAoBwO,eAAe,CAACxO,KAApC,CAAf,CAVC,CAWD;;AACA,gBAAIuO,QAAQ,CAACjL,QAAT,KAAsB,QAA1B,EAAoC;AAChC4P,oBAAM,CAAChE,UAAP,GAAoB,QAApB;AACH,aAFD,MAGK;AACDgE,oBAAM,CAAChE,UAAP,GAAoBX,QAAQ,CAACjL,QAAT,KAAsB,KAAtB,GAA8B,UAA9B,GAA2C,YAA/D;AACH;;AACD,gBAAIiL,QAAQ,CAAChL,QAAT,KAAsB,QAA1B,EAAoC;AAChC2P,oBAAM,CAAC/D,cAAP,GAAwB,QAAxB;AACH,aAFD,MAGK;AACD+D,oBAAM,CAAC/D,cAAP,GAAwBZ,QAAQ,CAAChL,QAAT,KAAsB,QAAtB,GAAiC,UAAjC,GAA8C,YAAtE;AACH;;AACD,gBAAI0G,SAAJ,EAAe;AACXiJ,oBAAM,CAACjJ,SAAP,GAAmB,kFAAoBA,SAApB,CAAnB;AACH;;AACD,gBAAID,QAAJ,EAAc;AACVkJ,oBAAM,CAAClJ,QAAP,GAAkB,kFAAoBA,QAApB,CAAlB;AACH;AACJ;;AACD,eAAKyB,oBAAL,GAA4B+C,eAA5B;AACAS,sBAAY;AAAE;AAAkB,eAAKtC,YAAxB,CAAuCnQ,KAAxC,EAA+C0W,MAA/C,CAAZ;AACH;AACD;;;;;;;;kDAK0B;AACtBjE,sBAAY;AAAE;AAAkB,eAAKtC,YAAxB,CAAuCnQ,KAAxC;AAAgD;AAAkB;AAC1ET,eAAG,EAAE,GADqE;AAE1EC,gBAAI,EAAE,GAFoE;AAG1EgE,iBAAK,EAAE,GAHmE;AAI1EH,kBAAM,EAAE,GAJkE;AAK1EpC,kBAAM,EAAE,EALkE;AAM1EE,iBAAK,EAAE,EANmE;AAO1EuR,sBAAU,EAAE,EAP8D;AAQ1EC,0BAAc,EAAE;AAR0D,WAAlE,CAAZ;AAUH;AACD;;;;;;;;qDAK6B;AACzBF,sBAAY,CAAC,KAAKjI,KAAL,CAAWxK,KAAZ;AAAoB;AAAkB;AAC9CT,eAAG,EAAE,EADyC;AAE9CC,gBAAI,EAAE,EAFwC;AAG9C6D,kBAAM,EAAE,EAHsC;AAI9CG,iBAAK,EAAE,EAJuC;AAK9CuO,oBAAQ,EAAE,EALoC;AAM9C6E,qBAAS,EAAE;AANmC,WAAtC,CAAZ;AAQH;AACD;;;;;;;;;;iDAOyBtF,W,EAAaS,Q,EAAU;AAC5C;AACA,cAAM2E,MAAM;AAAI;AAAkB,YAAlC;AACA;;AACA,cAAMG,gBAAgB,GAAG,KAAKF,iBAAL,EAAzB;AACA;;;AACA,cAAMG,qBAAqB,GAAG,KAAKzH,sBAAnC;AACA;;AACA,cAAMzK,MAAM,GAAG,KAAK7C,WAAL,CAAiB8S,SAAjB,EAAf;;AACA,cAAIgC,gBAAJ,EAAsB;AAClB;AACA,gBAAMpU,cAAc,GAAG,KAAKrD,cAAL,CAAoBW,yBAApB,EAAvB;;AACA0S,wBAAY,CAACiE,MAAD,EAAS,KAAKK,iBAAL,CAAuBhF,QAAvB,EAAiCT,WAAjC,EAA8C7O,cAA9C,CAAT,CAAZ;AACAgQ,wBAAY,CAACiE,MAAD,EAAS,KAAKM,iBAAL,CAAuBjF,QAAvB,EAAiCT,WAAjC,EAA8C7O,cAA9C,CAAT,CAAZ;AACH,WALD,MAMK;AACDiU,kBAAM,CAAC3E,QAAP,GAAkB,QAAlB;AACH,WAjB2C,CAkB5C;AACA;AACA;AACA;AACA;;AACA;;;AACA,cAAIkF,eAAe,GAAG,EAAtB;AACA;;AACA,cAAIvQ,OAAO,GAAG,KAAKsN,UAAL,CAAgBjC,QAAhB,EAA0B,GAA1B,CAAd;AACA;;;AACA,cAAIpL,OAAO,GAAG,KAAKqN,UAAL,CAAgBjC,QAAhB,EAA0B,GAA1B,CAAd;;AACA,cAAIrL,OAAJ,EAAa;AACTuQ,2BAAe,yBAAkBvQ,OAAlB,SAAf;AACH;;AACD,cAAIC,OAAJ,EAAa;AACTsQ,2BAAe,yBAAkBtQ,OAAlB,QAAf;AACH;;AACD+P,gBAAM,CAACE,SAAP,GAAmBK,eAAe,CAACC,IAAhB,EAAnB,CAnC4C,CAoC5C;AACA;AACA;AACA;AACA;;AACA,cAAItS,MAAM,CAAC6I,SAAX,EAAsB;AAClB,gBAAIoJ,gBAAJ,EAAsB;AAClBH,oBAAM,CAACjJ,SAAP,GAAmB,kFAAoB7I,MAAM,CAAC6I,SAA3B,CAAnB;AACH,aAFD,MAGK,IAAIqJ,qBAAJ,EAA2B;AAC5BJ,oBAAM,CAACjJ,SAAP,GAAmB,EAAnB;AACH;AACJ;;AACD,cAAI7I,MAAM,CAAC4I,QAAX,EAAqB;AACjB,gBAAIqJ,gBAAJ,EAAsB;AAClBH,oBAAM,CAAClJ,QAAP,GAAkB,kFAAoB5I,MAAM,CAAC4I,QAA3B,CAAlB;AACH,aAFD,MAGK,IAAIsJ,qBAAJ,EAA2B;AAC5BJ,oBAAM,CAAClJ,QAAP,GAAkB,EAAlB;AACH;AACJ;;AACDiF,sBAAY,CAAC,KAAKjI,KAAL,CAAWxK,KAAZ,EAAmB0W,MAAnB,CAAZ;AACH;AACD;;;;;;;;;;;0CAQkB3E,Q,EAAUT,W,EAAa7O,c,EAAgB;AACrD;AACA;;AACA;AACA,cAAIiU,MAAM;AAAI;AAAkB;AAAEnX,eAAG,EAAE,EAAP;AAAW8D,kBAAM,EAAE;AAAnB,WAAhC;AACA;;AACA,cAAImO,YAAY,GAAG,KAAKC,gBAAL,CAAsBH,WAAtB,EAAmC,KAAKN,YAAxC,EAAsDe,QAAtD,CAAnB;;AACA,cAAI,KAAK7C,SAAT,EAAoB;AAChBsC,wBAAY,GAAG,KAAK2F,oBAAL,CAA0B3F,YAA1B,EAAwC,KAAKR,YAA7C,EAA2DvO,cAA3D,CAAf;AACH;AACD;;;AACA,cAAI2U,qBAAqB,GAAG,KAAKpI,iBAAL,CAAuBqI,mBAAvB,GAA6C9S,qBAA7C,GAAqEhF,GAAjG,CAXqD,CAYrD;AACA;AACA;AACA;;;AACAiS,sBAAY,CAACoC,CAAb,IAAkBwD,qBAAlB,CAhBqD,CAiBrD;AACA;;AACA,cAAIrF,QAAQ,CAAChL,QAAT,KAAsB,QAA1B,EAAoC;AAChC;AACA;;AACA;AACA,gBAAMuQ,cAAc;AAAI;AAAkB,iBAAK5X,SAAL,CAAeG,eAAlC,CAAoD0X,YAA3E;AACAb,kBAAM,CAACrT,MAAP,aAAmBiU,cAAc,IAAI9F,YAAY,CAACoC,CAAb,GAAiB,KAAK5C,YAAL,CAAkB/P,MAAvC,CAAjC;AACH,WAND,MAOK;AACDyV,kBAAM,CAACnX,GAAP,GAAa,kFAAoBiS,YAAY,CAACoC,CAAjC,CAAb;AACH;;AACD,iBAAO8C,MAAP;AACH;AACD;;;;;;;;;;;0CAQkB3E,Q,EAAUT,W,EAAa7O,c,EAAgB;AACrD;AACA;;AACA;AACA,cAAIiU,MAAM;AAAI;AAAkB;AAAElX,gBAAI,EAAE,EAAR;AAAYgE,iBAAK,EAAE;AAAnB,WAAhC;AACA;;AACA,cAAIgO,YAAY,GAAG,KAAKC,gBAAL,CAAsBH,WAAtB,EAAmC,KAAKN,YAAxC,EAAsDe,QAAtD,CAAnB;;AACA,cAAI,KAAK7C,SAAT,EAAoB;AAChBsC,wBAAY,GAAG,KAAK2F,oBAAL,CAA0B3F,YAA1B,EAAwC,KAAKR,YAA7C,EAA2DvO,cAA3D,CAAf;AACH,WAToD,CAUrD;AACA;AACA;AACA;;AACA;;;AACA,cAAI+U,uBAAJ;;AACA,cAAI,KAAK9D,MAAL,EAAJ,EAAmB;AACf8D,mCAAuB,GAAGzF,QAAQ,CAACjL,QAAT,KAAsB,KAAtB,GAA8B,MAA9B,GAAuC,OAAjE;AACH,WAFD,MAGK;AACD0Q,mCAAuB,GAAGzF,QAAQ,CAACjL,QAAT,KAAsB,KAAtB,GAA8B,OAA9B,GAAwC,MAAlE;AACH,WArBoD,CAsBrD;AACA;;;AACA,cAAI0Q,uBAAuB,KAAK,OAAhC,EAAyC;AACrC;AACA,gBAAMC,aAAa;AAAI;AAAkB,iBAAK/X,SAAL,CAAeG,eAAlC,CAAoD6X,WAA1E;AACAhB,kBAAM,CAAClT,KAAP,aAAkBiU,aAAa,IAAIjG,YAAY,CAACgC,CAAb,GAAiB,KAAKxC,YAAL,CAAkB7P,KAAvC,CAA/B;AACH,WAJD,MAKK;AACDuV,kBAAM,CAAClX,IAAP,GAAc,kFAAoBgS,YAAY,CAACgC,CAAjC,CAAd;AACH;;AACD,iBAAOkD,MAAP;AACH;AACD;;;;;;;;;+CAMuB;AACnB;;AACA;AACA,cAAMiB,YAAY,GAAG,KAAK5G,cAAL,EAArB;AACA;;;AACA,cAAM6G,aAAa,GAAG,KAAKpN,KAAL,CAAWjG,qBAAX,EAAtB,CALmB,CAMnB;AACA;AACA;;AACA;;;AACA,cAAMsT,qBAAqB,GAAG,KAAKrI,YAAL,CAAkBsI,GAAlB;AAAuB;;;;AAIrD,oBAAAC,UAAU,EAAI;AACV,mBAAOA,UAAU,CAACC,aAAX,GAA2BC,aAA3B,CAAyC1T,qBAAzC,EAAP;AACH,WAN6B,CAA9B;;AAOA,iBAAO;AACH2T,2BAAe,EAAExU,2BAA2B,CAACiU,YAAD,EAAeE,qBAAf,CADzC;AAEHM,+BAAmB,EAAEpV,4BAA4B,CAAC4U,YAAD,EAAeE,qBAAf,CAF9C;AAGHO,4BAAgB,EAAE1U,2BAA2B,CAACkU,aAAD,EAAgBC,qBAAhB,CAH1C;AAIHQ,gCAAoB,EAAEtV,4BAA4B,CAAC6U,aAAD,EAAgBC,qBAAhB;AAJ/C,WAAP;AAMH;AACD;;;;;;;;;;2CAOmB/P,M,EAAsB;AAAA,4CAAXwQ,SAAW;AAAXA,qBAAW;AAAA;;AACrC,iBAAOA,SAAS,CAACC,MAAV;AAAkB;;;;;AAKzB,oBAACC,YAAD,EAAeC,eAAf,EAAmC;AAC/B,mBAAOD,YAAY,GAAG9V,IAAI,CAACwS,GAAL,CAASuD,eAAT,EAA0B,CAA1B,CAAtB;AACH,WAPM,EAOH3Q,MAPG,CAAP;AAQH;AACD;;;;;;;;mDAK2B;AACvB;AACA;AACA;AACA;AACA;;AACA;AACA,cAAM3G,KAAK;AAAI;AAAkB,eAAKzB,SAAL,CAAeG,eAAlC,CAAoD6X,WAAlE;AACA;;AACA,cAAMzW,MAAM;AAAI;AAAkB,eAAKvB,SAAL,CAAeG,eAAlC,CAAoD0X,YAAnE;AACA;;AACA,cAAM9U,cAAc,GAAG,KAAKrD,cAAL,CAAoBW,yBAApB,EAAvB;;AACA,iBAAO;AACHR,eAAG,EAAEkD,cAAc,CAAClD,GAAf,GAAqB,KAAKgQ,eAD5B;AAEH/P,gBAAI,EAAEiD,cAAc,CAACjD,IAAf,GAAsB,KAAK+P,eAF9B;AAGH/L,iBAAK,EAAEf,cAAc,CAACjD,IAAf,GAAsB2B,KAAtB,GAA8B,KAAKoO,eAHvC;AAIHlM,kBAAM,EAAEZ,cAAc,CAAClD,GAAf,GAAqB0B,MAArB,GAA8B,KAAKsO,eAJxC;AAKHpO,iBAAK,EAAEA,KAAK,GAAI,IAAI,KAAKoO,eALtB;AAMHtO,kBAAM,EAAEA,MAAM,GAAI,IAAI,KAAKsO;AANxB,WAAP;AAQH;AACD;;;;;;;;iCAKS;AACL,iBAAO,KAAKxN,WAAL,CAAiBsL,YAAjB,OAAoC,KAA3C;AACH;AACD;;;;;;;;4CAKoB;AAChB,iBAAO,CAAC,KAAKgC,sBAAN,IAAgC,KAAKH,SAA5C;AACH;AACD;;;;;;;;;;mCAOW6C,Q,EAAU2G,I,EAAM;AACvB,cAAIA,IAAI,KAAK,GAAb,EAAkB;AACd;AACA;AACA,mBAAO3G,QAAQ,CAACrL,OAAT,IAAoB,IAApB,GAA2B,KAAKkJ,QAAhC,GAA2CmC,QAAQ,CAACrL,OAA3D;AACH;;AACD,iBAAOqL,QAAQ,CAACpL,OAAT,IAAoB,IAApB,GAA2B,KAAKkJ,QAAhC,GAA2CkC,QAAQ,CAACpL,OAA3D;AACH;AACD;;;;;;;;6CAKqB;AACjB,cAAI,CAAC,KAAK8I,mBAAL,CAAyB3H,MAA9B,EAAsC;AAClC,kBAAMxG,KAAK,CAAC,uEAAD,CAAX;AACH,WAHgB,CAIjB;AACA;;;AACA,eAAKmO,mBAAL,CAAyBjB,OAAzB;AAAkC;;;;AAIlC,oBAAAmK,IAAI,EAAI;AACJpR,sCAA0B,CAAC,SAAD,EAAYoR,IAAI,CAAC/R,OAAjB,CAA1B;AACAQ,oCAAwB,CAAC,SAAD,EAAYuR,IAAI,CAAC9R,OAAjB,CAAxB;AACAU,sCAA0B,CAAC,UAAD,EAAaoR,IAAI,CAAC7R,QAAlB,CAA1B;AACAM,oCAAwB,CAAC,UAAD,EAAauR,IAAI,CAAC5R,QAAlB,CAAxB;AACH,WATD;AAUH;AACD;;;;;;;;;yCAMiBuH,U,EAAY;AAAA;;AACzB,cAAI,KAAK9D,KAAT,EAAgB;AACZ,sFAAY8D,UAAZ,EAAwBE,OAAxB;AAAiC;;;;AAIjC,sBAAAC,QAAQ,EAAI;AACR,kBAAIA,QAAQ,KAAK,EAAb,IAAmB,OAAI,CAACqB,oBAAL,CAA0BxH,OAA1B,CAAkCmG,QAAlC,MAAgD,CAAC,CAAxE,EAA2E;AACvE,uBAAI,CAACqB,oBAAL,CAA0B1H,IAA1B,CAA+BqG,QAA/B;;AACA,uBAAI,CAACjE,KAAL,CAAWvK,SAAX,CAAqBC,GAArB,CAAyBuO,QAAzB;AACH;AACJ,aATD;AAUH;AACJ;AACD;;;;;;;;6CAKqB;AAAA;;AACjB,cAAI,KAAKjE,KAAT,EAAgB;AACZ,iBAAKsF,oBAAL,CAA0BtB,OAA1B;AAAmC;;;;AAInC,sBAAAC,QAAQ,EAAI;AACR,qBAAI,CAACjE,KAAL,CAAWvK,SAAX,CAAqBS,MAArB,CAA4B+N,QAA5B;AACH,aAND;;AAOA,iBAAKqB,oBAAL,GAA4B,EAA5B;AACH;AACJ;AACD;;;;;;;;yCAKiB;AACb;AACA,cAAMtJ,MAAM,GAAG,KAAK4M,OAApB;;AACA,cAAI5M,MAAM,YAAY,wDAAtB,EAAkC;AAC9B,mBAAOA,MAAM,CAACyR,aAAP,CAAqB1T,qBAArB,EAAP;AACH,WALY,CAMb;;;AACA,cAAIiC,MAAM,YAAYoS,OAAtB,EAA+B;AAC3B,mBAAOpS,MAAM,CAACjC,qBAAP,EAAP;AACH;AACD;;;AACA,cAAMpD,KAAK,GAAGqF,MAAM,CAACrF,KAAP,IAAgB,CAA9B;AACA;;AACA,cAAMF,MAAM,GAAGuF,MAAM,CAACvF,MAAP,IAAiB,CAAhC,CAba,CAcb;;AACA,iBAAO;AACH1B,eAAG,EAAEiH,MAAM,CAACoN,CADT;AAEHvQ,kBAAM,EAAEmD,MAAM,CAACoN,CAAP,GAAW3S,MAFhB;AAGHzB,gBAAI,EAAEgH,MAAM,CAACgN,CAHV;AAIHhQ,iBAAK,EAAEgD,MAAM,CAACgN,CAAP,GAAWrS,KAJf;AAKHF,kBAAM,EAANA,MALG;AAMHE,iBAAK,EAALA;AANG,WAAP;AAQH;;;4BApmCe;AACZ,iBAAO,KAAKsO,mBAAZ;AACH;;;;;;AAomCL,QAAI,KAAJ,EAAW,CAsLV;AACD;;;;;;AAIA,aAASoJ,KAAT,GAAiB,CAAG;;AACpB,QAAI,KAAJ,EAAW,CAKV;AACD;;;;;;AAIA,aAASC,UAAT,GAAsB,CAAG;;AACzB,QAAI,KAAJ,EAAW,CAqBV;AACD;;;;;;AAIA,aAASC,gBAAT,GAA4B,CAAG;;AAC/B,QAAI,KAAJ,EAAW,CAWV;AACD;;;;;;AAIA,aAASC,eAAT,GAA2B,CAAG;;AAC9B,QAAI,KAAJ,EAAW,CAaV;AACD;;;;;;AAIA,aAASC,WAAT,GAAuB,CAAG;;AAC1B,QAAI,KAAJ,EAAW,CASV;AACD;;;;;;AAIA,aAASC,iBAAT,GAA6B,CAAG;;AAChC,QAAI,KAAJ,EAAW,CAiBV;AACD;;;;;;;;AAMA,aAASzG,YAAT,CAAsB0G,WAAtB,EAAmCC,MAAnC,EAA2C;AACvC,WAAK,IAAIhT,GAAT,IAAgBgT,MAAhB,EAAwB;AACpB,YAAIA,MAAM,CAACC,cAAP,CAAsBjT,GAAtB,CAAJ,EAAgC;AAC5B+S,qBAAW,CAAC/S,GAAD,CAAX,GAAmBgT,MAAM,CAAChT,GAAD,CAAzB;AACH;AACJ;;AACD,aAAO+S,WAAP;AACH;AACD;;;;;;;;AAMA,aAASvE,aAAT,CAAuB0E,KAAvB,EAA8B;AAC1B,UAAI,OAAOA,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,IAAI,IAA1C,EAAgD;AAAA,2BACrBA,KAAK,CAACC,KAAN,CAAY1K,cAAZ,CADqB;AAAA;AAAA,YACrCvH,KADqC;AAAA,YAC9BkS,KAD8B;;AAE5C,eAAQ,CAACA,KAAD,IAAUA,KAAK,KAAK,IAArB,GAA6BC,UAAU,CAACnS,KAAD,CAAvC,GAAiD,IAAxD;AACH;;AACD,aAAOgS,KAAK,IAAI,IAAhB;AACH;AAED;;;;;;AAKA;;;;;;;;;;;QASMI,yB;AACF;;;;;;;;;AASA,yCAAYC,SAAZ,EAAuBC,UAAvB,EAAmC7K,WAAnC,EAAgD8K,aAAhD,EAA+Dxa,QAA/D,EAAyEya,QAAzE,EAAmFC,gBAAnF,EAAqG;AAAA;;AACjG;;;AAGA,aAAKtK,mBAAL,GAA2B,EAA3B,CAJiG,CAKjG;AACA;AACA;AACA;;AACA,aAAKlE,iBAAL,GAAyB,IAAIuD,iCAAJ,CAAsCC,WAAtC,EAAmD8K,aAAnD,EAAkExa,QAAlE,EAA4Eya,QAA5E,EAAsFC,gBAAtF,EACpBC,sBADoB,CACG,KADH,EAEpBC,QAFoB,CAEX,KAFW,EAGpBC,kBAHoB,CAGD,CAHC,CAAzB;AAIA,aAAKC,oBAAL,CAA0BR,SAA1B,EAAqCC,UAArC;AACH;AACD;;;;;;;;;AAqBA;;;;;+BAKOzX,U,EAAY;AACf,eAAKJ,WAAL,GAAmBI,UAAnB;;AACA,eAAKoJ,iBAAL,CAAuBD,MAAvB,CAA8BnJ,UAA9B;;AACA,cAAI,KAAKiY,UAAT,EAAqB;AACjBjY,sBAAU,CAACkY,YAAX,CAAwB,KAAKD,UAA7B;AACA,iBAAKA,UAAL,GAAkB,IAAlB;AACH;AACJ;AACD;;;;;;;kCAIU;AACN,eAAK7O,iBAAL,CAAuBgB,OAAvB;AACH;AACD;;;;;;;iCAIS;AACL,eAAKhB,iBAAL,CAAuBrJ,MAAvB;AACH;AACD;;;;;;;;;gCAMQ;AACJ,eAAKqJ,iBAAL,CAAuBuB,KAAvB;AACH;AACD;;;;;;;;;kDAM0B;AACtB,eAAKvB,iBAAL,CAAuBiF,mBAAvB;AACH;AACD;;;;;;;;;;iDAOyBqC,W,EAAa;AAClC,eAAKtH,iBAAL,CAAuB+O,wBAAvB,CAAgDzH,WAAhD;AACH;AACD;;;;;;;;;;;;;6CAUqB8G,S,EAAWC,U,EAAYlT,O,EAASC,O,EAAS;AAC1D;AACA,cAAMoL,QAAQ,GAAG,IAAIxL,sBAAJ,CAA2BoT,SAA3B,EAAsCC,UAAtC,EAAkDlT,OAAlD,EAA2DC,OAA3D,CAAjB;;AACC;AAAkB,cAAnB,CAA0B8I,mBAA1B,CAA8CrH,IAA9C,CAAmD2J,QAAnD;;AACC;AAAkB,cAAnB,CAA0BxG,iBAA1B,CAA4CgP,aAA5C;AAA2D;AAAkB,cAAnB,CAA0B9K,mBAApF;;AACA;AAAQ;AAAkB;AAA1B;AACH;AACD;;;;;;;;;;sCAOcvC,G,EAAK;AACf;AACA;AACA;AACA;AAAK;AAAkB,cAAnB,CAA0BnL,WAA9B,EAA2C;AACtC;AAAkB,gBAAnB,CAA0BA,WAA1B,CAAsCsY,YAAtC,CAAmDnN,GAAnD;AACH,WAFD,MAGK;AACA;AAAkB,gBAAnB,CAA0BkN,UAA1B,GAAuClN,GAAvC;AACH;;AACD;AAAQ;AAAkB;AAA1B;AACH;AACD;;;;;;;;;;oCAOYmG,M,EAAQ;AACf;AAAkB,cAAnB,CAA0B9H,iBAA1B,CAA4CiP,kBAA5C,CAA+DnH,MAA/D;;AACA;AAAQ;AAAkB;AAA1B;AACH;AACD;;;;;;;;;;oCAOYA,M,EAAQ;AACf;AAAkB,cAAnB,CAA0B9H,iBAA1B,CAA4CkP,kBAA5C,CAA+DpH,MAA/D;;AACA;AAAQ;AAAkB;AAA1B;AACH;AACD;;;;;;;;;;;;2CASmBF,Q,EAAU;AACxB;AAAkB,cAAnB,CAA0B5H,iBAA1B,CAA4CmP,kBAA5C,CAA+DvH,QAA/D;;AACA;AAAQ;AAAkB;AAA1B;AACH;AACD;;;;;;;;;;sCAOcL,S,EAAW;AACpB;AAAkB,cAAnB,CAA0BrD,mBAA1B,GAAgDqD,SAAS,CAAC6H,KAAV,EAAhD;;AACC;AAAkB,cAAnB,CAA0BpP,iBAA1B,CAA4CgP,aAA5C;AAA2D;AAAkB,cAAnB,CAA0B9K,mBAApF;;AACA;AAAQ;AAAkB;AAA1B;AACH;AACD;;;;;;;;;;kCAOUjJ,M,EAAQ;AACb;AAAkB,cAAnB,CAA0B+E,iBAA1B,CAA4CyE,SAA5C,CAAsDxJ,MAAtD;;AACA;AAAQ;AAAkB;AAA1B;AACH;;;4BArKY;AACT,iBAAO,KAAKzE,WAAL,CAAiBsL,YAAjB,OAAoC,KAA3C;AACH;AACD;;;;;;;4BAIuB;AACnB,iBAAO,KAAK9B,iBAAL,CAAuBwE,eAA9B;AACH;AACD;;;;;;;4BAIgB;AACZ,iBAAO,KAAKN,mBAAZ;AACH;;;;;;AAuJL,QAAI,KAAJ,EAAW,CAuBV;AAED;;;;;;AAKA;;;;;;;;AAOA;;;;;;AAIA,QAAMmL,YAAY,GAAG,4BAArB;AACA;;;;;;;QAMMC,sB;AACF,wCAAc;AAAA;;AACV,aAAKC,YAAL,GAAoB,QAApB;AACA,aAAKC,UAAL,GAAkB,EAAlB;AACA,aAAKC,aAAL,GAAqB,EAArB;AACA,aAAKC,WAAL,GAAmB,EAAnB;AACA,aAAKC,YAAL,GAAoB,EAApB;AACA,aAAKC,WAAL,GAAmB,EAAnB;AACA,aAAKC,eAAL,GAAuB,EAAvB;AACA,aAAKC,MAAL,GAAc,EAAd;AACA,aAAKC,OAAL,GAAe,EAAf;AACH;AACD;;;;;;;;+BAIOnZ,U,EAAY;AACf;AACA,cAAMyC,MAAM,GAAGzC,UAAU,CAAC0S,SAAX,EAAf;AACA,eAAK9S,WAAL,GAAmBI,UAAnB;;AACA,cAAI,KAAKkZ,MAAL,IAAe,CAACzW,MAAM,CAACzD,KAA3B,EAAkC;AAC9BgB,sBAAU,CAACoZ,UAAX,CAAsB;AAAEpa,mBAAK,EAAE,KAAKka;AAAd,aAAtB;AACH;;AACD,cAAI,KAAKC,OAAL,IAAgB,CAAC1W,MAAM,CAAC3D,MAA5B,EAAoC;AAChCkB,sBAAU,CAACoZ,UAAX,CAAsB;AAAEta,oBAAM,EAAE,KAAKqa;AAAf,aAAtB;AACH;;AACDnZ,oBAAU,CAAC+N,WAAX,CAAuBjQ,SAAvB,CAAiCC,GAAjC,CAAqC0a,YAArC;AACA,eAAKxK,WAAL,GAAmB,KAAnB;AACH;AACD;;;;;;;;;;8BAOgB;AAAA,cAAZ9I,KAAY,uEAAJ,EAAI;;AACX;AAAkB,cAAnB,CAA0B0T,aAA1B,GAA0C,EAA1C;;AACC;AAAkB,cAAnB,CAA0BD,UAA1B,GAAuCzT,KAAvC;;AACC;AAAkB,cAAnB,CAA0B6T,WAA1B,GAAwC,YAAxC;AACA;AAAQ;AAAkB;AAA1B;AACH;AACD;;;;;;;;;;+BAOiB;AAAA,cAAZ7T,KAAY,uEAAJ,EAAI;;AACZ;AAAkB,cAAnB,CAA0B4T,YAA1B,GAAyC,EAAzC;;AACC;AAAkB,cAAnB,CAA0BD,WAA1B,GAAwC3T,KAAxC;;AACC;AAAkB,cAAnB,CAA0B8T,eAA1B,GAA4C,YAA5C;AACA;AAAQ;AAAkB;AAA1B;AACH;AACD;;;;;;;;;;iCAOmB;AAAA,cAAZ9T,KAAY,uEAAJ,EAAI;;AACd;AAAkB,cAAnB,CAA0ByT,UAA1B,GAAuC,EAAvC;;AACC;AAAkB,cAAnB,CAA0BC,aAA1B,GAA0C1T,KAA1C;;AACC;AAAkB,cAAnB,CAA0B6T,WAA1B,GAAwC,UAAxC;AACA;AAAQ;AAAkB;AAA1B;AACH;AACD;;;;;;;;;;gCAOkB;AAAA,cAAZ7T,KAAY,uEAAJ,EAAI;;AACb;AAAkB,cAAnB,CAA0B2T,WAA1B,GAAwC,EAAxC;;AACC;AAAkB,cAAnB,CAA0BC,YAA1B,GAAyC5T,KAAzC;;AACC;AAAkB,cAAnB,CAA0B8T,eAA1B,GAA4C,UAA5C;AACA;AAAQ;AAAkB;AAA1B;AACH;AACD;;;;;;;;;;;;gCASkB;AAAA,cAAZ9T,KAAY,uEAAJ,EAAI;;AACd;AAAK;AAAkB,cAAnB,CAA0BvF,WAA9B,EAA2C;AACtC;AAAkB,gBAAnB,CAA0BA,WAA1B,CAAsCwZ,UAAtC,CAAiD;AAAEpa,mBAAK,EAAEmG;AAAT,aAAjD;AACH,WAFD,MAGK;AACA;AAAkB,gBAAnB,CAA0B+T,MAA1B,GAAmC/T,KAAnC;AACH;;AACD;AAAQ;AAAkB;AAA1B;AACH;AACD;;;;;;;;;;;;iCASmB;AAAA,cAAZA,KAAY,uEAAJ,EAAI;;AACf;AAAK;AAAkB,cAAnB,CAA0BvF,WAA9B,EAA2C;AACtC;AAAkB,gBAAnB,CAA0BA,WAA1B,CAAsCwZ,UAAtC,CAAiD;AAAEta,oBAAM,EAAEqG;AAAV,aAAjD;AACH,WAFD,MAGK;AACA;AAAkB,gBAAnB,CAA0BgU,OAA1B,GAAoChU,KAApC;AACH;;AACD;AAAQ;AAAkB;AAA1B;AACH;AACD;;;;;;;;;;;;6CASgC;AAAA,cAAb+L,MAAa,uEAAJ,EAAI;;AAC3B;AAAkB,cAAnB,CAA0B7T,IAA1B,CAA+B6T,MAA/B;;AACC;AAAkB,cAAnB,CAA0B+H,eAA1B,GAA4C,QAA5C;AACA;AAAQ;AAAkB;AAA1B;AACH;AACD;;;;;;;;;;;;2CAS8B;AAAA,cAAb/H,MAAa,uEAAJ,EAAI;;AACzB;AAAkB,cAAnB,CAA0B9T,GAA1B,CAA8B8T,MAA9B;;AACC;AAAkB,cAAnB,CAA0B8H,WAA1B,GAAwC,QAAxC;AACA;AAAQ;AAAkB;AAA1B;AACH;AACD;;;;;;;;gCAKQ;AACJ;AACA;AACA;AACA,cAAI,CAAC,KAAKpZ,WAAN,IAAqB,CAAC,KAAKA,WAAL,CAAiBC,WAAjB,EAA1B,EAA0D;AACtD;AACH;AACD;;;AACA,cAAM0U,MAAM,GAAG,KAAK3U,WAAL,CAAiBuC,cAAjB,CAAgCtE,KAA/C;AACA;;AACA,cAAMwb,YAAY,GAAG,KAAKzZ,WAAL,CAAiBmO,WAAjB,CAA6BlQ,KAAlD;AACA;;AACA,cAAM4E,MAAM,GAAG,KAAK7C,WAAL,CAAiB8S,SAAjB,EAAf;;AAZI,cAaI1T,KAbJ,GAa2CyD,MAb3C,CAaIzD,KAbJ;AAAA,cAaWF,MAbX,GAa2C2D,MAb3C,CAaW3D,MAbX;AAAA,cAamBuM,QAbnB,GAa2C5I,MAb3C,CAamB4I,QAbnB;AAAA,cAa6BC,SAb7B,GAa2C7I,MAb3C,CAa6B6I,SAb7B;AAcJ;;AACA,cAAMgO,yBAAyB,GAAG,CAACta,KAAK,KAAK,MAAV,IAAoBA,KAAK,KAAK,OAA/B,MAC7B,CAACqM,QAAD,IAAaA,QAAQ,KAAK,MAA1B,IAAoCA,QAAQ,KAAK,OADpB,CAAlC;AAEA;;AACA,cAAMkO,uBAAuB,GAAG,CAACza,MAAM,KAAK,MAAX,IAAqBA,MAAM,KAAK,OAAjC,MAC3B,CAACwM,SAAD,IAAcA,SAAS,KAAK,MAA5B,IAAsCA,SAAS,KAAK,OADzB,CAAhC;AAEAiJ,gBAAM,CAAC3E,QAAP,GAAkB,KAAK+I,YAAvB;AACApE,gBAAM,CAACiF,UAAP,GAAoBF,yBAAyB,GAAG,GAAH,GAAS,KAAKR,WAA3D;AACAvE,gBAAM,CAACkF,SAAP,GAAmBF,uBAAuB,GAAG,GAAH,GAAS,KAAKX,UAAxD;AACArE,gBAAM,CAACmF,YAAP,GAAsB,KAAKb,aAA3B;AACAtE,gBAAM,CAACoF,WAAP,GAAqB,KAAKZ,YAA1B;;AACA,cAAIO,yBAAJ,EAA+B;AAC3BD,wBAAY,CAAC7I,cAAb,GAA8B,YAA9B;AACH,WAFD,MAGK,IAAI,KAAKyI,eAAL,KAAyB,QAA7B,EAAuC;AACxCI,wBAAY,CAAC7I,cAAb,GAA8B,QAA9B;AACH,WAFI,MAGA,IAAI,KAAK5Q,WAAL,CAAiB8S,SAAjB,GAA6B1H,SAA7B,KAA2C,KAA/C,EAAsD;AACvD;AACA;AACA;AACA;AACA,gBAAI,KAAKiO,eAAL,KAAyB,YAA7B,EAA2C;AACvCI,0BAAY,CAAC7I,cAAb,GAA8B,UAA9B;AACH,aAFD,MAGK,IAAI,KAAKyI,eAAL,KAAyB,UAA7B,EAAyC;AAC1CI,0BAAY,CAAC7I,cAAb,GAA8B,YAA9B;AACH;AACJ,WAXI,MAYA;AACD6I,wBAAY,CAAC7I,cAAb,GAA8B,KAAKyI,eAAnC;AACH;;AACDI,sBAAY,CAAC9I,UAAb,GAA0BgJ,uBAAuB,GAAG,YAAH,GAAkB,KAAKP,WAAxE;AACH;AACD;;;;;;;;kCAKU;AACN,cAAI,KAAK/K,WAAL,IAAoB,CAAC,KAAKrO,WAA9B,EAA2C;AACvC;AACH;AACD;;;AACA,cAAM2U,MAAM,GAAG,KAAK3U,WAAL,CAAiBuC,cAAjB,CAAgCtE,KAA/C;AACA;;AACA,cAAM+b,MAAM,GAAG,KAAKha,WAAL,CAAiBmO,WAAhC;AACA;;AACA,cAAMsL,YAAY,GAAGO,MAAM,CAAC/b,KAA5B;AACA+b,gBAAM,CAAC9b,SAAP,CAAiBS,MAAjB,CAAwBka,YAAxB;AACAY,sBAAY,CAAC7I,cAAb,GAA8B6I,YAAY,CAAC9I,UAAb,GAA0BgE,MAAM,CAACkF,SAAP,GACpDlF,MAAM,CAACmF,YAAP,GAAsBnF,MAAM,CAACiF,UAAP,GAAoBjF,MAAM,CAACoF,WAAP,GAAqBpF,MAAM,CAAC3E,QAAP,GAAkB,EADrF;AAEA,eAAKhQ,WAAL;AAAoB;AAAkB,cAAtC;AACA,eAAKqO,WAAL,GAAmB,IAAnB;AACH;;;;;;AAEL,QAAI,KAAJ,EAAW,CAyDV;AAED;;;;;;AAKA;;;;;QAGM4L,sB;AACF;;;;;;AAMA,sCAAY5c,cAAZ,EAA4BM,SAA5B,EAAuC0J,SAAvC,EAAkD4F,iBAAlD,EAAqE;AAAA;;AACjE,aAAK5P,cAAL,GAAsBA,cAAtB;AACA,aAAKM,SAAL,GAAiBA,SAAjB;AACA,aAAK0J,SAAL,GAAiBA,SAAjB;AACA,aAAK4F,iBAAL,GAAyBA,iBAAzB;AACH;AACD;;;;;;;;iCAIS;AACL,iBAAO,IAAI6L,sBAAJ,EAAP;AACH;AACD;;;;;;;;;;;;oCASYoB,U,EAAYtC,S,EAAWC,U,EAAY;AAC3C,iBAAO,IAAIF,yBAAJ,CAA8BC,SAA9B,EAAyCC,UAAzC,EAAqDqC,UAArD,EAAiE,KAAK7c,cAAtE,EAAsF,KAAKM,SAA3F,EAAsG,KAAK0J,SAA3G,EAAsH,KAAK4F,iBAA3H,CAAP;AACH;AACD;;;;;;;;4CAKoBxI,M,EAAQ;AACxB,iBAAO,IAAIsI,iCAAJ,CAAsCtI,MAAtC,EAA8C,KAAKpH,cAAnD,EAAmE,KAAKM,SAAxE,EAAmF,KAAK0J,SAAxF,EAAmG,KAAK4F,iBAAxG,CAAP;AACH;;;;;;AAELgN,0BAAsB,CAACjX,IAAvB,GAA8B,SAASmX,8BAAT,CAAwCjX,CAAxC,EAA2C;AAAE,aAAO,KAAKA,CAAC,IAAI+W,sBAAV,EAAkC,uDAAgB,oEAAhB,CAAlC,EAAyE,uDAAgB,wDAAhB,CAAzE,EAAoG,uDAAgB,8DAAhB,CAApG,EAAsI,uDAAgB7S,gBAAhB,CAAtI,CAAP;AAAkL,KAA7P;AACA;;;AACA6S,0BAAsB,CAAC9W,cAAvB,GAAwC;AAAA,aAAM,CAC1C;AAAEC,YAAI,EAAE;AAAR,OAD0C,EAE1C;AAAEA,YAAI,EAAEC,SAAR;AAAmBC,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAAC,wDAAD;AAAtB,SAAD;AAA/B,OAF0C,EAG1C;AAAEH,YAAI,EAAE;AAAR,OAH0C,EAI1C;AAAEA,YAAI,EAAEgE;AAAR,OAJ0C,CAAN;AAAA,KAAxC;AAMA;;;AAAmB6S,0BAAsB,CAACzW,KAAvB,GAA+B,yEAAmB;AAAEC,aAAO,EAAE,SAAS0W,8BAAT,GAA0C;AAAE,eAAO,IAAIF,sBAAJ,CAA2B,+DAAS,oEAAT,CAA3B,EAAoD,+DAAS,wDAAT,CAApD,EAAwE,+DAAS,8DAAT,CAAxE,EAA4F,+DAAS7S,gBAAT,CAA5F,CAAP;AAAiI,OAAxL;AAA0L1D,WAAK,EAAEuW,sBAAjM;AAAyNtW,gBAAU,EAAE;AAArO,KAAnB,CAA/B;AACnB;;AAAc,KAAC,YAAY;AAAE,sEAAyBsW,sBAAzB,EAAiD,CAAC;AACvE7W,YAAI,EAAE,wDADiE;AAEvEG,YAAI,EAAE,CAAC;AAAEI,oBAAU,EAAE;AAAd,SAAD;AAFiE,OAAD,CAAjD,EAGrB,YAAY;AAAE,eAAO,CAAC;AAAEP,cAAI,EAAE;AAAR,SAAD,EAAiC;AAAEA,cAAI,EAAEC,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAC9EF,gBAAI,EAAE,oDADwE;AAE9EG,gBAAI,EAAE,CAAC,wDAAD;AAFwE,WAAD;AAA/B,SAAjC,EAGX;AAAEH,cAAI,EAAE;AAAR,SAHW,EAGgB;AAAEA,cAAI,EAAEgE;AAAR,SAHhB,CAAP;AAGqD,OAN9C,EAMgD,IANhD;AAMwD,KANvE;;AAOd,QAAI,KAAJ,EAAW,CAqBV;AAED;;;;;;AAKA;;;;;;AAIA,QAAIgT,YAAY,GAAG,CAAnB,C,CACA;AACA;;AACA;;;;;;;;;QAQMC,O;AACF;;;;;;;;;;;;AAYA,uBAAYC,gBAAZ,EAA8BrN,iBAA9B,EAAiDsN,yBAAjD,EAA4EC,gBAA5E,EAA8F9R,mBAA9F,EAAmH+R,SAAnH,EAA8H9a,OAA9H,EAAuIhC,SAAvI,EAAkJ+c,eAAlJ,EAAmK/R,SAAnK,EAA8K;AAAA;;AAC1K,aAAK2R,gBAAL,GAAwBA,gBAAxB;AACA,aAAKrN,iBAAL,GAAyBA,iBAAzB;AACA,aAAKsN,yBAAL,GAAiCA,yBAAjC;AACA,aAAKC,gBAAL,GAAwBA,gBAAxB;AACA,aAAK9R,mBAAL,GAA2BA,mBAA3B;AACA,aAAK+R,SAAL,GAAiBA,SAAjB;AACA,aAAK9a,OAAL,GAAeA,OAAf;AACA,aAAKhC,SAAL,GAAiBA,SAAjB;AACA,aAAK+c,eAAL,GAAuBA,eAAvB;AACA,aAAK/R,SAAL,GAAiBA,SAAjB;AACH;AACD;;;;;;;;;+BAKO9F,M,EAAQ;AACX;AACA,cAAM8X,IAAI,GAAG,KAAKC,kBAAL,EAAb;AACA;;;AACA,cAAMC,IAAI,GAAG,KAAKC,kBAAL,CAAwBH,IAAxB,CAAb;AACA;;;AACA,cAAMI,YAAY,GAAG,KAAKC,mBAAL,CAAyBH,IAAzB,CAArB;AACA;;;AACA,cAAMI,aAAa,GAAG,IAAIrX,aAAJ,CAAkBf,MAAlB,CAAtB;AACAoY,uBAAa,CAAC7P,SAAd,GAA0B6P,aAAa,CAAC7P,SAAd,IAA2B,KAAKsP,eAAL,CAAqBnV,KAA1E;AACA,iBAAO,IAAI+C,UAAJ,CAAeyS,YAAf,EAA6BJ,IAA7B,EAAmCE,IAAnC,EAAyCI,aAAzC,EAAwD,KAAKtb,OAA7D,EAAsE,KAAK+I,mBAA3E,EAAgG,KAAK/K,SAArG,EAAgH,KAAKgL,SAArH,CAAP;AACH;AACD;;;;;;;;mCAKW;AACP,iBAAO,KAAK6R,gBAAZ;AACH;AACD;;;;;;;;;2CAMmBG,I,EAAM;AACrB;AACA,cAAME,IAAI,GAAG,KAAKld,SAAL,CAAeoK,aAAf,CAA6B,KAA7B,CAAb;;AACA8S,cAAI,CAACK,EAAL,yBAAyBd,YAAY,EAArC;AACAS,cAAI,CAAC3c,SAAL,CAAeC,GAAf,CAAmB,kBAAnB;AACAwc,cAAI,CAAC1S,WAAL,CAAiB4S,IAAjB;AACA,iBAAOA,IAAP;AACH;AACD;;;;;;;;;6CAMqB;AACjB;AACA,cAAMF,IAAI,GAAG,KAAKhd,SAAL,CAAeoK,aAAf,CAA6B,KAA7B,CAAb;;AACA,eAAKkF,iBAAL,CAAuBqI,mBAAvB,GAA6CrN,WAA7C,CAAyD0S,IAAzD;;AACA,iBAAOA,IAAP;AACH;AACD;;;;;;;;;4CAMoBE,I,EAAM;AACtB;AACA;AACA,cAAI,CAAC,KAAKM,OAAV,EAAmB;AACf,iBAAKA,OAAL,GAAe,KAAKV,SAAL,CAAeW,GAAf,CAAmB,4DAAnB,CAAf;AACH;;AACD,iBAAO,IAAI,mEAAJ,CAAoBP,IAApB,EAA0B,KAAKN,yBAA/B,EAA0D,KAAKY,OAA/D,EAAwE,KAAKV,SAA7E,EAAwF,KAAK9c,SAA7F,CAAP;AACH;;;;;;AAEL0c,WAAO,CAACrX,IAAR,GAAe,SAASqY,eAAT,CAAyBnY,CAAzB,EAA4B;AAAE,aAAO,KAAKA,CAAC,IAAImX,OAAV,EAAmB,uDAAgB3X,qBAAhB,CAAnB,EAA2D,uDAAgB0E,gBAAhB,CAA3D,EAA8F,uDAAgB,sEAAhB,CAA9F,EAAgJ,uDAAgB6S,sBAAhB,CAAhJ,EAAyL,uDAAgBxU,yBAAhB,CAAzL,EAAqO,uDAAgB,sDAAhB,CAArO,EAAuQ,uDAAgB,oDAAhB,CAAvQ,EAAuS,uDAAgB,wDAAhB,CAAvS,EAAkU,uDAAgB,gEAAhB,CAAlU,EAA0W,uDAAgB,wDAAhB,EAAiC,CAAjC,CAA1W,CAAP;AAAwZ,KAArc;;AACA4U,WAAO,CAAC7W,KAAR,GAAgB,iEAA0B;AAAEE,WAAK,EAAE2W,OAAT;AAAkB5W,aAAO,EAAE4W,OAAO,CAACrX;AAAnC,KAA1B,CAAhB;AACA;;AACAqX,WAAO,CAAClX,cAAR,GAAyB;AAAA,aAAM,CAC3B;AAAEC,YAAI,EAAEV;AAAR,OAD2B,EAE3B;AAAEU,YAAI,EAAEgE;AAAR,OAF2B,EAG3B;AAAEhE,YAAI,EAAE;AAAR,OAH2B,EAI3B;AAAEA,YAAI,EAAE6W;AAAR,OAJ2B,EAK3B;AAAE7W,YAAI,EAAEqC;AAAR,OAL2B,EAM3B;AAAErC,YAAI,EAAE;AAAR,OAN2B,EAO3B;AAAEA,YAAI,EAAE;AAAR,OAP2B,EAQ3B;AAAEA,YAAI,EAAEC,SAAR;AAAmBC,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAAC,wDAAD;AAAtB,SAAD;AAA/B,OAR2B,EAS3B;AAAEH,YAAI,EAAE;AAAR,OAT2B,EAU3B;AAAEA,YAAI,EAAE,wDAAR;AAAkBE,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD;AAA9B,OAV2B,CAAN;AAAA,KAAzB;AAYA;;;AAAc,KAAC,YAAY;AAAE,sEAAyBiX,OAAzB,EAAkC,CAAC;AACxDjX,YAAI,EAAE;AADkD,OAAD,CAAlC,EAErB,YAAY;AAAE,eAAO,CAAC;AAAEA,cAAI,EAAEV;AAAR,SAAD,EAAkC;AAAEU,cAAI,EAAEgE;AAAR,SAAlC,EAA8D;AAAEhE,cAAI,EAAE;AAAR,SAA9D,EAAyG;AAAEA,cAAI,EAAE6W;AAAR,SAAzG,EAA2I;AAAE7W,cAAI,EAAEqC;AAAR,SAA3I,EAAgL;AAAErC,cAAI,EAAE;AAAR,SAAhL,EAA2M;AAAEA,cAAI,EAAE;AAAR,SAA3M,EAAoO;AAAEA,cAAI,EAAEC,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AACjRF,gBAAI,EAAE,oDAD2Q;AAEjRG,gBAAI,EAAE,CAAC,wDAAD;AAF2Q,WAAD;AAA/B,SAApO,EAGX;AAAEH,cAAI,EAAE;AAAR,SAHW,EAGsB;AAAEA,cAAI,EAAE,wDAAR;AAAyBE,oBAAU,EAAE,CAAC;AACzEF,gBAAI,EAAE;AADmE,WAAD;AAArC,SAHtB,CAAP;AAKF,OAPS,EAOP,IAPO;AAOC,KAPhB;;AAQd,QAAI,KAAJ,EAAW,CAwDV;AAED;;;;;;AAKA;;;;;;AAIA,QAAMkY,mBAAmB,GAAG,CACxB;AACIzW,aAAO,EAAE,OADb;AAEIC,aAAO,EAAE,QAFb;AAGIC,cAAQ,EAAE,OAHd;AAIIC,cAAQ,EAAE;AAJd,KADwB,EAOxB;AACIH,aAAO,EAAE,OADb;AAEIC,aAAO,EAAE,KAFb;AAGIC,cAAQ,EAAE,OAHd;AAIIC,cAAQ,EAAE;AAJd,KAPwB,EAaxB;AACIH,aAAO,EAAE,KADb;AAEIC,aAAO,EAAE,KAFb;AAGIC,cAAQ,EAAE,KAHd;AAIIC,cAAQ,EAAE;AAJd,KAbwB,EAmBxB;AACIH,aAAO,EAAE,KADb;AAEIC,aAAO,EAAE,QAFb;AAGIC,cAAQ,EAAE,KAHd;AAIIC,cAAQ,EAAE;AAJd,KAnBwB,CAA5B;AA0BA;;;;;AAIA,QAAMuW,qCAAqC,GAAG,IAAI,4DAAJ,CAAmB,uCAAnB,CAA9C;AACA;;;;;;AAKA,aAASC,6CAAT,CAAuD9W,OAAvD,EAAgE;AAC5D;AAAQ;;;;AAIR,kBAAC7B,MAAD;AAAA,iBAAY6B,OAAO,CAAC4V,gBAAR,CAAyBvX,UAAzB,CAAoCF,MAApC,CAAZ;AAAA;AAJA;AAKH;AACD;;;;;;QAIM4Y,gB;AACF;;;AAGA,8BAAYvB,UAAZ,EAAwB;AAAA;;AACpB,WAAKA,UAAL,GAAkBA,UAAlB;AACH,K;;AAELuB,oBAAgB,CAACzY,IAAjB,GAAwB,SAAS0Y,wBAAT,CAAkCxY,CAAlC,EAAqC;AAAE,aAAO,KAAKA,CAAC,IAAIuY,gBAAV,EAA4B,gEAAyB,wDAAzB,CAA5B,CAAP;AAAkF,KAAjJ;;AACAA,oBAAgB,CAACE,IAAjB,GAAwB,gEAAyB;AAAEvY,UAAI,EAAEqY,gBAAR;AAA0BG,eAAS,EAAE,CAAC,CAAC,EAAD,EAAK,oBAAL,EAA2B,EAA3B,CAAD,EAAiC,CAAC,EAAD,EAAK,gBAAL,EAAuB,EAAvB,CAAjC,EAA6D,CAAC,EAAD,EAAK,kBAAL,EAAyB,EAAzB,CAA7D,CAArC;AAAiIC,cAAQ,EAAE,CAAC,kBAAD;AAA3I,KAAzB,CAAxB;AACA;;AACAJ,oBAAgB,CAACtY,cAAjB,GAAkC;AAAA,aAAM,CACpC;AAAEC,YAAI,EAAE;AAAR,OADoC,CAAN;AAAA,KAAlC;AAGA;;;AAAc,KAAC,YAAY;AAAE,sEAAyBqY,gBAAzB,EAA2C,CAAC;AACjErY,YAAI,EAAE,uDAD2D;AAEjEG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,4DADX;AAECsK,kBAAQ,EAAE;AAFX,SAAD;AAF2D,OAAD,CAA3C,EAMrB,YAAY;AAAE,eAAO,CAAC;AAAEzY,cAAI,EAAE;AAAR,SAAD,CAAP;AAAuC,OANhC,EAMkC,IANlC;AAM0C,KANzD;;AAOd,QAAI,KAAJ,EAAW,CAMV;AACD;;;;;;QAIM0Y,mB;AACF;;AACA;;;;;;;AAOA,mCAAYC,QAAZ,EAAsBC,WAAtB,EAAmCC,gBAAnC,EAAqDC,qBAArD,EAA4EC,IAA5E,EAAkF;AAAA;;AAC9E,aAAKJ,QAAL,GAAgBA,QAAhB;AACA,aAAKI,IAAL,GAAYA,IAAZ;AACA,aAAKC,YAAL,GAAoB,KAApB;AACA,aAAKC,aAAL,GAAqB,KAArB;AACA,aAAKhP,cAAL,GAAsB,KAAtB;AACA,aAAKiP,mBAAL,GAA2B,KAA3B;AACA,aAAKC,KAAL,GAAa,KAAb;AACA,aAAKC,qBAAL,GAA6B,kDAAavT,KAA1C;AACA;;;;AAGA,aAAKwT,cAAL,GAAsB,CAAtB;AACA;;;;AAGA,aAAKC,IAAL,GAAY,KAAZ;AACA;;;;AAGA,aAAKC,aAAL,GAAqB,IAAI,0DAAJ,EAArB;AACA;;;;AAGA,aAAKC,cAAL,GAAsB,IAAI,0DAAJ,EAAtB;AACA;;;;AAGA,aAAKrT,MAAL,GAAc,IAAI,0DAAJ,EAAd;AACA;;;;AAGA,aAAKpJ,MAAL,GAAc,IAAI,0DAAJ,EAAd;AACA;;;;AAGA,aAAK0c,cAAL,GAAsB,IAAI,0DAAJ,EAAtB;AACA,aAAKC,eAAL,GAAuB,IAAI,kEAAJ,CAAmBd,WAAnB,EAAgCC,gBAAhC,CAAvB;AACA,aAAKc,sBAAL,GAA8Bb,qBAA9B;AACA,aAAKrY,cAAL,GAAsB,KAAKkZ,sBAAL,EAAtB;AACH;AACD;;;;;;;;;AAgGA;;;sCAGc;AACV,cAAI,KAAK/c,WAAT,EAAsB;AAClB,iBAAKA,WAAL,CAAiBwK,OAAjB;AACH;;AACD,eAAKgS,qBAAL,CAA2B1b,WAA3B;AACH;AACD;;;;;;;oCAIYkc,O,EAAS;AACjB,cAAI,KAAKC,SAAT,EAAoB;AAChB,iBAAKC,uBAAL,CAA6B,KAAKD,SAAlC;;AACA,iBAAKjd,WAAL,CAAiBwZ,UAAjB,CAA4B;AACxBpa,mBAAK,EAAE,KAAKA,KADY;AAExBmM,sBAAQ,EAAE,KAAKA,QAFS;AAGxBrM,oBAAM,EAAE,KAAKA,MAHW;AAIxBsM,uBAAS,EAAE,KAAKA;AAJQ,aAA5B;;AAMA,gBAAIwR,OAAO,CAAC,QAAD,CAAP,IAAqB,KAAKN,IAA9B,EAAoC;AAChC,mBAAKO,SAAL,CAAelS,KAAf;AACH;AACJ;;AACD,cAAIiS,OAAO,CAAC,MAAD,CAAX,EAAqB;AACjB,iBAAKN,IAAL,GAAY,KAAKS,cAAL,EAAZ,GAAoC,KAAKC,cAAL,EAApC;AACH;AACJ;AACD;;;;;;;;yCAKiB;AAAA;;AACb,cAAI,CAAC,KAAKrM,SAAN,IAAmB,CAAC,KAAKA,SAAL,CAAehL,MAAvC,EAA+C;AAC3C,iBAAKgL,SAAL,GAAiBuK,mBAAjB;AACH;;AACD,eAAKtb,WAAL,GAAmB,KAAK+b,QAAL,CAAcsB,MAAd,CAAqB,KAAKC,YAAL,EAArB,CAAnB;;AACA,eAAKtd,WAAL,CAAiBud,aAAjB,GAAiC9c,SAAjC;AAA4C;;;;AAI5C,oBAACmF,KAAD,EAAW;AACP,mBAAI,CAACiX,cAAL,CAAoB3W,IAApB,CAAyBN,KAAzB;;AACA,gBAAIA,KAAK,CAAC4X,OAAN,KAAkB,4DAAlB,IAA4B,CAAC,6EAAe5X,KAAf,CAAjC,EAAwD;AACpDA,mBAAK,CAAC6X,cAAN;;AACA,qBAAI,CAACL,cAAL;AACH;AACJ,WAVD;AAWH;AACD;;;;;;;;uCAKe;AACX;AACA,cAAM3T,gBAAgB,GAAG,KAAKwT,SAAL,GACrB,KAAKxT,gBAAL,IAAyB,KAAKiU,uBAAL,EAD7B;AAEA;;;AACA,cAAMzC,aAAa,GAAG,IAAIrX,aAAJ,CAAkB;AACpCwH,qBAAS,EAAE,KAAK+Q,IADoB;AAEpC1S,4BAAgB,EAAhBA,gBAFoC;AAGpC5F,0BAAc,EAAE,KAAKA,cAHe;AAIpCE,uBAAW,EAAE,KAAKA;AAJkB,WAAlB,CAAtB;;AAMA,cAAI,KAAK3E,KAAL,IAAc,KAAKA,KAAL,KAAe,CAAjC,EAAoC;AAChC6b,yBAAa,CAAC7b,KAAd,GAAsB,KAAKA,KAA3B;AACH;;AACD,cAAI,KAAKF,MAAL,IAAe,KAAKA,MAAL,KAAgB,CAAnC,EAAsC;AAClC+b,yBAAa,CAAC/b,MAAd,GAAuB,KAAKA,MAA5B;AACH;;AACD,cAAI,KAAKqM,QAAL,IAAiB,KAAKA,QAAL,KAAkB,CAAvC,EAA0C;AACtC0P,yBAAa,CAAC1P,QAAd,GAAyB,KAAKA,QAA9B;AACH;;AACD,cAAI,KAAKC,SAAL,IAAkB,KAAKA,SAAL,KAAmB,CAAzC,EAA4C;AACxCyP,yBAAa,CAACzP,SAAd,GAA0B,KAAKA,SAA/B;AACH;;AACD,cAAI,KAAKxH,aAAT,EAAwB;AACpBiX,yBAAa,CAACjX,aAAd,GAA8B,KAAKA,aAAnC;AACH;;AACD,cAAI,KAAKF,UAAT,EAAqB;AACjBmX,yBAAa,CAACnX,UAAd,GAA2B,KAAKA,UAAhC;AACH;;AACD,iBAAOmX,aAAP;AACH;AACD;;;;;;;;;gDAMwBxR,gB,EAAkB;AAAA;;AACtC;AACA,cAAMsH,SAAS,GAAG,KAAKA,SAAL,CAAegF,GAAf;AAAoB;;;;AAItC,oBAAA4H,eAAe;AAAA,mBAAK;AAChB9Y,qBAAO,EAAE8Y,eAAe,CAAC9Y,OADT;AAEhBC,qBAAO,EAAE6Y,eAAe,CAAC7Y,OAFT;AAGhBC,sBAAQ,EAAE4Y,eAAe,CAAC5Y,QAHV;AAIhBC,sBAAQ,EAAE2Y,eAAe,CAAC3Y,QAJV;AAKhBL,qBAAO,EAAEgZ,eAAe,CAAChZ,OAAhB,IAA2B,OAAI,CAACA,OALzB;AAMhBC,qBAAO,EAAE+Y,eAAe,CAAC/Y,OAAhB,IAA2B,OAAI,CAACA,OANzB;AAOhBd,wBAAU,EAAE6Z,eAAe,CAAC7Z,UAAhB,IAA8BT;AAP1B,aAAL;AAAA,WAJG,CAAlB;AAaA,iBAAOoG,gBAAgB,CAClBwE,SADE,CACQ,KAAKxJ,MAAL,CAAYyV,UADpB,EAEF1B,aAFE,CAEYzH,SAFZ,EAGFkH,sBAHE,CAGqB,KAAKhH,kBAH1B,EAIFiH,QAJE,CAIO,KAAK7R,IAJZ,EAKFuX,iBALE,CAKgB,KAAK1M,aALrB,EAMFiH,kBANE,CAMiB,KAAKsE,cANtB,EAOF9D,kBAPE,CAOiB,KAAKkF,YAPtB,EAQFC,qBARE,CAQoB,KAAKC,uBARzB,CAAP;AASH;AACD;;;;;;;;kDAK0B;AAAA;;AACtB;AACA,cAAM/S,QAAQ,GAAG,KAAK+Q,QAAL,CAAc/L,QAAd,GAAyBgO,mBAAzB,CAA6C,KAAKvZ,MAAL,CAAYyV,UAAzD,CAAjB;;AACA,eAAKgD,uBAAL,CAA6BlS,QAA7B;;AACAA,kBAAQ,CAACgD,eAAT,CAAyBvN,SAAzB;AAAoC;;;;AAIpC,oBAAAwd,CAAC;AAAA,mBAAI,OAAI,CAACrB,cAAL,CAAoBsB,IAApB,CAAyBD,CAAzB,CAAJ;AAAA,WAJD;AAKA,iBAAOjT,QAAP;AACH;AACD;;;;;;;;yCAKiB;AAAA;;AACb,cAAI,CAAC,KAAKhL,WAAV,EAAuB;AACnB,iBAAKme,cAAL;AACH,WAFD,MAGK;AACD;AACA,iBAAKne,WAAL,CAAiB8S,SAAjB,GAA6B/O,WAA7B,GAA2C,KAAKA,WAAhD;AACH;;AACD,cAAI,CAAC,KAAK/D,WAAL,CAAiBC,WAAjB,EAAL,EAAqC;AACjC,iBAAKD,WAAL,CAAiBuJ,MAAjB,CAAwB,KAAKuT,eAA7B;;AACA,iBAAKvT,MAAL,CAAY2U,IAAZ;AACH;;AACD,cAAI,KAAKna,WAAT,EAAsB;AAClB,iBAAKyY,qBAAL,GAA6B,KAAKxc,WAAL,CAAiB2c,aAAjB,GAAiClc,SAAjC;AAA4C;;;;AAIzE,sBAAAmF,KAAK,EAAI;AACL,qBAAI,CAAC+W,aAAL,CAAmBuB,IAAnB,CAAwBtY,KAAxB;AACH,aAN4B,CAA7B;AAOH,WARD,MASK;AACD,iBAAK4W,qBAAL,CAA2B1b,WAA3B;AACH;AACJ;AACD;;;;;;;;yCAKiB;AACb,cAAI,KAAKd,WAAT,EAAsB;AAClB,iBAAKA,WAAL,CAAiBG,MAAjB;;AACA,iBAAKA,MAAL,CAAY+d,IAAZ;AACH;;AACD,eAAK1B,qBAAL,CAA2B1b,WAA3B;AACH;;;4BA5Qa;AAAE,iBAAO,KAAK+M,QAAZ;AAAuB;AACvC;;;;;0BAIYlJ,O,EAAS;AACjB,eAAKkJ,QAAL,GAAgBlJ,OAAhB;;AACA,cAAI,KAAKsY,SAAT,EAAoB;AAChB,iBAAKC,uBAAL,CAA6B,KAAKD,SAAlC;AACH;AACJ;AACD;;;;;;;4BAIc;AAAE,iBAAO,KAAKnP,QAAZ;AAAuB;AACvC;;;;;0BAIYlJ,O,EAAS;AACjB,eAAKkJ,QAAL,GAAgBlJ,OAAhB;;AACA,cAAI,KAAKqY,SAAT,EAAoB;AAChB,iBAAKC,uBAAL,CAA6B,KAAKD,SAAlC;AACH;AACJ;AACD;;;;;;;4BAIkB;AAAE,iBAAO,KAAKb,YAAZ;AAA2B;AAC/C;;;;;0BAIgB7W,K,EAAO;AAAE,eAAK6W,YAAL,GAAoB,oFAAsB7W,KAAtB,CAApB;AAAmD;AAC5E;;;;;;;4BAImB;AAAE,iBAAO,KAAK8W,aAAZ;AAA4B;AACjD;;;;;0BAIiB9W,K,EAAO;AAAE,eAAK8W,aAAL,GAAqB,oFAAsB9W,KAAtB,CAArB;AAAoD;AAC9E;;;;;;;4BAIyB;AAAE,iBAAO,KAAK+W,mBAAZ;AAAkC;AAC7D;;;;;0BAIuB/W,K,EAAO;AAC1B,eAAK+W,mBAAL,GAA2B,oFAAsB/W,KAAtB,CAA3B;AACH;AACD;;;;;;;4BAIoB;AAAE,iBAAO,KAAK8H,cAAZ;AAA6B;AACnD;;;;;0BAIkB9H,K,EAAO;AAAE,eAAK8H,cAAL,GAAsB,oFAAsB9H,KAAtB,CAAtB;AAAqD;AAChF;;;;;;;4BAIW;AAAE,iBAAO,KAAKgX,KAAZ;AAAoB;AACjC;;;;;0BAIShX,K,EAAO;AAAE,eAAKgX,KAAL,GAAa,oFAAsBhX,KAAtB,CAAb;AAA4C;AAC9D;;;;;;;4BAIiB;AACb,iBAAO,KAAKvF,WAAZ;AACH;AACD;;;;;;;4BAIU;AACN,iBAAO,KAAKmc,IAAL,GAAY,KAAKA,IAAL,CAAU5W,KAAtB,GAA8B,KAArC;AACH;;;;;;AAmLLuW,uBAAmB,CAAC9Y,IAApB,GAA2B,SAASob,2BAAT,CAAqClb,CAArC,EAAwC;AAAE,aAAO,KAAKA,CAAC,IAAI4Y,mBAAV,EAA+B,gEAAyBzB,OAAzB,CAA/B,EAAkE,gEAAyB,yDAAzB,CAAlE,EAAgH,gEAAyB,8DAAzB,CAAhH,EAAmK,gEAAyBkB,qCAAzB,CAAnK,EAAoO,gEAAyB,gEAAzB,EAAgD,CAAhD,CAApO,CAAP;AAAiS,KAAtW;;AACAO,uBAAmB,CAACH,IAApB,GAA2B,gEAAyB;AAAEvY,UAAI,EAAE0Y,mBAAR;AAA6BF,eAAS,EAAE,CAAC,CAAC,EAAD,EAAK,uBAAL,EAA8B,EAA9B,CAAD,EAAoC,CAAC,EAAD,EAAK,mBAAL,EAA0B,EAA1B,CAApC,EAAmE,CAAC,EAAD,EAAK,qBAAL,EAA4B,EAA5B,CAAnE,CAAxC;AAA6IyC,YAAM,EAAE;AAAE5B,sBAAc,EAAE,CAAC,mCAAD,EAAsC,gBAAtC,CAAlB;AAA2EC,YAAI,EAAE,CAAC,yBAAD,EAA4B,MAA5B,CAAjF;AAAsH7Y,sBAAc,EAAE,CAAC,mCAAD,EAAsC,gBAAtC,CAAtI;AAA+Lc,eAAO,EAAE,CAAC,4BAAD,EAA+B,SAA/B,CAAxM;AAAmPC,eAAO,EAAE,CAAC,4BAAD,EAA+B,SAA/B,CAA5P;AAAuSb,mBAAW,EAAE,CAAC,gCAAD,EAAmC,aAAnC,CAApT;AAAuW8Z,oBAAY,EAAE,CAAC,iCAAD,EAAoC,cAApC,CAArX;AAA0a5M,0BAAkB,EAAE,CAAC,uCAAD,EAA0C,oBAA1C,CAA9b;AAA+fC,qBAAa,EAAE,CAAC,kCAAD,EAAqC,eAArC,CAA9gB;AAAqkB7K,YAAI,EAAE,CAAC,yBAAD,EAA4B,MAA5B,CAA3kB;AAAgnB0K,iBAAS,EAAE,CAAC,8BAAD,EAAiC,WAAjC,CAA3nB;AAA0qBtM,cAAM,EAAE,CAAC,2BAAD,EAA8B,QAA9B,CAAlrB;AAA2tBgF,wBAAgB,EAAE,CAAC,qCAAD,EAAwC,kBAAxC,CAA7uB;AAA0yBrK,aAAK,EAAE,CAAC,0BAAD,EAA6B,OAA7B,CAAjzB;AAAw1BF,cAAM,EAAE,CAAC,2BAAD,EAA8B,QAA9B,CAAh2B;AAAy4BqM,gBAAQ,EAAE,CAAC,6BAAD,EAAgC,UAAhC,CAAn5B;AAAg8BC,iBAAS,EAAE,CAAC,8BAAD,EAAiC,WAAjC,CAA38B;AAA0/BxH,qBAAa,EAAE,CAAC,kCAAD,EAAqC,eAArC,CAAzgC;AAAgkCF,kBAAU,EAAE,CAAC,+BAAD,EAAkC,YAAlC,CAA5kC;AAA6nCia,+BAAuB,EAAE,CAAC,sCAAD,EAAyC,yBAAzC;AAAtpC,OAArJ;AAAk3CO,aAAO,EAAE;AAAE3B,qBAAa,EAAE,eAAjB;AAAkCC,sBAAc,EAAE,gBAAlD;AAAoErT,cAAM,EAAE,QAA5E;AAAsFpJ,cAAM,EAAE,QAA9F;AAAwG0c,sBAAc,EAAE;AAAxH,OAA33C;AAAugDhB,cAAQ,EAAE,CAAC,qBAAD,CAAjhD;AAA0iD0C,cAAQ,EAAE,CAAC,kEAAD;AAApjD,KAAzB,CAA3B;AACA;;AACAzC,uBAAmB,CAAC3Y,cAApB,GAAqC;AAAA,aAAM,CACvC;AAAEC,YAAI,EAAEiX;AAAR,OADuC,EAEvC;AAAEjX,YAAI,EAAE;AAAR,OAFuC,EAGvC;AAAEA,YAAI,EAAE;AAAR,OAHuC,EAIvC;AAAEA,YAAI,EAAEC,SAAR;AAAmBC,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAACgY,qCAAD;AAAtB,SAAD;AAA/B,OAJuC,EAKvC;AAAEnY,YAAI,EAAE,gEAAR;AAAwBE,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD;AAApC,OALuC,CAAN;AAAA,KAArC;;AAOA0Y,uBAAmB,CAAC0C,cAApB,GAAqC;AACjC/Z,YAAM,EAAE,CAAC;AAAErB,YAAI,EAAE,mDAAR;AAAeG,YAAI,EAAE,CAAC,2BAAD;AAArB,OAAD,CADyB;AAEjCwN,eAAS,EAAE,CAAC;AAAE3N,YAAI,EAAE,mDAAR;AAAeG,YAAI,EAAE,CAAC,8BAAD;AAArB,OAAD,CAFsB;AAGjCkG,sBAAgB,EAAE,CAAC;AAAErG,YAAI,EAAE,mDAAR;AAAeG,YAAI,EAAE,CAAC,qCAAD;AAArB,OAAD,CAHe;AAIjCoB,aAAO,EAAE,CAAC;AAAEvB,YAAI,EAAE,mDAAR;AAAeG,YAAI,EAAE,CAAC,4BAAD;AAArB,OAAD,CAJwB;AAKjCqB,aAAO,EAAE,CAAC;AAAExB,YAAI,EAAE,mDAAR;AAAeG,YAAI,EAAE,CAAC,4BAAD;AAArB,OAAD,CALwB;AAMjCnE,WAAK,EAAE,CAAC;AAAEgE,YAAI,EAAE,mDAAR;AAAeG,YAAI,EAAE,CAAC,0BAAD;AAArB,OAAD,CAN0B;AAOjCrE,YAAM,EAAE,CAAC;AAAEkE,YAAI,EAAE,mDAAR;AAAeG,YAAI,EAAE,CAAC,2BAAD;AAArB,OAAD,CAPyB;AAQjCgI,cAAQ,EAAE,CAAC;AAAEnI,YAAI,EAAE,mDAAR;AAAeG,YAAI,EAAE,CAAC,6BAAD;AAArB,OAAD,CARuB;AASjCiI,eAAS,EAAE,CAAC;AAAEpI,YAAI,EAAE,mDAAR;AAAeG,YAAI,EAAE,CAAC,8BAAD;AAArB,OAAD,CATsB;AAUjCS,mBAAa,EAAE,CAAC;AAAEZ,YAAI,EAAE,mDAAR;AAAeG,YAAI,EAAE,CAAC,kCAAD;AAArB,OAAD,CAVkB;AAWjCO,gBAAU,EAAE,CAAC;AAAEV,YAAI,EAAE,mDAAR;AAAeG,YAAI,EAAE,CAAC,+BAAD;AAArB,OAAD,CAXqB;AAYjCkZ,oBAAc,EAAE,CAAC;AAAErZ,YAAI,EAAE,mDAAR;AAAeG,YAAI,EAAE,CAAC,mCAAD;AAArB,OAAD,CAZiB;AAajCM,oBAAc,EAAE,CAAC;AAAET,YAAI,EAAE,mDAAR;AAAeG,YAAI,EAAE,CAAC,mCAAD;AAArB,OAAD,CAbiB;AAcjCmZ,UAAI,EAAE,CAAC;AAAEtZ,YAAI,EAAE,mDAAR;AAAeG,YAAI,EAAE,CAAC,yBAAD;AAArB,OAAD,CAd2B;AAejCwa,6BAAuB,EAAE,CAAC;AAAE3a,YAAI,EAAE,mDAAR;AAAeG,YAAI,EAAE,CAAC,sCAAD;AAArB,OAAD,CAfQ;AAgBjCQ,iBAAW,EAAE,CAAC;AAAEX,YAAI,EAAE,mDAAR;AAAeG,YAAI,EAAE,CAAC,gCAAD;AAArB,OAAD,CAhBoB;AAiBjCsa,kBAAY,EAAE,CAAC;AAAEza,YAAI,EAAE,mDAAR;AAAeG,YAAI,EAAE,CAAC,iCAAD;AAArB,OAAD,CAjBmB;AAkBjC0N,wBAAkB,EAAE,CAAC;AAAE7N,YAAI,EAAE,mDAAR;AAAeG,YAAI,EAAE,CAAC,uCAAD;AAArB,OAAD,CAlBa;AAmBjC2N,mBAAa,EAAE,CAAC;AAAE9N,YAAI,EAAE,mDAAR;AAAeG,YAAI,EAAE,CAAC,kCAAD;AAArB,OAAD,CAnBkB;AAoBjC8C,UAAI,EAAE,CAAC;AAAEjD,YAAI,EAAE,mDAAR;AAAeG,YAAI,EAAE,CAAC,yBAAD;AAArB,OAAD,CApB2B;AAqBjCoZ,mBAAa,EAAE,CAAC;AAAEvZ,YAAI,EAAE;AAAR,OAAD,CArBkB;AAsBjCwZ,oBAAc,EAAE,CAAC;AAAExZ,YAAI,EAAE;AAAR,OAAD,CAtBiB;AAuBjCmG,YAAM,EAAE,CAAC;AAAEnG,YAAI,EAAE;AAAR,OAAD,CAvByB;AAwBjCjD,YAAM,EAAE,CAAC;AAAEiD,YAAI,EAAE;AAAR,OAAD,CAxByB;AAyBjCyZ,oBAAc,EAAE,CAAC;AAAEzZ,YAAI,EAAE;AAAR,OAAD;AAzBiB,KAArC;AA2BA;;AAAc,KAAC,YAAY;AAAE,sEAAyB0Y,mBAAzB,EAA8C,CAAC;AACpE1Y,YAAI,EAAE,uDAD8D;AAEpEG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,qEADX;AAECsK,kBAAQ,EAAE;AAFX,SAAD;AAF8D,OAAD,CAA9C,EAMrB,YAAY;AAAE,eAAO,CAAC;AAAEzY,cAAI,EAAEiX;AAAR,SAAD,EAAoB;AAAEjX,cAAI,EAAE;AAAR,SAApB,EAAkD;AAAEA,cAAI,EAAE;AAAR,SAAlD,EAAqF;AAAEA,cAAI,EAAEC,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAClIF,gBAAI,EAAE,oDAD4H;AAElIG,gBAAI,EAAE,CAACgY,qCAAD;AAF4H,WAAD;AAA/B,SAArF,EAGX;AAAEnY,cAAI,EAAE,gEAAR;AAA+BE,oBAAU,EAAE,CAAC;AAC9CF,gBAAI,EAAE;AADwC,WAAD;AAA3C,SAHW,CAAP;AAKF,OAXS,EAWP;AAAEqZ,sBAAc,EAAE,CAAC;AAC7BrZ,cAAI,EAAE,mDADuB;AAE7BG,cAAI,EAAE,CAAC,mCAAD;AAFuB,SAAD,CAAlB;AAGVmZ,YAAI,EAAE,CAAC;AACPtZ,cAAI,EAAE,mDADC;AAEPG,cAAI,EAAE,CAAC,yBAAD;AAFC,SAAD,CAHI;AAMVoZ,qBAAa,EAAE,CAAC;AAChBvZ,cAAI,EAAE;AADU,SAAD,CANL;AAQVwZ,sBAAc,EAAE,CAAC;AACjBxZ,cAAI,EAAE;AADW,SAAD,CARN;AAUVmG,cAAM,EAAE,CAAC;AACTnG,cAAI,EAAE;AADG,SAAD,CAVE;AAYVjD,cAAM,EAAE,CAAC;AACTiD,cAAI,EAAE;AADG,SAAD,CAZE;AAcVyZ,sBAAc,EAAE,CAAC;AACjBzZ,cAAI,EAAE;AADW,SAAD,CAdN;AAgBVS,sBAAc,EAAE,CAAC;AACjBT,cAAI,EAAE,mDADW;AAEjBG,cAAI,EAAE,CAAC,mCAAD;AAFW,SAAD,CAhBN;AAmBVoB,eAAO,EAAE,CAAC;AACVvB,cAAI,EAAE,mDADI;AAEVG,cAAI,EAAE,CAAC,4BAAD;AAFI,SAAD,CAnBC;AAsBVqB,eAAO,EAAE,CAAC;AACVxB,cAAI,EAAE,mDADI;AAEVG,cAAI,EAAE,CAAC,4BAAD;AAFI,SAAD,CAtBC;AAyBVQ,mBAAW,EAAE,CAAC;AACdX,cAAI,EAAE,mDADQ;AAEdG,cAAI,EAAE,CAAC,gCAAD;AAFQ,SAAD,CAzBH;AA4BVsa,oBAAY,EAAE,CAAC;AACfza,cAAI,EAAE,mDADS;AAEfG,cAAI,EAAE,CAAC,iCAAD;AAFS,SAAD,CA5BJ;AA+BV0N,0BAAkB,EAAE,CAAC;AACrB7N,cAAI,EAAE,mDADe;AAErBG,cAAI,EAAE,CAAC,uCAAD;AAFe,SAAD,CA/BV;AAkCV2N,qBAAa,EAAE,CAAC;AAChB9N,cAAI,EAAE,mDADU;AAEhBG,cAAI,EAAE,CAAC,kCAAD;AAFU,SAAD,CAlCL;AAqCV8C,YAAI,EAAE,CAAC;AACPjD,cAAI,EAAE,mDADC;AAEPG,cAAI,EAAE,CAAC,yBAAD;AAFC,SAAD,CArCI;AAwCVwN,iBAAS,EAAE,CAAC;AACZ3N,cAAI,EAAE,mDADM;AAEZG,cAAI,EAAE,CAAC,8BAAD;AAFM,SAAD,CAxCD;AA2CVkB,cAAM,EAAE,CAAC;AACTrB,cAAI,EAAE,mDADG;AAETG,cAAI,EAAE,CAAC,2BAAD;AAFG,SAAD,CA3CE;AA8CVkG,wBAAgB,EAAE,CAAC;AACnBrG,cAAI,EAAE,mDADa;AAEnBG,cAAI,EAAE,CAAC,qCAAD;AAFa,SAAD,CA9CR;AAiDVnE,aAAK,EAAE,CAAC;AACRgE,cAAI,EAAE,mDADE;AAERG,cAAI,EAAE,CAAC,0BAAD;AAFE,SAAD,CAjDG;AAoDVrE,cAAM,EAAE,CAAC;AACTkE,cAAI,EAAE,mDADG;AAETG,cAAI,EAAE,CAAC,2BAAD;AAFG,SAAD,CApDE;AAuDVgI,gBAAQ,EAAE,CAAC;AACXnI,cAAI,EAAE,mDADK;AAEXG,cAAI,EAAE,CAAC,6BAAD;AAFK,SAAD,CAvDA;AA0DViI,iBAAS,EAAE,CAAC;AACZpI,cAAI,EAAE,mDADM;AAEZG,cAAI,EAAE,CAAC,8BAAD;AAFM,SAAD,CA1DD;AA6DVS,qBAAa,EAAE,CAAC;AAChBZ,cAAI,EAAE,mDADU;AAEhBG,cAAI,EAAE,CAAC,kCAAD;AAFU,SAAD,CA7DL;AAgEVO,kBAAU,EAAE,CAAC;AACbV,cAAI,EAAE,mDADO;AAEbG,cAAI,EAAE,CAAC,+BAAD;AAFO,SAAD,CAhEF;AAmEVwa,+BAAuB,EAAE,CAAC;AAC1B3a,cAAI,EAAE,mDADoB;AAE1BG,cAAI,EAAE,CAAC,sCAAD;AAFoB,SAAD;AAnEf,OAXO;AAiFb,KAjFF;;AAkFd,QAAI,KAAJ,EAAW,CA4KV;AACD;;;;;;;AAKA,aAASkb,sDAAT,CAAgE/Z,OAAhE,EAAyE;AACrE;AAAQ;;;AAGR;AAAA,iBAAMA,OAAO,CAAC4V,gBAAR,CAAyBvX,UAAzB,EAAN;AAAA;AAHA;AAIH;AACD;;;;;;AAIA,QAAM2b,8CAA8C,GAAG;AACnD5X,aAAO,EAAEyU,qCAD0C;AAEnDxU,UAAI,EAAE,CAACsT,OAAD,CAF6C;AAGnDrT,gBAAU,EAAEyX;AAHuC,KAAvD;AAMA;;;;;;QAKME,a;;;;AAENA,iBAAa,CAACC,IAAd,GAAqB,+DAAwB;AAAExb,UAAI,EAAEub;AAAR,KAAxB,CAArB;AACAA,iBAAa,CAACE,IAAd,GAAqB,+DAAwB;AAAEpb,aAAO,EAAE,SAASqb,qBAAT,CAA+B5b,CAA/B,EAAkC;AAAE,eAAO,KAAKA,CAAC,IAAIyb,aAAV,GAAP;AAAoC,OAAnF;AAAqFI,eAAS,EAAE,CACrI1E,OADqI,EAErIqE,8CAFqI,CAAhG;AAGtCM,aAAO,EAAE,CAAC,CAAC,4DAAD,EAAa,gEAAb,EAA2B,sEAA3B,CAAD,EACR,sEADQ;AAH6B,KAAxB,CAArB;;AAKA,KAAC,YAAY;AAAE,OAAC,OAAOC,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,iEAA0BN,aAA1B,EAAyC;AAAEO,oBAAY,EAAE,wBAAY;AAAE,iBAAO,CAACpD,mBAAD,EACxIL,gBADwI,CAAP;AAC7G,SAD+E;AAC7EuD,eAAO,EAAE,mBAAY;AAAE,iBAAO,CAAC,4DAAD,EAAa,gEAAb,EAA2B,sEAA3B,CAAP;AAAqD,SADC;AACCG,eAAO,EAAE,mBAAY;AAAE,iBAAO,CAACrD,mBAAD,EAClIL,gBADkI,EAElI,sEAFkI,CAAP;AAExG;AAHgF,OAAzC,CAAnD;AAGkB,KAHjC;AAIA;;;AAAc,KAAC,YAAY;AAAE,sEAAyBkD,aAAzB,EAAwC,CAAC;AAC9Dvb,YAAI,EAAE,sDADwD;AAE9DG,YAAI,EAAE,CAAC;AACCyb,iBAAO,EAAE,CAAC,4DAAD,EAAa,gEAAb,EAA2B,sEAA3B,CADV;AAECG,iBAAO,EAAE,CAACrD,mBAAD,EAAsBL,gBAAtB,EAAwC,sEAAxC,CAFV;AAGCyD,sBAAY,EAAE,CAACpD,mBAAD,EAAsBL,gBAAtB,CAHf;AAICsD,mBAAS,EAAE,CACP1E,OADO,EAEPqE,8CAFO;AAJZ,SAAD;AAFwD,OAAD,CAAxC,EAWrB,IAXqB,EAWf,IAXe;AAWP,KAXR;AAYd;;;;;;;;AAMA,QAAMU,iBAAiB,GAAG,CACtB/E,OADsB,EAEtBJ,sBAFsB,EAGtBpT,oCAHsB,EAItBwB,0BAJsB,EAKtBqW,8CALsB,CAA1B;AAQA;;;;;;AAKA;;;;;;;;QAOMW,0B;;;;;AACF;;;;AAIA,0CAAY1hB,SAAZ;AACA;;;;AAIAoa,cALA,EAKU;AAAA;;AAAA,iCACApa,SADA,EACWoa,QADX;AAET;AACD;;;;;;;sCAGc;AACV;;AACA,cAAI,KAAKuH,oBAAL,IAA6B,KAAKC,mBAAtC,EAA2D;AACvD,iBAAK5hB,SAAL,CAAe8I,mBAAf,CAAmC,KAAK6Y,oBAAxC,EAA8D,KAAKC,mBAAnE;AACH;AACJ;AACD;;;;;;;2CAImB;AAAA;;AACf;;AACA,eAAKC,gCAAL;;AACA,eAAKC,4BAAL;AAAmC;;;AAGnC;AAAA,mBAAM,OAAI,CAACD,gCAAL,EAAN;AAAA,WAHA;AAIH;AACD;;;;;;;2DAImC;AAC/B,cAAI,CAAC,KAAKjY,iBAAV,EAA6B;AACzB;AACH;AACD;;;AACA,cAAMmY,iBAAiB,GAAG,KAAKC,oBAAL,EAA1B;AACA;;AACA,cAAM3F,MAAM,GAAG0F,iBAAiB,IAAI,KAAK/hB,SAAL,CAAeU,IAAnD;AACA2b,gBAAM,CAAC/R,WAAP,CAAmB,KAAKV,iBAAxB;AACH;AACD;;;;;;;;qDAK6BqY,E,EAAI;AAC7B;AACA,cAAMC,SAAS,GAAG,KAAKC,aAAL,EAAlB;;AACA,cAAID,SAAJ,EAAe;AACX,gBAAI,KAAKN,mBAAT,EAA8B;AAC1B,mBAAK5hB,SAAL,CAAe8I,mBAAf,CAAmCoZ,SAAnC,EAA8C,KAAKN,mBAAnD;AACH;;AACD,iBAAK5hB,SAAL,CAAeyI,gBAAf,CAAgCyZ,SAAhC,EAA2CD,EAA3C;;AACA,iBAAKL,mBAAL,GAA2BK,EAA3B;AACH;AACJ;AACD;;;;;;;wCAIgB;AACZ,cAAI,CAAC,KAAKN,oBAAV,EAAgC;AAC5B;AACA,gBAAM3hB,SAAS;AAAI;AAAkB,iBAAKA,SAA1C;;AACA,gBAAIA,SAAS,CAACoiB,iBAAd,EAAiC;AAC7B,mBAAKT,oBAAL,GAA4B,kBAA5B;AACH,aAFD,MAGK,IAAI3hB,SAAS,CAACqiB,uBAAd,EAAuC;AACxC,mBAAKV,oBAAL,GAA4B,wBAA5B;AACH,aAFI,MAGA,IAAI3hB,SAAS,CAACsiB,oBAAd,EAAoC;AACrC,mBAAKX,oBAAL,GAA4B,qBAA5B;AACH,aAFI,MAGA,IAAI3hB,SAAS,CAACuiB,mBAAd,EAAmC;AACpC,mBAAKZ,oBAAL,GAA4B,oBAA5B;AACH;AACJ;;AACD,iBAAO,KAAKA,oBAAZ;AACH;AACD;;;;;;;;+CAKuB;AACnB;AACA,cAAM3hB,SAAS;AAAI;AAAkB,eAAKA,SAA1C;AACA,iBAAOA,SAAS,CAAC+hB,iBAAV,IACH/hB,SAAS,CAACwiB,uBADP,IAEHxiB,SAAS,CAACyiB,oBAFP,IAGHziB,SAAS,CAAC0iB,mBAHP,IAIH,IAJJ;AAKH;;;;MApGoCjZ,gB;;AAsGzCiY,8BAA0B,CAACrc,IAA3B,GAAkC,SAASsd,kCAAT,CAA4Cpd,CAA5C,EAA+C;AAAE,aAAO,KAAKA,CAAC,IAAImc,0BAAV,EAAsC,uDAAgB,wDAAhB,CAAtC,EAAiE,uDAAgB,8DAAhB,CAAjE,CAAP;AAA4G,KAA/L;AACA;;;AACAA,8BAA0B,CAAClc,cAA3B,GAA4C;AAAA,aAAM,CAC9C;AAAEC,YAAI,EAAEC,SAAR;AAAmBC,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAAC,wDAAD;AAAtB,SAAD;AAA/B,OAD8C,EAE9C;AAAEH,YAAI,EAAE;AAAR,OAF8C,CAAN;AAAA,KAA5C;AAIA;;;AAAmBic,8BAA0B,CAAC7b,KAA3B,GAAmC,yEAAmB;AAAEC,aAAO,EAAE,SAAS6c,kCAAT,GAA8C;AAAE,eAAO,IAAIjB,0BAAJ,CAA+B,+DAAS,wDAAT,CAA/B,EAAmD,+DAAS,8DAAT,CAAnD,CAAP;AAAgF,OAA3I;AAA6I3b,WAAK,EAAE2b,0BAApJ;AAAgL1b,gBAAU,EAAE;AAA5L,KAAnB,CAAnC;AACnB;;AAAc,KAAC,YAAY;AAAE,sEAAyB0b,0BAAzB,EAAqD,CAAC;AAC3Ejc,YAAI,EAAE,wDADqE;AAE3EG,YAAI,EAAE,CAAC;AAAEI,oBAAU,EAAE;AAAd,SAAD;AAFqE,OAAD,CAArD,EAGrB,YAAY;AAAE,eAAO,CAAC;AAAEP,cAAI,EAAEC,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAC9CF,gBAAI,EAAE,oDADwC;AAE9CG,gBAAI,EAAE,CAAC,wDAAD;AAFwC,WAAD;AAA/B,SAAD,EAGX;AAAEH,cAAI,EAAE;AAAR,SAHW,CAAP;AAGyB,OANlB,EAMoB,IANpB;AAM4B,KAN3C;;AAOd,QAAI,KAAJ,EAAW,CAWV;AAED;;;;;;AAMA;;;AAMA;;;;;;;;;;;;;;;;;;AClqKA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAGA;;;;;;AAKA;;;;;;;;AAOA;;;;;;;AAMA,aAASmd,oBAAT,GAAgC;AAC5B,YAAMhhB,KAAK,CAAC,iCAAD,CAAX;AACH;AACD;;;;;;;AAKA,aAASihB,+BAAT,GAA2C;AACvC,YAAMjhB,KAAK,CAAC,oCAAD,CAAX;AACH;AACD;;;;;;;AAKA,aAASkhB,qCAAT,GAAiD;AAC7C,YAAMlhB,KAAK,CAAC,6CAAD,CAAX;AACH;AACD;;;;;;;AAKA,aAASmhB,2BAAT,GAAuC;AACnC,YAAMnhB,KAAK,CAAC,kFACR,wCADO,CAAX;AAEH;AACD;;;;;;;AAKA,aAASohB,0BAAT,GAAsC;AAClC,YAAMphB,KAAK,CAAC,sDAAD,CAAX;AACH;AACD;;;;;;;AAKA,aAASqhB,0BAAT,GAAsC;AAClC,YAAMrhB,KAAK,CAAC,8DAAD,CAAX;AACH;AAED;;;;;;AAKA;;;;;;;AAKA,aAASshB,aAAT,GAAyB,CAAG;AAC5B;;;;;;;;QAMMC,M;;;;;;;;AACF;;;;;+BAKOnG,I,EAAM;AACT,cAAIA,IAAI,IAAI,IAAZ,EAAkB;AACdgG,sCAA0B;AAC7B;;AACD,cAAIhG,IAAI,CAAC1a,WAAL,EAAJ,EAAwB;AACpBugB,2CAA+B;AAClC;;AACD,eAAKO,aAAL,GAAqBpG,IAArB;AACA;AAAQ;AAAkBA,gBAAI,CAACpR,MAAL,CAAY,IAAZ;AAA1B;AACH;AACD;;;;;;;iCAIS;AACL;AACA,cAAIoR,IAAI,GAAG,KAAKoG,aAAhB;;AACA,cAAIpG,IAAI,IAAI,IAAZ,EAAkB;AACdiG,sCAA0B;AAC7B,WAFD,MAGK;AACD,iBAAKG,aAAL,GAAqB,IAArB;AACApG,gBAAI,CAACxa,MAAL;AACH;AACJ;AACD;;;;;;;;AAOA;;;;;;wCAMgBwa,I,EAAM;AAClB,eAAKoG,aAAL,GAAqBpG,IAArB;AACH;;;4BAXgB;AACb,iBAAO,KAAKoG,aAAL,IAAsB,IAA7B;AACH;;;;;;AAWL,QAAI,KAAJ,EAAW,CAMV;AACD;;;;;;QAIMC,e;;;;;AACF;;;;;;AAMA,+BAAYC,SAAZ,EAAuBhF,gBAAvB,EAAyCiF,QAAzC,EAAmDC,wBAAnD,EAA6E;AAAA;;AAAA;;AACzE;AACA,gBAAKF,SAAL,GAAiBA,SAAjB;AACA,gBAAKhF,gBAAL,GAAwBA,gBAAxB;AACA,gBAAKiF,QAAL,GAAgBA,QAAhB;AACA,gBAAKC,wBAAL,GAAgCA,wBAAhC;AALyE;AAM5E;;;MAbyBL,M;;AAe9B,QAAI,KAAJ,EAAW,CAwBV;AACD;;;;;;QAIMM,c;;;;;AACF;;;;;AAKA,8BAAYC,QAAZ,EAAsBpF,gBAAtB,EAAwCqF,OAAxC,EAAiD;AAAA;;AAAA;;AAC7C;AACA,gBAAKtF,WAAL,GAAmBqF,QAAnB;AACA,gBAAKpF,gBAAL,GAAwBA,gBAAxB;AACA,gBAAKqF,OAAL,GAAeA,OAAf;AAJ6C;AAKhD;AACD;;;;;;;;AAMA;;;;;;;;+BAQO3G,I,EAA8B;AAAA,cAAxB2G,OAAwB,uEAAd,KAAKA,OAAS;AACjC,eAAKA,OAAL,GAAeA,OAAf;AACA,4FAAoB3G,IAApB;AACH;AACD;;;;;;iCAGS;AACL,eAAK2G,OAAL,GAAeje,SAAf;AACA;AACH;;;4BArBY;AACT,iBAAO,KAAK2Y,WAAL,CAAiB9B,UAAxB;AACH;;;;MAjBwB4G,M;;AAsC7B,QAAI,KAAJ,EAAW,CAgBV;AACD;;;;;;;;QAMMS,S;;;;;AACF;;;AAGA,yBAAYtgB,OAAZ,EAAqB;AAAA;;AAAA;;AACjB;AACA,gBAAKA,OAAL,GAAeA,OAAO,YAAY,wDAAnB,GAAgCA,OAAO,CAACiV,aAAxC,GAAwDjV,OAAvE;AAFiB;AAGpB;;;MAPmB6f,M;;AASxB,QAAI,KAAJ,EAAW,CAMV;AACD;;;;;;AAIA,aAASU,YAAT,GAAwB,CAAG;;AAC3B,QAAI,KAAJ,EAAW,CAsBV;AACD;;;;;;;QAKMC,gB;AACF,kCAAc;AAAA;;AACV;;;AAGA,aAAKpT,WAAL,GAAmB,KAAnB,CAJU,CAKV;;AACA,aAAKqT,eAAL,GAAuB,IAAvB;AACH;AACD;;;;;;;;sCAIc;AACV,iBAAO,CAAC,CAAC,KAAKC,eAAd;AACH;AACD;;;;;;;;+BAKOjY,M,EAAQ;AACX,cAAI,CAACA,MAAL,EAAa;AACT6W,gCAAoB;AACvB;;AACD,cAAI,KAAKtgB,WAAL,EAAJ,EAAwB;AACpBugB,2CAA+B;AAClC;;AACD,cAAI,KAAKnS,WAAT,EAAsB;AAClBoS,iDAAqC;AACxC;;AACD,cAAI/W,MAAM,YAAYsX,eAAtB,EAAuC;AACnC,iBAAKW,eAAL,GAAuBjY,MAAvB;AACA,mBAAO,KAAKkY,qBAAL,CAA2BlY,MAA3B,CAAP;AACH,WAHD,MAIK,IAAIA,MAAM,YAAY0X,cAAtB,EAAsC;AACvC,iBAAKO,eAAL,GAAuBjY,MAAvB;AACA,mBAAO,KAAKmY,oBAAL,CAA0BnY,MAA1B,CAAP,CAFuC,CAGvC;AACH,WAJI,MAKA,IAAI,KAAKgY,eAAL,IAAwBhY,MAAM,YAAY6X,SAA9C,EAAyD;AAC1D,iBAAKI,eAAL,GAAuBjY,MAAvB;AACA,mBAAO,KAAKgY,eAAL,CAAqBhY,MAArB,CAAP;AACH;;AACDgX,qCAA2B;AAC9B;AACD;;;;;;;iCAIS;AACL,cAAI,KAAKiB,eAAT,EAA0B;AACtB,iBAAKA,eAAL,CAAqBG,eAArB,CAAqC,IAArC;;AACA,iBAAKH,eAAL,GAAuB,IAAvB;AACH;;AACD,eAAKI,gBAAL;AACH;AACD;;;;;;;kCAIU;AACN,cAAI,KAAK9hB,WAAL,EAAJ,EAAwB;AACpB,iBAAKE,MAAL;AACH;;AACD,eAAK4hB,gBAAL;;AACA,eAAK1T,WAAL,GAAmB,IAAnB;AACH;AACD;;;;;;;;qCAKauR,E,EAAI;AACb,eAAKoC,UAAL,GAAkBpC,EAAlB;AACH;AACD;;;;;;;2CAImB;AACf,cAAI,KAAKoC,UAAT,EAAqB;AACjB,iBAAKA,UAAL;;AACA,iBAAKA,UAAL,GAAkB,IAAlB;AACH;AACJ;;;;;;AAEL,QAAI,KAAJ,EAAW,CAmCV;AACD;;;;;;;QAKMC,c;;;;;;;;;;;;MAAuBR,gB;AAG7B;;;;;;AAKA;;;;;;QAIMS,e;;;;;AACF;;;;;;;AAOA,+BAAYC,aAAZ,EAA2B5H,yBAA3B,EAAsDY,OAAtD,EAA+DiH,gBAA/D;AACA;;;;AAIAzkB,eALA,EAKW;AAAA;;AAAA;;AACP;AACA,gBAAKwkB,aAAL,GAAqBA,aAArB;AACA,gBAAK5H,yBAAL,GAAiCA,yBAAjC;AACA,gBAAKY,OAAL,GAAeA,OAAf;AACA,gBAAKiH,gBAAL,GAAwBA,gBAAxB;AACA;;;;;;;AAMA,gBAAKV,eAAL;AAAwB;;;;AAIxB,kBAAChY,MAAD,EAAY;AACR;AACA;AACA,cAAI,CAAC,QAAK/L,SAAV,EAAqB;AACjB,kBAAM4B,KAAK,CAAC,kEAAD,CAAX;AACH;AACD;;;AACA,cAAM0B,OAAO,GAAGyI,MAAM,CAACzI,OAAvB;;AACA,cAAI,CAACA,OAAO,CAACuG,UAAb,EAAyB;AACrB,kBAAMjI,KAAK,CAAC,uDAAD,CAAX;AACH,WAVO,CAWR;AACA;;AACA;;;AACA,cAAM8iB,UAAU,GAAG,QAAK1kB,SAAL,CAAe2kB,aAAf,CAA6B,YAA7B,CAAnB;;AACArhB,iBAAO,CAACuG,UAAR,CAAmBsE,YAAnB,CAAgCuW,UAAhC,EAA4CphB,OAA5C;;AACA,kBAAKkhB,aAAL,CAAmBla,WAAnB,CAA+BhH,OAA/B;;AACA;AAAoB;;;AAGpB,sBAAM;AACF;AACA,gBAAIohB,UAAU,CAAC7a,UAAf,EAA2B;AACvB6a,wBAAU,CAAC7a,UAAX,CAAsB+a,YAAtB,CAAmCthB,OAAnC,EAA4CohB,UAA5C;AACH;AACJ,WARD;AASH,SA9BD;;AA+BA,gBAAK1kB,SAAL,GAAiBA,SAAjB;AA3CO;AA4CV;AACD;;;;;;;;;;8CAMsB+L,M,EAAQ;AAAA;;AAC1B;AACA,cAAM8Y,QAAQ,GAAG9Y,MAAM,CAACyX,wBAAP,IAAmC,KAAK5G,yBAAzD;AACA;;AACA,cAAMkI,gBAAgB,GAAGD,QAAQ,CAACE,uBAAT,CAAiChZ,MAAM,CAACuX,SAAxC,CAAzB;AACA;;AACA,cAAI0B,YAAJ,CAN0B,CAO1B;AACA;AACA;AACA;;AACA,cAAIjZ,MAAM,CAACuS,gBAAX,EAA6B;AACzB0G,wBAAY,GAAGjZ,MAAM,CAACuS,gBAAP,CAAwB2G,eAAxB,CAAwCH,gBAAxC,EAA0D/Y,MAAM,CAACuS,gBAAP,CAAwBlW,MAAlF,EAA0F2D,MAAM,CAACwX,QAAP,IAAmBxX,MAAM,CAACuS,gBAAP,CAAwBiF,QAArI,CAAf;AACA,iBAAK2B,YAAL;AAAmB;;;AAGnB;AAAA,qBAAMF,YAAY,CAACG,OAAb,EAAN;AAAA,aAHA;AAIH,WAND,MAOK;AACDH,wBAAY,GAAGF,gBAAgB,CAACpF,MAAjB,CAAwB3T,MAAM,CAACwX,QAAP,IAAmB,KAAKkB,gBAAhD,CAAf;;AACA,iBAAKjH,OAAL,CAAa4H,UAAb,CAAwBJ,YAAY,CAACK,QAArC;;AACA,iBAAKH,YAAL;AAAmB;;;AAGnB,wBAAM;AACF,qBAAI,CAAC1H,OAAL,CAAa8H,UAAb,CAAwBN,YAAY,CAACK,QAArC;;AACAL,0BAAY,CAACG,OAAb;AACH,aAND;AAOH,WA5ByB,CA6B1B;AACA;;;AACA,eAAKX,aAAL,CAAmBla,WAAnB,CAA+B,KAAKib,qBAAL,CAA2BP,YAA3B,CAA/B;AACA,iBAAOA,YAAP;AACH;AACD;;;;;;;;;6CAMqBjZ,M,EAAQ;AAAA;;AACzB;AACA,cAAIyZ,aAAa,GAAGzZ,MAAM,CAACuS,gBAA3B;AACA;;AACA,cAAImH,OAAO,GAAGD,aAAa,CAACE,kBAAd,CAAiC3Z,MAAM,CAACsS,WAAxC,EAAqDtS,MAAM,CAAC4X,OAA5D,CAAd;AACA8B,iBAAO,CAACE,aAAR,GALyB,CAMzB;AACA;AACA;AACA;;AACAF,iBAAO,CAACG,SAAR,CAAkB9W,OAAlB;AAA2B;;;;AAI3B,oBAAA+W,QAAQ;AAAA,mBAAI,OAAI,CAACrB,aAAL,CAAmBla,WAAnB,CAA+Bub,QAA/B,CAAJ;AAAA,WAJR;AAKA,eAAKX,YAAL;AAAoB;;;AAGpB,sBAAM;AACF;AACA,gBAAIvc,KAAK,GAAG6c,aAAa,CAAC5c,OAAd,CAAsB6c,OAAtB,CAAZ;;AACA,gBAAI9c,KAAK,KAAK,CAAC,CAAf,EAAkB;AACd6c,2BAAa,CAACxkB,MAAd,CAAqB2H,KAArB;AACH;AACJ,WATD,EAfyB,CAyBzB;;AACA,iBAAO8c,OAAP;AACH;AACD;;;;;;;kCAIU;AACN;;AACA,cAAI,KAAKjB,aAAL,CAAmB3a,UAAnB,IAAiC,IAArC,EAA2C;AACvC,iBAAK2a,aAAL,CAAmB3a,UAAnB,CAA8BC,WAA9B,CAA0C,KAAK0a,aAA/C;AACH;AACJ;AACD;;;;;;;;;8CAMsBQ,Y,EAAc;AAChC;AAAQ;;AAAoB;AAAkBA,wBAAY,CAACK,QAAjC,CAA6CO,SAA7C,CAAuD,CAAvD;AAA1B;AACH;;;;MAtJyB9B,gB;;AAwJ9B,QAAI,KAAJ,EAAW,CAkCV;AACD;;;;;;QAIMgC,a;;;;;;;;;;;;MAAsBvB,e;AAG5B;;;;;;AAKA;;;;;;QAIMwB,S;;;;;AACF;;;;AAIA,yBAAY1H,WAAZ,EAAyBC,gBAAzB,EAA2C;AAAA;;AAAA,kCACjCD,WADiC,EACpBC,gBADoB;AAE1C;;;MAPmBmF,c;;AASxBsC,aAAS,CAAC1gB,IAAV,GAAiB,SAAS2gB,iBAAT,CAA2BzgB,CAA3B,EAA8B;AAAE,aAAO,KAAKA,CAAC,IAAIwgB,SAAV,EAAqB,gEAAyB,yDAAzB,CAArB,EAAmE,gEAAyB,8DAAzB,CAAnE,CAAP;AAA+H,KAAhL;;AACAA,aAAS,CAAC/H,IAAV,GAAiB,gEAAyB;AAAEvY,UAAI,EAAEsgB,SAAR;AAAmB9H,eAAS,EAAE,CAAC,CAAC,EAAD,EAAK,WAAL,EAAkB,EAAlB,CAAD,CAA9B;AAAuDC,cAAQ,EAAE,CAAC,WAAD,CAAjE;AAAgF0C,cAAQ,EAAE,CAAC,wEAAD;AAA1F,KAAzB,CAAjB;AACA;;AACAmF,aAAS,CAACvgB,cAAV,GAA2B;AAAA,aAAM,CAC7B;AAAEC,YAAI,EAAE;AAAR,OAD6B,EAE7B;AAAEA,YAAI,EAAE;AAAR,OAF6B,CAAN;AAAA,KAA3B;AAIA;;;AAAc,KAAC,YAAY;AAAE,sEAAyBsgB,SAAzB,EAAoC,CAAC;AAC1DtgB,YAAI,EAAE,uDADoD;AAE1DG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,aADX;AAECsK,kBAAQ,EAAE;AAFX,SAAD;AAFoD,OAAD,CAApC,EAMrB,YAAY;AAAE,eAAO,CAAC;AAAEzY,cAAI,EAAE;AAAR,SAAD,EAA+B;AAAEA,cAAI,EAAE;AAAR,SAA/B,CAAP;AAA2E,OANpE,EAMsE,IANtE;AAM8E,KAN7F;AAOd;;;;;;QAIMwgB,uB;;;;;;;;;;;;MAAgCF,S;;AAEtCE,2BAAuB,CAAC5gB,IAAxB,GAA+B,SAAS6gB,+BAAT,CAAyC3gB,CAAzC,EAA4C;AAAE,aAAO4gB,oCAAoC,CAAC5gB,CAAC,IAAI0gB,uBAAN,CAA3C;AAA4E,KAAzJ;;AACAA,2BAAuB,CAACjI,IAAxB,GAA+B,gEAAyB;AAAEvY,UAAI,EAAEwgB,uBAAR;AAAiChI,eAAS,EAAE,CAAC,CAAC,EAAD,EAAK,YAAL,EAAmB,EAAnB,CAAD,EAAyB,CAAC,EAAD,EAAK,QAAL,EAAe,EAAf,CAAzB,CAA5C;AAA0FC,cAAQ,EAAE,CAAC,WAAD,CAApG;AAAmH0C,cAAQ,EAAE,CAAC,iEAA0B,CAAC;AACjMzX,eAAO,EAAE4c,SADwL;AAEjMK,mBAAW,EAAEH;AAFoL,OAAD,CAA1B,CAAD,EAGpK,wEAHoK;AAA7H,KAAzB,CAA/B;;AAIA,QAAME,oCAAoC,GAAG,oEAA6BF,uBAA7B,CAA7C;AACA;;;AAAc,KAAC,YAAY;AAAE,sEAAyBA,uBAAzB,EAAkD,CAAC;AACxExgB,YAAI,EAAE,uDADkE;AAExEG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,wBADX;AAECsK,kBAAQ,EAAE,WAFX;AAGCkD,mBAAS,EAAE,CAAC;AACJjY,mBAAO,EAAE4c,SADL;AAEJK,uBAAW,EAAEH;AAFT,WAAD;AAHZ,SAAD;AAFkE,OAAD,CAAlD,EAUrB,IAVqB,EAUf,IAVe;AAUP,KAVR;AAWd;;;;;;;;;QAOMI,e;;;;;AACF;;;;;AAKA,+BAAYzJ,yBAAZ,EAAuC0J,iBAAvC;AACA;;;;AAIAtmB,eALA,EAKW;AAAA;;AAAA;;AACP;AACA,gBAAK4c,yBAAL,GAAiCA,yBAAjC;AACA,gBAAK0J,iBAAL,GAAyBA,iBAAzB;AACA;;;;AAGA,gBAAKC,cAAL,GAAsB,KAAtB;AACA;;;;AAGA,gBAAKC,QAAL,GAAgB,IAAI,0DAAJ,EAAhB;AACA;;;;;;;AAMA,gBAAKzC,eAAL;AAAwB;;;;AAIxB,kBAAChY,MAAD,EAAY;AACR;AACA;AACA,cAAI,CAAC,QAAK/L,SAAV,EAAqB;AACjB,kBAAM4B,KAAK,CAAC,kEAAD,CAAX;AACH;AACD;;;AACA,cAAM0B,OAAO,GAAGyI,MAAM,CAACzI,OAAvB;;AACA,cAAI,CAACA,OAAO,CAACuG,UAAb,EAAyB;AACrB,kBAAMjI,KAAK,CAAC,uDAAD,CAAX;AACH,WAVO,CAWR;AACA;;AACA;;;AACA,cAAM8iB,UAAU,GAAG,QAAK1kB,SAAL,CAAe2kB,aAAf,CAA6B,YAA7B,CAAnB;;AACA5Y,gBAAM,CAACoY,eAAP;AACA7gB,iBAAO,CAACuG,UAAR,CAAmBsE,YAAnB,CAAgCuW,UAAhC,EAA4CphB,OAA5C;;AACA,kBAAKmjB,YAAL,GAAoBnc,WAApB,CAAgChH,OAAhC;;AACA;AAAoB;;;AAGpB,sBAAM;AACF,gBAAIohB,UAAU,CAAC7a,UAAf,EAA2B;AACtB;AAAkB6a,wBAAU,CAAC7a,UAA9B,CAA2C+a,YAA3C,CAAwDthB,OAAxD,EAAiEohB,UAAjE;AACH;AACJ,WAPD;AAQH,SA9BD;;AA+BA,gBAAK1kB,SAAL,GAAiBA,SAAjB;AAjDO;AAkDV;AACD;;;;;;;;;AAkCA;;;mCAGW;AACP,eAAKumB,cAAL,GAAsB,IAAtB;AACH;AACD;;;;;;sCAGc;AACV;;AACA,eAAKvC,eAAL,GAAuB,IAAvB;AACA,eAAK0C,YAAL,GAAoB,IAApB;AACH;AACD;;;;;;;;;;8CAOsB3a,M,EAAQ;AAC1BA,gBAAM,CAACoY,eAAP,CAAuB,IAAvB,EAD0B,CAE1B;AACA;;AACA;;AACA,cAAM7F,gBAAgB,GAAGvS,MAAM,CAACuS,gBAAP,IAA2B,IAA3B,GACrBvS,MAAM,CAACuS,gBADc,GAErB,KAAKgI,iBAFT;AAGA;;AACA,cAAMzB,QAAQ,GAAG9Y,MAAM,CAACyX,wBAAP,IAAmC,KAAK5G,yBAAzD;AACA;;AACA,cAAMkI,gBAAgB,GAAGD,QAAQ,CAACE,uBAAT,CAAiChZ,MAAM,CAACuX,SAAxC,CAAzB;AACA;;AACA,cAAMqD,GAAG,GAAGrI,gBAAgB,CAAC2G,eAAjB,CAAiCH,gBAAjC,EAAmDxG,gBAAgB,CAAClW,MAApE,EAA4E2D,MAAM,CAACwX,QAAP,IAAmBjF,gBAAgB,CAACiF,QAAhH,CAAZ,CAb0B,CAc1B;AACA;AACA;;AACA,cAAIjF,gBAAgB,KAAK,KAAKgI,iBAA9B,EAAiD;AAC7C,iBAAKG,YAAL,GAAoBnc,WAApB;AAAkC;AAAkBqc,eAAG,CAACtB,QAAxB,CAAoCO,SAApC,CAA8C,CAA9C,CAAhC;AACH;;AACD;AAAoB;;;AAGpB;AAAA,mBAAMe,GAAG,CAACxB,OAAJ,EAAN;AAAA,WAHA;;AAIA,eAAKnB,eAAL,GAAuBjY,MAAvB;AACA,eAAK2a,YAAL,GAAoBC,GAApB;AACA,eAAKH,QAAL,CAAcjG,IAAd,CAAmBoG,GAAnB;AACA,iBAAOA,GAAP;AACH;AACD;;;;;;;;;6CAMqB5a,M,EAAQ;AAAA;;AACzBA,gBAAM,CAACoY,eAAP,CAAuB,IAAvB;AACA;;AACA,cAAMsB,OAAO,GAAG,KAAKa,iBAAL,CAAuBZ,kBAAvB,CAA0C3Z,MAAM,CAACsS,WAAjD,EAA8DtS,MAAM,CAAC4X,OAArE,CAAhB;;AACA;AAAoB;;;AAGpB;AAAA,mBAAM,OAAI,CAAC2C,iBAAL,CAAuBM,KAAvB,EAAN;AAAA,WAHA;;AAIA,eAAK5C,eAAL,GAAuBjY,MAAvB;AACA,eAAK2a,YAAL,GAAoBjB,OAApB;AACA,eAAKe,QAAL,CAAcjG,IAAd,CAAmBkF,OAAnB;AACA,iBAAOA,OAAP;AACH;AACD;;;;;;;;uCAKe;AACX;AACA,cAAMlN,aAAa,GAAG,KAAK+N,iBAAL,CAAuBhjB,OAAvB,CAA+BiV,aAArD,CAFW,CAGX;AACA;;AACA;AAAQ;AAAmBA,yBAAa,CAACsO,QAAd,KAA2BtO,aAAa,CAACuO,YAAzC,GACvBvO,aADuB;AACN;AAAkBA,yBAAa,CAAC1O;AADrD;AAEH;;;4BA/GY;AACT,iBAAO,KAAKma,eAAZ;AACH;AACD;;;;;0BAIWjY,M,EAAQ;AACf;AACA;AACA;AACA;AACA,cAAI,KAAKzJ,WAAL,MAAsB,CAACyJ,MAAvB,IAAiC,CAAC,KAAKwa,cAA3C,EAA2D;AACvD;AACH;;AACD,cAAI,KAAKjkB,WAAL,EAAJ,EAAwB;AACpB;AACH;;AACD,cAAIyJ,MAAJ,EAAY;AACR,wFAAaA,MAAb;AACH;;AACD,eAAKiY,eAAL,GAAuBjY,MAAvB;AACH;AACD;;;;;;;4BAIkB;AACd,iBAAO,KAAK2a,YAAZ;AACH;;;;MA/FyB5C,gB;;AAmL9BuC,mBAAe,CAAChhB,IAAhB,GAAuB,SAAS0hB,uBAAT,CAAiCxhB,CAAjC,EAAoC;AAAE,aAAO,KAAKA,CAAC,IAAI8gB,eAAV,EAA2B,gEAAyB,sEAAzB,CAA3B,EAAsF,gEAAyB,8DAAzB,CAAtF,EAAyI,gEAAyB,wDAAzB,CAAzI,CAAP;AAAsL,KAAnP;;AACAA,mBAAe,CAACrI,IAAhB,GAAuB,gEAAyB;AAAEvY,UAAI,EAAE4gB,eAAR;AAAyBpI,eAAS,EAAE,CAAC,CAAC,EAAD,EAAK,iBAAL,EAAwB,EAAxB,CAAD,CAApC;AAAmEyC,YAAM,EAAE;AAAE3U,cAAM,EAAE,CAAC,iBAAD,EAAoB,QAApB;AAAV,OAA3E;AAAsH4U,aAAO,EAAE;AAAE6F,gBAAQ,EAAE;AAAZ,OAA/H;AAAyJtI,cAAQ,EAAE,CAAC,iBAAD,CAAnK;AAAwL0C,cAAQ,EAAE,CAAC,wEAAD;AAAlM,KAAzB,CAAvB;AACA;;AACAyF,mBAAe,CAAC7gB,cAAhB,GAAiC;AAAA,aAAM,CACnC;AAAEC,YAAI,EAAE;AAAR,OADmC,EAEnC;AAAEA,YAAI,EAAE;AAAR,OAFmC,EAGnC;AAAEA,YAAI,EAAEC,SAAR;AAAmBC,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAAC,wDAAD;AAAtB,SAAD;AAA/B,OAHmC,CAAN;AAAA,KAAjC;;AAKAygB,mBAAe,CAACxF,cAAhB,GAAiC;AAC7B2F,cAAQ,EAAE,CAAC;AAAE/gB,YAAI,EAAE;AAAR,OAAD;AADmB,KAAjC;AAGA;;AAAc,KAAC,YAAY;AAAE,sEAAyB4gB,eAAzB,EAA0C,CAAC;AAChE5gB,YAAI,EAAE,uDAD0D;AAEhEG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,mBADX;AAECsK,kBAAQ,EAAE,iBAFX;AAGCwC,gBAAM,EAAE,CAAC,yBAAD;AAHT,SAAD;AAF0D,OAAD,CAA1C,EAOrB,YAAY;AAAE,eAAO,CAAC;AAAEjb,cAAI,EAAE;AAAR,SAAD,EAA4C;AAAEA,cAAI,EAAE;AAAR,SAA5C,EAA+E;AAAEA,cAAI,EAAEC,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAC5HF,gBAAI,EAAE,oDADsH;AAE5HG,gBAAI,EAAE,CAAC,wDAAD;AAFsH,WAAD;AAA/B,SAA/E,CAAP;AAGF,OAVS,EAUP;AAAE4gB,gBAAQ,EAAE,CAAC;AACvB/gB,cAAI,EAAE;AADiB,SAAD;AAAZ,OAVO;AAYb,KAZF;;AAad,QAAI,KAAJ,EAAW,CA2CV;AACD;;;;;;QAIMuhB,mB;;;;;;;;;;;;MAA4BX,e;;AAElCW,uBAAmB,CAAC3hB,IAApB,GAA2B,SAAS4hB,2BAAT,CAAqC1hB,CAArC,EAAwC;AAAE,aAAO2hB,gCAAgC,CAAC3hB,CAAC,IAAIyhB,mBAAN,CAAvC;AAAoE,KAAzI;;AACAA,uBAAmB,CAAChJ,IAApB,GAA2B,gEAAyB;AAAEvY,UAAI,EAAEuhB,mBAAR;AAA6B/I,eAAS,EAAE,CAAC,CAAC,EAAD,EAAK,eAAL,EAAsB,EAAtB,CAAD,EAA4B,CAAC,EAAD,EAAK,YAAL,EAAmB,EAAnB,CAA5B,CAAxC;AAA6FyC,YAAM,EAAE;AAAE3U,cAAM,EAAE,CAAC,eAAD,EAAkB,QAAlB;AAAV,OAArG;AAA8ImS,cAAQ,EAAE,CAAC,eAAD,CAAxJ;AAA2K0C,cAAQ,EAAE,CAAC,iEAA0B,CAAC;AACrPzX,eAAO,EAAEkd,eAD4O;AAErPD,mBAAW,EAAEY;AAFwO,OAAD,CAA1B,CAAD,EAGxN,wEAHwN;AAArL,KAAzB,CAA3B;;AAIA,QAAME,gCAAgC,GAAG,oEAA6BF,mBAA7B,CAAzC;AACA;;;AAAc,KAAC,YAAY;AAAE,sEAAyBA,mBAAzB,EAA8C,CAAC;AACpEvhB,YAAI,EAAE,uDAD8D;AAEpEG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,+BADX;AAECsK,kBAAQ,EAAE,eAFX;AAGCwC,gBAAM,EAAE,CAAC,uBAAD,CAHT;AAICU,mBAAS,EAAE,CAAC;AACJjY,mBAAO,EAAEkd,eADL;AAEJD,uBAAW,EAAEY;AAFT,WAAD;AAJZ,SAAD;AAF8D,OAAD,CAA9C,EAWrB,IAXqB,EAWf,IAXe;AAWP,KAXR;;QAYRG,Y;;;;AAENA,gBAAY,CAAClG,IAAb,GAAoB,+DAAwB;AAAExb,UAAI,EAAE0hB;AAAR,KAAxB,CAApB;AACAA,gBAAY,CAACjG,IAAb,GAAoB,+DAAwB;AAAEpb,aAAO,EAAE,SAASshB,oBAAT,CAA8B7hB,CAA9B,EAAiC;AAAE,eAAO,KAAKA,CAAC,IAAI4hB,YAAV,GAAP;AAAmC;AAAjF,KAAxB,CAApB;;AACA,KAAC,YAAY;AAAE,OAAC,OAAO7F,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,iEAA0B6F,YAA1B,EAAwC;AAAE5F,oBAAY,EAAE,CAACwE,SAAD,EAClHM,eADkH,EAElHJ,uBAFkH,EAGlHe,mBAHkH,CAAhB;AAG5ExF,eAAO,EAAE,CAACuE,SAAD,EAC/BM,eAD+B,EAE/BJ,uBAF+B,EAG/Be,mBAH+B;AAHmE,OAAxC,CAAnD;AAMmB,KANlC;AAOA;;;AAAc,KAAC,YAAY;AAAE,sEAAyBG,YAAzB,EAAuC,CAAC;AAC7D1hB,YAAI,EAAE,sDADuD;AAE7DG,YAAI,EAAE,CAAC;AACC4b,iBAAO,EAAE,CAACuE,SAAD,EAAYM,eAAZ,EAA6BJ,uBAA7B,EAAsDe,mBAAtD,CADV;AAECzF,sBAAY,EAAE,CAACwE,SAAD,EAAYM,eAAZ,EAA6BJ,uBAA7B,EAAsDe,mBAAtD;AAFf,SAAD;AAFuD,OAAD,CAAvC,EAMrB,IANqB,EAMf,IANe;AAMP,KANR;AAQd;;;;;;AAKA;;;;;;;;AAOA;;;;;;;QAKMK,c;AACF;;;;AAIA,8BAAYC,eAAZ,EAA6BC,aAA7B,EAA4C;AAAA;;AACxC,aAAKD,eAAL,GAAuBA,eAAvB;AACA,aAAKC,aAAL,GAAqBA,aAArB;AACH;AACD;;;;;;;;;4BAKIxhB,K,EAAOyhB,a,EAAe;AACtB;AACA,cAAM5f,KAAK,GAAG,KAAK2f,aAAL,CAAmB9J,GAAnB,CAAuB1X,KAAvB,CAAd;;AACA,cAAI,OAAO6B,KAAP,KAAiB,WAArB,EAAkC;AAC9B,mBAAOA,KAAP;AACH;;AACD,iBAAO,KAAK0f,eAAL,CAAqB7J,GAArB,CAAyB1X,KAAzB,EAAgCyhB,aAAhC,CAAP;AACH;;;;;;AAEL,QAAI,KAAJ,EAAW,CAWV;AAED;;;;;;AAMA;;;AAMA;;;;;;;;;;;;;;;;;;ACvhCA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AASA;;;;;;;AAQA,aAASC,8BAAT,CAAwCC,EAAxC,EAA4CC,GAA5C,EAAiD;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AAC3D,mEAAoB,CAApB;AACH;AAAE;;AACH,QAAME,GAAG,GAAG,CAAC,GAAD,CAAZ;;QACMC,a;AACF;;;AAGA,6BAAYC,WAAZ,EAAyB;AAAA;;AACrB,aAAKA,WAAL,GAAmBA,WAAnB;AACH;AACD;;;;;;;;gCAIQ;AACJ,eAAKA,WAAL,CAAiBvP,aAAjB,CAA+BwP,KAA/B;AACH;;;;;;AAELF,iBAAa,CAACxiB,IAAd,GAAqB,SAAS2iB,qBAAT,CAA+BziB,CAA/B,EAAkC;AAAE,aAAO,KAAKA,CAAC,IAAIsiB,aAAV,EAAyB,gEAAyB,wDAAzB,CAAzB,CAAP;AAA+E,KAAxI;;AACAA,iBAAa,CAAC7J,IAAd,GAAqB,gEAAyB;AAAEvY,UAAI,EAAEoiB,aAAR;AAAuB5J,eAAS,EAAE,CAAC,CAAC,EAAD,EAAK,eAAL,EAAsB,EAAtB,CAAD,CAAlC;AAA+DgK,eAAS,EAAE,CAAC,MAAD,EAAS,KAAT;AAA1E,KAAzB,CAArB;AACA;;AACAJ,iBAAa,CAACriB,cAAd,GAA+B;AAAA,aAAM,CACjC;AAAEC,YAAI,EAAE;AAAR,OADiC,CAAN;AAAA,KAA/B;AAGA;;;AAAc,KAAC,YAAY;AAAE,sEAAyBoiB,aAAzB,EAAwC,CAAC;AAC9DpiB,YAAI,EAAE,uDADwD;AAE9DG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,iBADX;AAECoJ,cAAI,EAAE;AACF,oBAAQ;AADN;AAFP,SAAD;AAFwD,OAAD,CAAxC,EAQrB,YAAY;AAAE,eAAO,CAAC;AAAEvX,cAAI,EAAE;AAAR,SAAD,CAAP;AAAuC,OARhC,EAQkC,IARlC;AAQ0C,KARzD;;AASd,QAAI,KAAJ,EAAW,CAMV;AAED;;;;;;;QAKMyiB,Y;AACF;;;AAGA;AAAY;AAAqBxE,YAAjC,EAA2C;AAAA;;AACvC,WAAKA,QAAL,GAAgBA,QAAhB;AACH,K;;AAELwE,gBAAY,CAAC7iB,IAAb,GAAoB,SAAS8iB,oBAAT,CAA8B5iB,CAA9B,EAAiC;AAAE,aAAO,KAAKA,CAAC,IAAI2iB,YAAV,EAAwB,gEAAyB,yDAAzB,CAAxB,CAAP;AAA+E,KAAtI;;AACAA,gBAAY,CAAClK,IAAb,GAAoB,gEAAyB;AAAEvY,UAAI,EAAEyiB,YAAR;AAAsBjK,eAAS,EAAE,CAAC,CAAC,EAAD,EAAK,cAAL,EAAqB,EAArB,CAAD;AAAjC,KAAzB,CAApB;AACA;;AACAiK,gBAAY,CAAC1iB,cAAb,GAA8B;AAAA,aAAM,CAChC;AAAEC,YAAI,EAAE;AAAR,OADgC,CAAN;AAAA,KAA9B;AAGA;;;AAAc,KAAC,YAAY;AAAE,sEAAyByiB,YAAzB,EAAuC,CAAC;AAC7DziB,YAAI,EAAE,uDADuD;AAE7DG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE;AADX,SAAD;AAFuD,OAAD,CAAvC,EAKrB,YAAY;AAAE,eAAO,CAAC;AAAEnO,cAAI,EAAE;AAAR,SAAD,CAAP;AAAwC,OALjC,EAKmC,IALnC;AAK2C,KAL1D;;AAMd,QAAI,KAAJ,EAAW,CAMV;AAED;;;;;;AAKA;;;;;;AAIA,QAAI2iB,MAAM,GAAG,CAAb;AACA;;;;QAGMC,qB;;;;AAEN,QAAI,KAAJ,EAAW,CAqBV;AACD;;;;;;AAIA,QAAMC,UAAU,GAAG;AACfC,YAAM,EAAE,QADO;AAEfC,UAAI,EAAE,MAFS;AAGfC,UAAI,EAAE,MAHS;AAIfC,WAAK,EAAE;AAJQ,KAAnB;AAMA;;;;;AAIA,QAAMC,sBAAsB,GAAG,IAAI,4DAAJ,CAAmB,wBAAnB,CAA/B;AACA;;;;;;;AAMA,QAAMC,0BAA0B,GAAGD,sBAAnC;AACA;;;;;AAIA,aAASE,cAAT,GAA0B,CAAG;;AAC7B,QAAI,KAAJ,EAAW,CAcV;;QACKC,O;AACF;;;;;AAKA,uBAAYC,QAAZ,EAAsBC,cAAtB,EAAsC;AAAA;;AAClC,aAAKD,QAAL,GAAgBA,QAAhB;AACA;;;;AAGA,aAAKE,UAAL,GAAkB,KAAlB;AACA,aAAKC,SAAL,GAAiB,IAAjB;AACA,aAAKC,SAAL,GAAiB,KAAjB;AACA,aAAKC,kBAAL,GAA0B,IAA1B;AACA,aAAKC,YAAL,GAAoB,IAApB;AACA,aAAKC,eAAL,GAAuBN,cAAc,GAAGA,cAAH,GAAoB,EAAzD;AACA,aAAKO,4BAAL,GAAoC,KAAKD,eAAL,CAAqBE,2BAArB,KAAqD,KAAzF;AACA,aAAKC,UAAL,GAAkB,CAAC,CAAC,KAAKH,eAAL,CAAqBI,SAAzC;AACH;AACD;;;;;;;;;AA0CA;;;;+CAIuB;AACnB,iBAAO,KAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,KAAjB,IAA0B,KAAKX,UAAlD,GAA+D,KAAKA,UAA3E;AACH;AACD;;;;;;;;AAcA;;;;2CAImB;AACf,iBAAO,KAAKU,WAAL,IAAoB,KAAKA,WAAL,CAAiBE,OAArC,IAAgD,KAAKZ,UAA5D;AACH;AACD;;;;;;;iCAIS;AACL,eAAKF,QAAL,CAAce,QAAd,GAAyB,IAAzB;AACH;AACD;;;;;;;gCAIQ;AACJ,eAAKb,UAAL,GAAkB,KAAlB;;AACA,cAAI,KAAKG,kBAAL,IAA2B,IAA/B,EAAqC;AACjC,iBAAKA,kBAAL,GAA0B,KAA1B;AACH;;AACD,cAAI,KAAKC,YAAL,IAAqB,IAAzB,EAA+B;AAC3B,iBAAKA,YAAL,GAAoB,KAApB;AACH;;AACD,cAAI,KAAKM,WAAT,EAAsB;AAClB,iBAAKA,WAAL,CAAiBI,KAAjB;AACH;AACJ;AACD;;;;;;sCAGc;AACV;AACA;AACA,eAAKhB,QAAL,CAAciB,aAAd;AACH;;;4BAhGc;AACX,iBAAO,KAAKd,SAAZ;AACH;AACD;;;;;0BAIathB,K,EAAO;AAChB,eAAKshB,SAAL,GAAiB,oFAAsBthB,KAAtB,CAAjB;AACH;AACD;;;;;;;4BAIe;AACX,iBAAO,KAAKuhB,SAAZ;AACH;AACD;;;;;0BAIavhB,K,EAAO;AAChB,eAAKuhB,SAAL,GAAiB,oFAAsBvhB,KAAtB,CAAjB;AACH;AACD;;;;;;;4BAIgB;AACZ,iBAAO,KAAKwhB,kBAAL,IAA2B,IAA3B,GAAkC,KAAKa,oBAAL,EAAlC,GAAgE,KAAKb,kBAA5E;AACH;AACD;;;;;0BAIcxhB,K,EAAO;AACjB,eAAKwhB,kBAAL,GAA0B,oFAAsBxhB,KAAtB,CAA1B;AACH;;;4BAYc;AACX,iBAAO,KAAKyhB,YAAL,IAAqB,IAArB,GAA4B,KAAKa,gBAAL,EAA5B,GAAsD,KAAKb,YAAlE;AACH;AACD;;;;;0BAIazhB,K,EAAO;AAChB,eAAKyhB,YAAL,GAAoB,oFAAsBzhB,KAAtB,CAApB;AACH;;;;;;AAwCLkhB,WAAO,CAACzjB,IAAR,GAAe,SAAS8kB,eAAT,CAAyB5kB,CAAzB,EAA4B;AAAE,aAAO,KAAKA,CAAC,IAAIujB,OAAV,EAAmB,gEAAyB;AAAa;;;AAE1F;AAAA,eAAMsB,UAAN;AAAA,OAF6E,CAAzB,CAAnB,EAEZ,gEAAyBzB,sBAAzB,EAAiD,CAAjD,CAFY,CAAP;AAEkD,KAF/F;;AAGAG,WAAO,CAACuB,IAAR,GAAe,gEAAyB;AAAE5kB,UAAI,EAAEqjB,OAAR;AAAiB7K,eAAS,EAAE,CAAC,CAAC,UAAD,CAAD,CAA5B;AAA4CqM,oBAAc,EAAE,SAASC,sBAAT,CAAgC7C,EAAhC,EAAoCC,GAApC,EAAyC6C,QAAzC,EAAmD;AAAE,YAAI9C,EAAE,GAAG,CAAT,EAAY;AAC7J,uEAAsB8C,QAAtB,EAAgCtC,YAAhC,EAA8C,IAA9C;AACH;;AAAC,YAAIR,EAAE,GAAG,CAAT,EAAY;AACV,cAAI+C,EAAJ;;AACA,uEAAsBA,EAAE,GAAG,2DAA3B,MAAqD9C,GAAG,CAAC+C,SAAJ,GAAgBD,EAAE,CAACE,KAAxE;AACH;AAAE,OALiC;AAK/BC,eAAS,EAAE,SAASC,aAAT,CAAuBnD,EAAvB,EAA2BC,GAA3B,EAAgC;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAC1D,0EAAyB,yDAAzB,EAAsC,IAAtC;AACH;;AAAC,YAAIA,EAAE,GAAG,CAAT,EAAY;AACV,cAAI+C,EAAJ;;AACA,uEAAsBA,EAAE,GAAG,2DAA3B,MAAqD9C,GAAG,CAACmD,OAAJ,GAAcL,EAAE,CAACE,KAAtE;AACH;AAAE,OAViC;AAU/BjK,YAAM,EAAE;AAAEqK,gBAAQ,EAAE,UAAZ;AAAwBC,gBAAQ,EAAE,UAAlC;AAA8CC,iBAAS,EAAE,WAAzD;AAAsEC,gBAAQ,EAAE,UAAhF;AAA4FvB,mBAAW,EAAE,aAAzG;AAAwHwB,aAAK,EAAE,OAA/H;AAAwIC,oBAAY,EAAE,cAAtJ;AAAsKC,iBAAS,EAAE,CAAC,YAAD,EAAe,WAAf,CAAjL;AAA8MC,sBAAc,EAAE,CAAC,iBAAD,EAAoB,gBAApB,CAA9N;AAAqQC,aAAK,EAAE;AAA5Q,OAVuB;AAUgQrN,cAAQ,EAAE,CAAC,SAAD,CAV1Q;AAUuR0C,cAAQ,EAAE,CAAC,kEAAD,CAVjS;AAUgU4K,wBAAkB,EAAE5D,GAVpV;AAUyV6D,WAAK,EAAE,CAVhW;AAUmWC,UAAI,EAAE,CAVzW;AAU4WhI,cAAQ,EAAE,SAASiI,gBAAT,CAA0BjE,EAA1B,EAA8BC,GAA9B,EAAmC;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACvc;;AACA,mEAAkB,CAAlB,EAAqBD,8BAArB,EAAqD,CAArD,EAAwD,CAAxD,EAA2D,aAA3D;AACH;AAAE,OAbiC;AAa/BmE,mBAAa,EAAE,CAbgB;AAabC,qBAAe,EAAE;AAbJ,KAAzB,CAAf;AAcA;;AACA/C,WAAO,CAACtjB,cAAR,GAAyB;AAAA,aAAM,CAC3B;AAAEC,YAAI,EAAE2kB,UAAR;AAAoBzkB,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAAC;AAAY;;;AAGpD;AAAA,mBAAMwkB,UAAN;AAAA,WAHwC,CAAD;AAAtB,SAAD;AAAhC,OAD2B,EAK3B;AAAE3kB,YAAI,EAAEC,SAAR;AAAmBC,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD,EAAqB;AAAEA,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAAC+iB,sBAAD;AAAtB,SAArB;AAA/B,OAL2B,CAAN;AAAA,KAAzB;;AAOAG,WAAO,CAACjI,cAAR,GAAyB;AACrB6J,eAAS,EAAE,CAAC;AAAEjlB,YAAI,EAAE,0DAAR;AAAsBG,YAAI,EAAE,CAACsiB,YAAD;AAA5B,OAAD,CADU;AAErB4C,aAAO,EAAE,CAAC;AAAErlB,YAAI,EAAE,uDAAR;AAAmBG,YAAI,EAAE,CAAC,yDAAD,EAAc;AAAE,oBAAQ;AAAV,SAAd;AAAzB,OAAD,CAFY;AAGrB+jB,iBAAW,EAAE,CAAC;AAAElkB,YAAI,EAAE;AAAR,OAAD,CAHQ;AAIrB0lB,WAAK,EAAE,CAAC;AAAE1lB,YAAI,EAAE;AAAR,OAAD,CAJc;AAKrB2lB,kBAAY,EAAE,CAAC;AAAE3lB,YAAI,EAAE;AAAR,OAAD,CALO;AAMrB4lB,eAAS,EAAE,CAAC;AAAE5lB,YAAI,EAAE,mDAAR;AAAeG,YAAI,EAAE,CAAC,YAAD;AAArB,OAAD,CANU;AAOrB0lB,oBAAc,EAAE,CAAC;AAAE7lB,YAAI,EAAE,mDAAR;AAAeG,YAAI,EAAE,CAAC,iBAAD;AAArB,OAAD,CAPK;AAQrB2lB,WAAK,EAAE,CAAC;AAAE9lB,YAAI,EAAE;AAAR,OAAD,CARc;AASrBslB,cAAQ,EAAE,CAAC;AAAEtlB,YAAI,EAAE;AAAR,OAAD,CATW;AAUrBulB,cAAQ,EAAE,CAAC;AAAEvlB,YAAI,EAAE;AAAR,OAAD,CAVW;AAWrBwlB,eAAS,EAAE,CAAC;AAAExlB,YAAI,EAAE;AAAR,OAAD,CAXU;AAYrBylB,cAAQ,EAAE,CAAC;AAAEzlB,YAAI,EAAE;AAAR,OAAD;AAZW,KAAzB;AAcA;;AAAc,KAAC,YAAY;AAAE,sEAAyBqjB,OAAzB,EAAkC,CAAC;AACxDrjB,YAAI,EAAE,uDADkD;AAExDG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,UADX;AAECsK,kBAAQ,EAAE,SAFX;AAGCwF,kBAAQ,EAAE,sDAHX;AAICkI,uBAAa,EAAE,gEAAkBE,IAJlC;AAKCD,yBAAe,EAAE,sEAAwBE;AAL1C,SAAD;AAFkD,OAAD,CAAlC,EASrB,YAAY;AAAE,eAAO,CAAC;AAAEtmB,cAAI,EAAE2kB,UAAR;AAAoBzkB,oBAAU,EAAE,CAAC;AAC/CF,gBAAI,EAAE,oDADyC;AAE/CG,gBAAI,EAAE,CAAC;AAAa;;;AAEG;AAAA,qBAAMwkB,UAAN;AAAA,aAFhB,CAAD;AAFyC,WAAD;AAAhC,SAAD,EAKX;AAAE3kB,cAAI,EAAEC,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAClCF,gBAAI,EAAE;AAD4B,WAAD,EAElC;AACCA,gBAAI,EAAE,oDADP;AAECG,gBAAI,EAAE,CAAC+iB,sBAAD;AAFP,WAFkC;AAA/B,SALW,CAAP;AAUF,OAnBS,EAmBP;AAAEoC,gBAAQ,EAAE,CAAC;AACvBtlB,cAAI,EAAE;AADiB,SAAD,CAAZ;AAEVulB,gBAAQ,EAAE,CAAC;AACXvlB,cAAI,EAAE;AADK,SAAD,CAFA;AAIVwlB,iBAAS,EAAE,CAAC;AACZxlB,cAAI,EAAE;AADM,SAAD,CAJD;AAMVylB,gBAAQ,EAAE,CAAC;AACXzlB,cAAI,EAAE;AADK,SAAD,CANA;AAQVilB,iBAAS,EAAE,CAAC;AACZjlB,cAAI,EAAE,0DADM;AAEZG,cAAI,EAAE,CAACsiB,YAAD;AAFM,SAAD,CARD;AAWV4C,eAAO,EAAE,CAAC;AACVrlB,cAAI,EAAE,uDADI;AAEVG,cAAI,EAAE,CAAC,yDAAD,EAAc;AAAE,sBAAQ;AAAV,WAAd;AAFI,SAAD,CAXC;AAcV+jB,mBAAW,EAAE,CAAC;AACdlkB,cAAI,EAAE;AADQ,SAAD,CAdH;AAgBV0lB,aAAK,EAAE,CAAC;AACR1lB,cAAI,EAAE;AADE,SAAD,CAhBG;AAkBV2lB,oBAAY,EAAE,CAAC;AACf3lB,cAAI,EAAE;AADS,SAAD,CAlBJ;AAoBV4lB,iBAAS,EAAE,CAAC;AACZ5lB,cAAI,EAAE,mDADM;AAEZG,cAAI,EAAE,CAAC,YAAD;AAFM,SAAD,CApBD;AAuBV0lB,sBAAc,EAAE,CAAC;AACjB7lB,cAAI,EAAE,mDADW;AAEjBG,cAAI,EAAE,CAAC,iBAAD;AAFW,SAAD,CAvBN;AA0BV2lB,aAAK,EAAE,CAAC;AACR9lB,cAAI,EAAE;AADE,SAAD;AA1BG,OAnBO;AA+Cb,KA/CF;;AAgDd,QAAI,KAAJ,EAAW,CAsFV;;QACK2kB,U;AACF;;;;;;AAMA,0BAAY5L,IAAZ,EAAkBwN,kBAAlB,EAAsClE,WAAtC,EAAmD9nB,SAAnD,EAA8D;AAAA;;AAC1D,aAAKwe,IAAL,GAAYA,IAAZ;AACA,aAAKwN,kBAAL,GAA0BA,kBAA1B;AACA,aAAKlE,WAAL,GAAmBA,WAAnB;AACA;;;;AAGA,aAAKmE,UAAL,GAAkB,IAAI,4CAAJ,EAAlB;AACA,aAAKC,OAAL,GAAe,KAAf;AACA,aAAKC,cAAL,GAAsB,CAAtB;AACA;;;;AAGA,aAAKC,eAAL,GAAuB,IAAI,0DAAJ,EAAvB;AACA,aAAKC,YAAL,GAAoB,YAApB;AACA,aAAKC,QAAL,GAAgBlE,MAAM,EAAtB;AACA,aAAKpoB,SAAL,GAAiBA,SAAjB;AACH;AACD;;;;;;;;;AAgEA;;;0CAGkB;AAAA;;AACd;AACA;AACA;AACA,eAAKusB,WAAL,GAAmB,IAAI,iEAAJ,CAAoB,KAAKC,WAAzB,EACdC,QADc,GAEdC,uBAFc,CAEU,KAAKL,YAAL,KAAsB,UAFhC,CAAnB;AAGA,WAAC,KAAK7N,IAAL;AAAc;AAAkB,eAAKA,IAAL,CAAU3N,MAA1C,GAAsD,iDAAvD,EACKpE,IADL,CACU,iEAAU,KAAKkgB,gBAAL,EAAV,CADV,EAC8C,iEAAU,KAAKV,UAAf,CAD9C,EAEKnpB,SAFL;AAEgB;;;;AAIhB,oBAAA2K,SAAS;AAAA,mBAAI,OAAI,CAAC8e,WAAL,CAAiBK,yBAAjB,CAA2Cnf,SAA3C,CAAJ;AAAA,WANT;;AAOA,eAAK8e,WAAL,CAAiBM,gBAAjB,CAAkC,KAAKV,cAAvC;;AACA,eAAKW,KAAL,CAAWzN,OAAX,CAAmB5S,IAAnB,CAAwB,iEAAU,KAAKwf,UAAf,CAAxB,EAAoDnpB,SAApD;AAA+D;;;AAG/D,sBAAM;AACF,gBAAI,CAAC,OAAI,CAACgnB,QAAV,EAAoB;AAChB,qBAAI,CAACqC,cAAL,GAAsBnpB,IAAI,CAACwS,GAAL,CAAS,OAAI,CAAC2W,cAAL,GAAsB,CAA/B,EAAkC,CAAlC,CAAtB;AACH;AACJ,WAPD;AAQH;AACD;;;;;;sCAGc;AACV,eAAKF,UAAL,CAAgB1jB,IAAhB;;AACA,eAAK0jB,UAAL,CAAgB9e,QAAhB;AACH;AACD;;;;;;;+BAIO;AACH,eAAK4f,aAAL,GAAqB/pB,IAAI,CAAC2T,GAAL,CAAS,KAAKwV,cAAL,GAAsB,CAA/B,EAAkC,KAAKW,KAAL,CAAW1kB,MAAX,GAAoB,CAAtD,CAArB;AACH;AACD;;;;;;;mCAIW;AACP,eAAK2kB,aAAL,GAAqB/pB,IAAI,CAACwS,GAAL,CAAS,KAAK2W,cAAL,GAAsB,CAA/B,EAAkC,CAAlC,CAArB;AACH;AACD;;;;;;;gCAIQ;AACJ,eAAKa,wBAAL,CAA8B,CAA9B;;AACA,eAAKF,KAAL,CAAWhe,OAAX;AAAoB;;;;AAIpB,oBAAAme,IAAI;AAAA,mBAAIA,IAAI,CAAClD,KAAL,EAAJ;AAAA,WAJJ;;AAKA,eAAKC,aAAL;AACH;AACD;;;;;;;;wCAKgB7hB,C,EAAG;AACf,0CAAyB,KAAKmkB,QAA9B,cAA0CnkB,CAA1C;AACH;AACD;;;;;;;;0CAKkBA,C,EAAG;AACjB,4CAA2B,KAAKmkB,QAAhC,cAA4CnkB,CAA5C;AACH;AACD;;;;;;;wCAIgB;AACZ,eAAK6jB,kBAAL,CAAwBkB,YAAxB;AACH;AACD;;;;;;;;+CAKuBvkB,K,EAAO;AAC1B;AACA,cAAM0J,QAAQ,GAAG1J,KAAK,GAAG,KAAKwjB,cAA9B;;AACA,cAAI9Z,QAAQ,GAAG,CAAf,EAAkB;AACd,mBAAO,KAAKsa,gBAAL,OAA4B,KAA5B,GAAoC,MAApC,GAA6C,UAApD;AACH,WAFD,MAGK,IAAIta,QAAQ,GAAG,CAAf,EAAkB;AACnB,mBAAO,KAAKsa,gBAAL,OAA4B,KAA5B,GAAoC,UAApC,GAAiD,MAAxD;AACH;;AACD,iBAAO,SAAP;AACH;AACD;;;;;;;;;0CAMkBhkB,K,EAAkC;AAAA,cAA3B4iB,KAA2B,uEAAnBjD,UAAU,CAACC,MAAQ;;AAChD;AACA,cAAM0E,IAAI,GAAG,KAAKH,KAAL,CAAWK,OAAX,GAAqBxkB,KAArB,CAAb;AACA;;AACA,cAAMykB,aAAa,GAAG,KAAKC,cAAL,CAAoB1kB,KAApB,CAAtB;;AACA,iBAAOskB,IAAI,CAAC1D,4BAAL,GAAoC,KAAK+D,yBAAL,CAA+BL,IAA/B,EAAqCG,aAArC,CAApC,GACH,KAAKG,kBAAL,CAAwBN,IAAxB,EAA8BG,aAA9B,EAA6C7B,KAA7C,CADJ;AAEH;AACD;;;;;;;;;kDAM0B0B,I,EAAMG,a,EAAe;AAC3C,cAAIH,IAAI,CAACxD,UAAL,IAAmBwD,IAAI,CAAC/B,QAAxB,IAAoC,CAACkC,aAAzC,EAAwD;AACpD,mBAAO9E,UAAU,CAACI,KAAlB;AACH,WAFD,MAGK,IAAI,CAACuE,IAAI,CAAChC,SAAN,IAAmBmC,aAAvB,EAAsC;AACvC,mBAAO9E,UAAU,CAACC,MAAlB;AACH,WAFI,MAGA;AACD,mBAAO0E,IAAI,CAAClC,QAAL,GAAgBzC,UAAU,CAACE,IAA3B,GAAkCF,UAAU,CAACG,IAApD;AACH;AACJ;AACD;;;;;;;;;;2CAOmBwE,I,EAAMG,a,EAA0C;AAAA,cAA3B7B,KAA2B,uEAAnBjD,UAAU,CAACC,MAAQ;;AAC/D,cAAI0E,IAAI,CAACxD,UAAL,IAAmBwD,IAAI,CAAC/B,QAAxB,IAAoC,CAACkC,aAAzC,EAAwD;AACpD,mBAAO9E,UAAU,CAACI,KAAlB;AACH,WAFD,MAGK,IAAIuE,IAAI,CAAChC,SAAL,IAAkB,CAACmC,aAAvB,EAAsC;AACvC,mBAAO9E,UAAU,CAACG,IAAlB;AACH,WAFI,MAGA,IAAIwE,IAAI,CAAChC,SAAL,IAAkBmC,aAAtB,EAAqC;AACtC,mBAAO7B,KAAP;AACH,WAFI,MAGA,IAAI0B,IAAI,CAAClC,QAAL,IAAiBqC,aAArB,EAAoC;AACrC,mBAAO9E,UAAU,CAACE,IAAlB;AACH,WAFI,MAGA;AACD,mBAAO+C,KAAP;AACH;AACJ;AACD;;;;;;;;uCAKe5iB,K,EAAO;AAClB,iBAAO,KAAKwjB,cAAL,KAAwBxjB,KAA/B;AACH;AACD;;;;;;;yCAIiB;AACb,iBAAO,KAAK4jB,WAAL,GAAmB,KAAKA,WAAL,CAAiBiB,eAApC,GAAsD,KAAKrB,cAAlE;AACH;AACD;;;;;;;;iDAKyBsB,Q,EAAU;AAC/B;AACA,cAAMC,UAAU,GAAG,KAAKZ,KAAL,CAAWK,OAAX,EAAnB;AACA,eAAKf,eAAL,CAAqB7L,IAArB,CAA0B;AACtBwM,yBAAa,EAAEU,QADO;AAEtBE,mCAAuB,EAAE,KAAKxB,cAFR;AAGtByB,wBAAY,EAAEF,UAAU,CAACD,QAAD,CAHF;AAItBI,kCAAsB,EAAEH,UAAU,CAAC,KAAKvB,cAAN;AAJZ,WAA1B,EAH+B,CAS/B;AACA;AACA;AACA;;AACA,eAAK2B,cAAL,KAAwB,KAAKvB,WAAL,CAAiBwB,aAAjB,CAA+BN,QAA/B,CAAxB,GACI,KAAKlB,WAAL,CAAiBM,gBAAjB,CAAkCY,QAAlC,CADJ;AAEA,eAAKtB,cAAL,GAAsBsB,QAAtB;;AACA,eAAKzD,aAAL;AACH;AACD;;;;;;;mCAIW/hB,K,EAAO;AACd;AACA,cAAM+lB,WAAW,GAAG,6EAAe/lB,KAAf,CAApB;AACA;;AACA,cAAM4X,OAAO,GAAG5X,KAAK,CAAC4X,OAAtB;AACA;;AACA,cAAMoO,OAAO,GAAG,KAAK1B,WAArB;;AACA,cAAI0B,OAAO,CAACT,eAAR,IAA2B,IAA3B,IAAmC,CAACQ,WAApC,KACCnO,OAAO,KAAK,2DAAZ,IAAqBA,OAAO,KAAK,2DADlC,CAAJ,EAC8C;AAC1C,iBAAKkN,aAAL,GAAqBkB,OAAO,CAACT,eAA7B;AACAvlB,iBAAK,CAAC6X,cAAN;AACH,WAJD,MAKK,IAAID,OAAO,KAAK,0DAAhB,EAAsB;AACvBoO,mBAAO,CAACC,kBAAR;AACAjmB,iBAAK,CAAC6X,cAAN;AACH,WAHI,MAIA,IAAID,OAAO,KAAK,yDAAhB,EAAqB;AACtBoO,mBAAO,CAACE,iBAAR;AACAlmB,iBAAK,CAAC6X,cAAN;AACH,WAHI,MAIA;AACDmO,mBAAO,CAACG,SAAR,CAAkBnmB,KAAlB;AACH;AACJ;AACD;;;;;;;;qDAK6BU,K,EAAO;AAChC;AACA,cAAMmkB,KAAK,GAAG,KAAKA,KAAL,CAAWK,OAAX,EAAd;AACAL,eAAK,CAAC,KAAKX,cAAN,CAAL,CAA2BlD,UAA3B,GAAwC,IAAxC;;AACA,cAAI,KAAKiD,OAAL,IAAgBvjB,KAAK,IAAI,CAA7B,EAAgC;AAC5B,mBAAOmkB,KAAK,CAAC7R,KAAN,CAAY,CAAZ,EAAetS,KAAf,EAAsBnF,IAAtB;AAA4B;;;;AAInC,sBAAAypB,IAAI,EAAI;AACJ;AACA,kBAAMoB,OAAO,GAAGpB,IAAI,CAACtD,WAArB;AACA;;AACA,kBAAM2E,YAAY,GAAGD,OAAO,GAAIA,OAAO,CAACxE,OAAR,IAAmBwE,OAAO,CAACE,OAA3B,IAAsC,CAACtB,IAAI,CAAChE,UAAhD,GAA8D,CAACgE,IAAI,CAAChC,SAAhG;AACA,qBAAOqD,YAAY,IAAI,CAACrB,IAAI,CAACjC,QAAtB,IAAkC,CAACiC,IAAI,CAAC7D,kBAA/C;AACH,aAVM,CAAP;AAWH;;AACD,iBAAO,KAAP;AACH;AACD;;;;;;;2CAImB;AACf,iBAAO,KAAK5K,IAAL,IAAa,KAAKA,IAAL,CAAU5W,KAAV,KAAoB,KAAjC,GAAyC,KAAzC,GAAiD,KAAxD;AACH;AACD;;;;;;;;yCAKiB;AACb,cAAI,CAAC,KAAK5H,SAAN,IAAmB,CAAC,KAAK8nB,WAA7B,EAA0C;AACtC,mBAAO,KAAP;AACH;AACD;;;AACA,cAAM0G,cAAc,GAAG,KAAK1G,WAAL,CAAiBvP,aAAxC;AACA;;AACA,cAAMkW,cAAc,GAAG,KAAKzuB,SAAL,CAAe0uB,aAAtC;AACA,iBAAOF,cAAc,KAAKC,cAAnB,IAAqCD,cAAc,CAACrtB,QAAf,CAAwBstB,cAAxB,CAA5C;AACH;;;4BAtUW;AACR,iBAAO,KAAKE,MAAZ;AACH;AACD;;;;;;;4BAIa;AACT,iBAAO,KAAKzC,OAAZ;AACH;AACD;;;;;0BAIWtkB,K,EAAO;AACd,eAAKskB,OAAL,GAAe,oFAAsBtkB,KAAtB,CAAf;AACH;AACD;;;;;;;4BAIoB;AAChB,iBAAO,KAAKukB,cAAZ;AACH;AACD;;;;;0BAIkBxjB,K,EAAO;AACrB;AACA,cAAM8kB,QAAQ,GAAG,mFAAqB9kB,KAArB,CAAjB;;AACA,cAAI,KAAKmkB,KAAT,EAAgB;AACZ;AACA,gBAAIW,QAAQ,GAAG,CAAX,IAAgBA,QAAQ,GAAG,KAAKX,KAAL,CAAW1kB,MAAX,GAAoB,CAAnD,EAAsD;AAClD,oBAAMxG,KAAK,CAAC,mEAAD,CAAX;AACH;;AACD,gBAAI,KAAKuqB,cAAL,IAAuBsB,QAAvB,IAAmC,CAAC,KAAKmB,4BAAL,CAAkCnB,QAAlC,CAApC,KACCA,QAAQ,IAAI,KAAKtB,cAAjB,IAAmC,KAAKW,KAAL,CAAWK,OAAX,GAAqBM,QAArB,EAA+B1C,QADnE,CAAJ,EACkF;AAC9E,mBAAKiC,wBAAL,CAA8BrkB,KAA9B;AACH;AACJ,WATD,MAUK;AACD,iBAAKwjB,cAAL,GAAsBsB,QAAtB;AACH;AACJ;AACD;;;;;;;4BAIe;AACX;AACA,iBAAO,KAAKX,KAAL,GAAa,KAAKA,KAAL,CAAWK,OAAX,GAAqB,KAAKJ,aAA1B,CAAb;AAAyD;AAAkBrnB,mBAAlF;AACH;AACD;;;;;0BAIaunB,I,EAAM;AACf,eAAKF,aAAL,GAAqB,KAAKD,KAAL,GAAa,KAAKA,KAAL,CAAWK,OAAX,GAAqBvkB,OAArB,CAA6BqkB,IAA7B,CAAb,GAAkD,CAAC,CAAxE;AACH;;;;;;AA6QL7C,cAAU,CAAC/kB,IAAX,GAAkB,SAASwpB,kBAAT,CAA4BtpB,CAA5B,EAA+B;AAAE,aAAO,KAAKA,CAAC,IAAI6kB,UAAV,EAAsB,gEAAyB,gEAAzB,EAAgD,CAAhD,CAAtB,EAA0E,gEAAyB,+DAAzB,CAA1E,EAA8H,gEAAyB,wDAAzB,CAA9H,EAA2K,gEAAyB,wDAAzB,CAA3K,CAAP;AAAwN,KAA3Q;;AACAA,cAAU,CAACpM,IAAX,GAAkB,gEAAyB;AAAEvY,UAAI,EAAE2kB,UAAR;AAAoBnM,eAAS,EAAE,CAAC,CAAC,EAAD,EAAK,YAAL,EAAmB,EAAnB,CAAD,CAA/B;AAAyDqM,oBAAc,EAAE,SAASwE,yBAAT,CAAmCpH,EAAnC,EAAuCC,GAAvC,EAA4C6C,QAA5C,EAAsD;AAAE,YAAI9C,EAAE,GAAG,CAAT,EAAY;AAChL,uEAAsB8C,QAAtB,EAAgC1B,OAAhC,EAAyC,IAAzC;;AACA,uEAAsB0B,QAAtB,EAAgC3C,aAAhC,EAA+C,IAA/C;AACH;;AAAC,YAAIH,EAAE,GAAG,CAAT,EAAY;AACV,cAAI+C,EAAJ;;AACA,uEAAsBA,EAAE,GAAG,2DAA3B,MAAqD9C,GAAG,CAACgH,MAAJ,GAAalE,EAAlE;AACA,uEAAsBA,EAAE,GAAG,2DAA3B,MAAqD9C,GAAG,CAAC6E,WAAJ,GAAkB/B,EAAvE;AACH;AAAE,OAPoC;AAOlC/J,YAAM,EAAE;AAAEqO,cAAM,EAAE,QAAV;AAAoBhC,qBAAa,EAAE,eAAnC;AAAoDjD,gBAAQ,EAAE;AAA9D,OAP0B;AAOkDnJ,aAAO,EAAE;AAAEyL,uBAAe,EAAE;AAAnB,OAP3D;AAOmGlO,cAAQ,EAAE,CAAC,YAAD;AAP7G,KAAzB,CAAlB;AAQA;;AACAkM,cAAU,CAAC5kB,cAAX,GAA4B;AAAA,aAAM,CAC9B;AAAEC,YAAI,EAAE,gEAAR;AAAwBE,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD;AAApC,OAD8B,EAE9B;AAAEA,YAAI,EAAE;AAAR,OAF8B,EAG9B;AAAEA,YAAI,EAAE;AAAR,OAH8B,EAI9B;AAAEA,YAAI,EAAEC,SAAR;AAAmBC,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAAC,wDAAD;AAAtB,SAAD;AAA/B,OAJ8B,CAAN;AAAA,KAA5B;;AAMAwkB,cAAU,CAACvJ,cAAX,GAA4B;AACxB8N,YAAM,EAAE,CAAC;AAAElpB,YAAI,EAAE,6DAAR;AAAyBG,YAAI,EAAE,CAACkjB,OAAD,EAAU;AAAEkG,qBAAW,EAAE;AAAf,SAAV;AAA/B,OAAD,CADgB;AAExBxC,iBAAW,EAAE,CAAC;AAAE/mB,YAAI,EAAE,6DAAR;AAAyBG,YAAI,EAAE,CAACiiB,aAAD,EAAgB;AAAEmH,qBAAW,EAAE;AAAf,SAAhB;AAA/B,OAAD,CAFW;AAGxBD,YAAM,EAAE,CAAC;AAAEtpB,YAAI,EAAE;AAAR,OAAD,CAHgB;AAIxBsnB,mBAAa,EAAE,CAAC;AAAEtnB,YAAI,EAAE;AAAR,OAAD,CAJS;AAKxBqkB,cAAQ,EAAE,CAAC;AAAErkB,YAAI,EAAE;AAAR,OAAD,CALc;AAMxB2mB,qBAAe,EAAE,CAAC;AAAE3mB,YAAI,EAAE;AAAR,OAAD;AANO,KAA5B;AAQA;;AAAc,KAAC,YAAY;AAAE,sEAAyB2kB,UAAzB,EAAqC,CAAC;AAC3D3kB,YAAI,EAAE,uDADqD;AAE3DG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,cADX;AAECsK,kBAAQ,EAAE;AAFX,SAAD;AAFqD,OAAD,CAArC,EAMrB,YAAY;AAAE,eAAO,CAAC;AAAEzY,cAAI,EAAE,gEAAR;AAA+BE,oBAAU,EAAE,CAAC;AAC1DF,gBAAI,EAAE;AADoD,WAAD;AAA3C,SAAD,EAEX;AAAEA,cAAI,EAAE;AAAR,SAFW,EAEyB;AAAEA,cAAI,EAAE;AAAR,SAFzB,EAEsD;AAAEA,cAAI,EAAEC,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AACnGF,gBAAI,EAAE,oDAD6F;AAEnGG,gBAAI,EAAE,CAAC,wDAAD;AAF6F,WAAD;AAA/B,SAFtD,CAAP;AAKF,OAXS,EAWP;AAAEwmB,uBAAe,EAAE,CAAC;AAC9B3mB,cAAI,EAAE;AADwB,SAAD,CAAnB;AAEVspB,cAAM,EAAE,CAAC;AACTtpB,cAAI,EAAE;AADG,SAAD,CAFE;AAIVsnB,qBAAa,EAAE,CAAC;AAChBtnB,cAAI,EAAE;AADU,SAAD,CAJL;AAMVqkB,gBAAQ,EAAE,CAAC;AACXrkB,cAAI,EAAE;AADK,SAAD,CANA;AAQVkpB,cAAM,EAAE,CAAC;AACTlpB,cAAI,EAAE,6DADG;AAETG,cAAI,EAAE,CAACkjB,OAAD,EAAU;AAAEkG,uBAAW,EAAE;AAAf,WAAV;AAFG,SAAD,CARE;AAWVxC,mBAAW,EAAE,CAAC;AACd/mB,cAAI,EAAE,6DADQ;AAEdG,cAAI,EAAE,CAACiiB,aAAD,EAAgB;AAAEmH,uBAAW,EAAE;AAAf,WAAhB;AAFQ,SAAD;AAXH,OAXO;AAyBb,KAzBF;;AA0Bd,QAAI,KAAJ,EAAW,CAsFV;AACD;;;;;;;;AAMA,aAASC,mBAAT,GAA+B,CAAG;;AAClC,QAAI,KAAJ,EAAW,CAqKV;AAED;;;;;;AAKA;;;;;QAGMC,c;AACF;;;AAGA,8BAAYnG,QAAZ,EAAsB;AAAA;;AAClB,aAAKA,QAAL,GAAgBA,QAAhB;AACA;;;;AAGA,aAAKtjB,IAAL,GAAY,QAAZ;AACH,O,CACD;AACA;AACA;AACA;AACA;;AACA;;;;;;;uCAGe;AACX,eAAKsjB,QAAL,CAAcxgB,IAAd;AACH;;;;;;AAEL2mB,kBAAc,CAAC7pB,IAAf,GAAsB,SAAS8pB,sBAAT,CAAgC5pB,CAAhC,EAAmC;AAAE,aAAO,KAAKA,CAAC,IAAI2pB,cAAV,EAA0B,gEAAyB9E,UAAzB,CAA1B,CAAP;AAAyE,KAApI;;AACA8E,kBAAc,CAAClR,IAAf,GAAsB,gEAAyB;AAAEvY,UAAI,EAAEypB,cAAR;AAAwBjR,eAAS,EAAE,CAAC,CAAC,QAAD,EAAW,gBAAX,EAA6B,EAA7B,CAAD,CAAnC;AAAuEmR,cAAQ,EAAE,CAAjF;AAAoFC,kBAAY,EAAE,SAASC,2BAAT,CAAqC5H,EAArC,EAAyCC,GAAzC,EAA8C;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACrM,mEAAkB,OAAlB,EAA2B,SAAS6H,uCAAT,GAAmD;AAAE,mBAAO5H,GAAG,CAAC6H,YAAJ,EAAP;AAA4B,WAA5G;AACH;;AAAC,YAAI9H,EAAE,GAAG,CAAT,EAAY;AACV,uEAAsB,MAAtB,EAA8BC,GAAG,CAACliB,IAAlC;AACH;AAAE,OAJwC;AAItCib,YAAM,EAAE;AAAEjb,YAAI,EAAE;AAAR;AAJ8B,KAAzB,CAAtB;AAKA;;AACAypB,kBAAc,CAAC1pB,cAAf,GAAgC;AAAA,aAAM,CAClC;AAAEC,YAAI,EAAE2kB;AAAR,OADkC,CAAN;AAAA,KAAhC;;AAGA8E,kBAAc,CAACrO,cAAf,GAAgC;AAC5Bpb,UAAI,EAAE,CAAC;AAAEA,YAAI,EAAE;AAAR,OAAD,CADsB;AAE5B+pB,kBAAY,EAAE,CAAC;AAAE/pB,YAAI,EAAE,0DAAR;AAAsBG,YAAI,EAAE,CAAC,OAAD;AAA5B,OAAD;AAFc,KAAhC;AAIA;;AAAc,KAAC,YAAY;AAAE,sEAAyBspB,cAAzB,EAAyC,CAAC;AAC/DzpB,YAAI,EAAE,uDADyD;AAE/DG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,wBADX;AAECoJ,cAAI,EAAE;AACF,sBAAU;AADR;AAFP,SAAD;AAFyD,OAAD,CAAzC,EAQrB,YAAY;AAAE,eAAO,CAAC;AAAEvX,cAAI,EAAE2kB;AAAR,SAAD,CAAP;AAAgC,OARzB,EAQ2B;AAAE3kB,YAAI,EAAE,CAAC;AACrDA,cAAI,EAAE;AAD+C,SAAD,CAAR;AAE5C+pB,oBAAY,EAAE,CAAC;AACf/pB,cAAI,EAAE,0DADS;AAEfG,cAAI,EAAE,CAAC,OAAD;AAFS,SAAD;AAF8B,OAR3B;AAab,KAbF;;AAcd,QAAI,KAAJ,EAAW,CAQV;AACD;;;;;QAGM6pB,kB;AACF;;;AAGA,kCAAY1G,QAAZ,EAAsB;AAAA;;AAClB,aAAKA,QAAL,GAAgBA,QAAhB;AACA;;;;AAGA,aAAKtjB,IAAL,GAAY,QAAZ;AACH,O,CACD;AACA;AACA;AACA;AACA;;AACA;;;;;;;uCAGe;AACX,eAAKsjB,QAAL,CAAc2G,QAAd;AACH;;;;;;AAELD,sBAAkB,CAACpqB,IAAnB,GAA0B,SAASsqB,0BAAT,CAAoCpqB,CAApC,EAAuC;AAAE,aAAO,KAAKA,CAAC,IAAIkqB,kBAAV,EAA8B,gEAAyBrF,UAAzB,CAA9B,CAAP;AAA6E,KAAhJ;;AACAqF,sBAAkB,CAACzR,IAAnB,GAA0B,gEAAyB;AAAEvY,UAAI,EAAEgqB,kBAAR;AAA4BxR,eAAS,EAAE,CAAC,CAAC,QAAD,EAAW,oBAAX,EAAiC,EAAjC,CAAD,CAAvC;AAA+EmR,cAAQ,EAAE,CAAzF;AAA4FC,kBAAY,EAAE,SAASO,+BAAT,CAAyClI,EAAzC,EAA6CC,GAA7C,EAAkD;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACrN,mEAAkB,OAAlB,EAA2B,SAASmI,2CAAT,GAAuD;AAAE,mBAAOlI,GAAG,CAAC6H,YAAJ,EAAP;AAA4B,WAAhH;AACH;;AAAC,YAAI9H,EAAE,GAAG,CAAT,EAAY;AACV,uEAAsB,MAAtB,EAA8BC,GAAG,CAACliB,IAAlC;AACH;AAAE,OAJ4C;AAI1Cib,YAAM,EAAE;AAAEjb,YAAI,EAAE;AAAR;AAJkC,KAAzB,CAA1B;AAKA;;AACAgqB,sBAAkB,CAACjqB,cAAnB,GAAoC;AAAA,aAAM,CACtC;AAAEC,YAAI,EAAE2kB;AAAR,OADsC,CAAN;AAAA,KAApC;;AAGAqF,sBAAkB,CAAC5O,cAAnB,GAAoC;AAChCpb,UAAI,EAAE,CAAC;AAAEA,YAAI,EAAE;AAAR,OAAD,CAD0B;AAEhC+pB,kBAAY,EAAE,CAAC;AAAE/pB,YAAI,EAAE,0DAAR;AAAsBG,YAAI,EAAE,CAAC,OAAD;AAA5B,OAAD;AAFkB,KAApC;AAIA;;AAAc,KAAC,YAAY;AAAE,sEAAyB6pB,kBAAzB,EAA6C,CAAC;AACnEhqB,YAAI,EAAE,uDAD6D;AAEnEG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,4BADX;AAECoJ,cAAI,EAAE;AACF,sBAAU;AADR;AAFP,SAAD;AAF6D,OAAD,CAA7C,EAQrB,YAAY;AAAE,eAAO,CAAC;AAAEvX,cAAI,EAAE2kB;AAAR,SAAD,CAAP;AAAgC,OARzB,EAQ2B;AAAE3kB,YAAI,EAAE,CAAC;AACrDA,cAAI,EAAE;AAD+C,SAAD,CAAR;AAE5C+pB,oBAAY,EAAE,CAAC;AACf/pB,cAAI,EAAE,0DADS;AAEfG,cAAI,EAAE,CAAC,OAAD;AAFS,SAAD;AAF8B,OAR3B;AAab,KAbF;;AAcd,QAAI,KAAJ,EAAW,CAQV;AAED;;;;;;;QAKMkqB,gB;;;;AAENA,oBAAgB,CAAC7O,IAAjB,GAAwB,+DAAwB;AAAExb,UAAI,EAAEqqB;AAAR,KAAxB,CAAxB;AACAA,oBAAgB,CAAC5O,IAAjB,GAAwB,+DAAwB;AAAEpb,aAAO,EAAE,SAASiqB,wBAAT,CAAkCxqB,CAAlC,EAAqC;AAAE,eAAO,KAAKA,CAAC,IAAIuqB,gBAAV,GAAP;AAAuC,OAAzF;AAA2FzO,aAAO,EAAE,CAAC,CAAC,4DAAD,CAAD;AAApG,KAAxB,CAAxB;;AACA,KAAC,YAAY;AAAE,OAAC,OAAOC,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,iEAA0BwO,gBAA1B,EAA4C;AAAEvO,oBAAY,EAAE,wBAAY;AAAE,iBAAO,CAACuH,OAAD,EAC3IsB,UAD2I,EAE3IvC,aAF2I,EAG3IK,YAH2I,EAI3IgH,cAJ2I,EAK3IO,kBAL2I,CAAP;AAK9G,SALgF;AAK9EpO,eAAO,EAAE,mBAAY;AAAE,iBAAO,CAAC,4DAAD,CAAP;AAAsB,SALiC;AAK/BG,eAAO,EAAE,mBAAY;AAAE,iBAAO,CAACsH,OAAD,EACrGsB,UADqG,EAErGvC,aAFqG,EAGrGK,YAHqG,EAIrGgH,cAJqG,EAKrGO,kBALqG,CAAP;AAKxE;AAVgF,OAA5C,CAAnD;AAUqB,KAVpC;AAWA;;;AAAc,KAAC,YAAY;AAAE,sEAAyBK,gBAAzB,EAA2C,CAAC;AACjErqB,YAAI,EAAE,sDAD2D;AAEjEG,YAAI,EAAE,CAAC;AACCyb,iBAAO,EAAE,CAAC,4DAAD,CADV;AAECG,iBAAO,EAAE,CACLsH,OADK,EAELsB,UAFK,EAGLvC,aAHK,EAILK,YAJK,EAKLgH,cALK,EAMLO,kBANK,CAFV;AAUClO,sBAAY,EAAE,CACVuH,OADU,EAEVsB,UAFU,EAGVvC,aAHU,EAIVK,YAJU,EAKVgH,cALU,EAMVO,kBANU;AAVf,SAAD;AAF2D,OAAD,CAA3C,EAqBrB,IArBqB,EAqBf,IArBe;AAqBP,KArBR;AAuBd;;;;;;AAMA;;;AAMA;;;;;;;;;;;;;;;;;;AC1yCA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAOA;;;;;;AAKA;;;;;;AAMA,QAAMO,eAAe,GAAG,8FAAgC;AAAEC,aAAO,EAAE;AAAX,KAAhC,CAAxB;AACA;;;;;;QAKMC,e;AACF;;;;AAIA,+BAAYxmB,SAAZ,EAAuB1H,OAAvB,EAAgC;AAAA;;AAC5B,aAAK0H,SAAL,GAAiBA,SAAjB;AACA,aAAK1H,OAAL,GAAeA,OAAf;AACA,aAAKmuB,kBAAL,GAA0B,IAAIC,GAAJ,EAA1B;AACH;AACD;;;;;;;;gCAIQC,Y,EAAc;AAAA;;AAClB,cAAI,CAAC,KAAK3mB,SAAL,CAAeM,SAApB,EAA+B;AAC3B,mBAAO,0CAAP;AACH;AACD;;;AACA,cAAM1G,OAAO,GAAG,4EAAc+sB,YAAd,CAAhB;AACA;;AACA,cAAMC,IAAI,GAAG,KAAKH,kBAAL,CAAwB1S,GAAxB,CAA4Bna,OAA5B,CAAb;;AACA,cAAIgtB,IAAJ,EAAU;AACN,mBAAOA,IAAI,CAACC,OAAL,CAAa/jB,YAAb,EAAP;AACH;AACD;;;AACA,cAAMgkB,MAAM,GAAG,IAAI,4CAAJ,EAAf;AACA;;AACA,cAAMzhB,QAAQ,GAAG,2BAAjB;AACA;;AACA,cAAM0hB,QAAQ;AAAI;;AAAoB;;;;AAItC,mBAJMA,QAIN,CAACxoB,KAAD,EAAW;AACP;AACA;AACA;AACA,gBAAIA,KAAK,CAACyoB,aAAN,KAAwB,+BAAxB,IACA,CAACptB,OAAO,CAAC/C,SAAR,CAAkBY,QAAlB,CAA2B4N,QAA3B,CADL,EAC2C;AACvCzL,qBAAO,CAAC/C,SAAR,CAAkBC,GAAlB,CAAsBuO,QAAtB;;AACA,qBAAI,CAAC/M,OAAL,CAAaO,GAAb;AAAkB;;;AAGlB;AAAA,uBAAMiuB,MAAM,CAACjoB,IAAP,CAAY;AAAEooB,wBAAM;AAAG;AAAkB1oB,uBAAK,CAAC0oB,MAAnC;AAA6CC,8BAAY,EAAE;AAA3D,iBAAZ,CAAN;AAAA,eAHA;AAIH,aAPD,MAQK,IAAI3oB,KAAK,CAACyoB,aAAN,KAAwB,6BAAxB,IACLptB,OAAO,CAAC/C,SAAR,CAAkBY,QAAlB,CAA2B4N,QAA3B,CADC,EACqC;AACtCzL,qBAAO,CAAC/C,SAAR,CAAkBS,MAAlB,CAAyB+N,QAAzB;;AACA,qBAAI,CAAC/M,OAAL,CAAaO,GAAb;AAAkB;;;AAGlB;AAAA,uBAAMiuB,MAAM,CAACjoB,IAAP,CAAY;AAAEooB,wBAAM;AAAG;AAAkB1oB,uBAAK,CAAC0oB,MAAnC;AAA6CC,8BAAY,EAAE;AAA3D,iBAAZ,CAAN;AAAA,eAHA;AAIH;AACJ,WAxBD;;AAyBA,eAAK5uB,OAAL,CAAaqM,iBAAb;AAAgC;;;AAGhC,sBAAM;AACF/K,mBAAO,CAACmF,gBAAR,CAAyB,gBAAzB,EAA2CgoB,QAA3C,EAAqDT,eAArD;AACA1sB,mBAAO,CAAC/C,SAAR,CAAkBC,GAAlB,CAAsB,mCAAtB;AACH,WAND;;AAOA,eAAK2vB,kBAAL,CAAwBU,GAAxB,CAA4BvtB,OAA5B,EAAqC;AACjCitB,mBAAO,EAAEC,MADwB;AAEjCM,oBAAQ;AAAG;;;AAGX,gCAAM;AACFxtB,qBAAO,CAACwF,mBAAR,CAA4B,gBAA5B,EAA8C2nB,QAA9C,EAAwDT,eAAxD;AACH;AAPgC,WAArC;;AASA,iBAAOQ,MAAM,CAAChkB,YAAP,EAAP;AACH;AACD;;;;;;;uCAIe6jB,Y,EAAc;AACzB;AACA,cAAM/sB,OAAO,GAAG,4EAAc+sB,YAAd,CAAhB;AACA;;AACA,cAAMC,IAAI,GAAG,KAAKH,kBAAL,CAAwB1S,GAAxB,CAA4Bna,OAA5B,CAAb;;AACA,cAAIgtB,IAAJ,EAAU;AACNA,gBAAI,CAACQ,QAAL;AACAR,gBAAI,CAACC,OAAL,CAAapjB,QAAb;AACA7J,mBAAO,CAAC/C,SAAR,CAAkBS,MAAlB,CAAyB,mCAAzB;AACAsC,mBAAO,CAAC/C,SAAR,CAAkBS,MAAlB,CAAyB,2BAAzB;;AACA,iBAAKmvB,kBAAL,WAA+B7sB,OAA/B;AACH;AACJ;AACD;;;;;;sCAGc;AAAA;;AACV,eAAK6sB,kBAAL,CAAwBrhB,OAAxB;AAAiC;;;;;AAKjC,oBAACiiB,KAAD,EAAQztB,OAAR;AAAA,mBAAoB,OAAI,CAAC0tB,cAAL,CAAoB1tB,OAApB,CAApB;AAAA,WALA;AAMH;;;;;;AAEL4sB,mBAAe,CAAC7qB,IAAhB,GAAuB,SAAS4rB,uBAAT,CAAiC1rB,CAAjC,EAAoC;AAAE,aAAO,KAAKA,CAAC,IAAI2qB,eAAV,EAA2B,uDAAgB,8DAAhB,CAA3B,EAA6D,uDAAgB,oDAAhB,CAA7D,CAAP;AAAsG,KAAnK;AACA;;;AACAA,mBAAe,CAAC1qB,cAAhB,GAAiC;AAAA,aAAM,CACnC;AAAEC,YAAI,EAAE;AAAR,OADmC,EAEnC;AAAEA,YAAI,EAAE;AAAR,OAFmC,CAAN;AAAA,KAAjC;AAIA;;;AAAmByqB,mBAAe,CAACrqB,KAAhB,GAAwB,yEAAmB;AAAEC,aAAO,EAAE,SAASmrB,uBAAT,GAAmC;AAAE,eAAO,IAAIf,eAAJ,CAAoB,+DAAS,8DAAT,CAApB,EAAwC,+DAAS,oDAAT,CAAxC,CAAP;AAAmE,OAAnH;AAAqHnqB,WAAK,EAAEmqB,eAA5H;AAA6IlqB,gBAAU,EAAE;AAAzJ,KAAnB,CAAxB;AACnB;;AAAc,KAAC,YAAY;AAAE,sEAAyBkqB,eAAzB,EAA0C,CAAC;AAChEzqB,YAAI,EAAE,wDAD0D;AAEhEG,YAAI,EAAE,CAAC;AAAEI,oBAAU,EAAE;AAAd,SAAD;AAF0D,OAAD,CAA1C,EAGrB,YAAY;AAAE,eAAO,CAAC;AAAEP,cAAI,EAAE;AAAR,SAAD,EAA4B;AAAEA,cAAI,EAAE;AAAR,SAA5B,CAAP;AAA8D,OAHvD,EAGyD,IAHzD;AAGiE,KAHhF;;AAId,QAAI,KAAJ,EAAW,CAgBV;AACD;;;;;QAGMyrB,W;AACF;;;;AAIA,2BAAYpJ,WAAZ,EAAyBqJ,gBAAzB,EAA2C;AAAA;;AACvC,aAAKrJ,WAAL,GAAmBA,WAAnB;AACA,aAAKqJ,gBAAL,GAAwBA,gBAAxB;AACA;;;;AAGA,aAAKC,WAAL,GAAmB,IAAI,0DAAJ,EAAnB;AACH;AACD;;;;;;;mCAGW;AAAA;;AACP,eAAKD,gBAAL,CACKE,OADL,CACa,KAAKvJ,WADlB,EAEKhlB,SAFL;AAEgB;;;;AAIhB,oBAAAmF,KAAK;AAAA,mBAAI,OAAI,CAACmpB,WAAL,CAAiB7Q,IAAjB,CAAsBtY,KAAtB,CAAJ;AAAA,WANL;AAOH;AACD;;;;;;sCAGc;AACV,eAAKkpB,gBAAL,CAAsBH,cAAtB,CAAqC,KAAKlJ,WAA1C;AACH;;;;;;AAELoJ,eAAW,CAAC7rB,IAAZ,GAAmB,SAASisB,mBAAT,CAA6B/rB,CAA7B,EAAgC;AAAE,aAAO,KAAKA,CAAC,IAAI2rB,WAAV,EAAuB,gEAAyB,wDAAzB,CAAvB,EAAoE,gEAAyBhB,eAAzB,CAApE,CAAP;AAAwH,KAA7K;;AACAgB,eAAW,CAAClT,IAAZ,GAAmB,gEAAyB;AAAEvY,UAAI,EAAEyrB,WAAR;AAAqBjT,eAAS,EAAE,CAAC,CAAC,EAAD,EAAK,aAAL,EAAoB,EAApB,CAAD,CAAhC;AAA2D0C,aAAO,EAAE;AAAEyQ,mBAAW,EAAE;AAAf;AAApE,KAAzB,CAAnB;AACA;;AACAF,eAAW,CAAC1rB,cAAZ,GAA6B;AAAA,aAAM,CAC/B;AAAEC,YAAI,EAAE;AAAR,OAD+B,EAE/B;AAAEA,YAAI,EAAEyqB;AAAR,OAF+B,CAAN;AAAA,KAA7B;;AAIAgB,eAAW,CAACrQ,cAAZ,GAA6B;AACzBuQ,iBAAW,EAAE,CAAC;AAAE3rB,YAAI,EAAE;AAAR,OAAD;AADY,KAA7B;AAGA;;AAAc,KAAC,YAAY;AAAE,sEAAyByrB,WAAzB,EAAsC,CAAC;AAC5DzrB,YAAI,EAAE,uDADsD;AAE5DG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE;AADX,SAAD;AAFsD,OAAD,CAAtC,EAKrB,YAAY;AAAE,eAAO,CAAC;AAAEnO,cAAI,EAAE;AAAR,SAAD,EAA8B;AAAEA,cAAI,EAAEyqB;AAAR,SAA9B,CAAP;AAAkE,OAL3D,EAK6D;AAAEkB,mBAAW,EAAE,CAAC;AAC9F3rB,cAAI,EAAE;AADwF,SAAD;AAAf,OAL7D;AAOb,KAPF;;AAQd,QAAI,KAAJ,EAAW,CAgBV;AAED;;;;;;AAKA;;;;;QAGM8rB,mB;AACF;;;;;;AAMA,mCAAYzJ,WAAZ,EAAyBpe,SAAzB,EAAoC1H,OAApC;AACA;AACArC,cAFA,EAEU;AAAA;;AACN,aAAKmoB,WAAL,GAAmBA,WAAnB;AACA,aAAKpe,SAAL,GAAiBA,SAAjB;AACA,aAAK1H,OAAL,GAAeA,OAAf;AACA,aAAKiqB,UAAL,GAAkB,IAAI,4CAAJ,EAAlB;AACA,aAAKuF,QAAL,GAAgB,IAAhB;AACA;;;;;;AAKA,aAAKC,gBAAL,GAAwB,CAAC,CAAzB;AACA,aAAKzxB,SAAL,GAAiBL,QAAjB;AACA,aAAK+xB,gBAAL;AAAyB;AAAkB,aAAK5J,WAAL,CAAiBvP,aAA5D;AACH;AACD;;;;;;;;;AA2CA;;;;wCAIgB;AACZ;AACA,cAAM1K,SAAS,GAAG,KAAK8jB,OAAL,IAAgB,KAAKC,iBAArB,aACX,KAAKD,OAAL,GAAe,KAAKC,iBADT,UACiC,IADnD;;AAEA,cAAI/jB,SAAJ,EAAe;AACX,iBAAK6jB,gBAAL,CAAsBpxB,KAAtB,CAA4BuN,SAA5B,GAAwCA,SAAxC;AACH;AACJ;AACD;;;;;;;wCAIgB;AACZ;AACA,cAAME,SAAS,GAAG,KAAK8jB,OAAL,IAAgB,KAAKD,iBAArB,aACX,KAAKC,OAAL,GAAe,KAAKD,iBADT,UACiC,IADnD;;AAEA,cAAI7jB,SAAJ,EAAe;AACX,iBAAK2jB,gBAAL,CAAsBpxB,KAAtB,CAA4ByN,SAA5B,GAAwCA,SAAxC;AACH;AACJ;AACD;;;;;;0CAGkB;AAAA;;AACd,cAAI,KAAKrE,SAAL,CAAeM,SAAnB,EAA8B;AAC1B;AACA,iBAAK8nB,cAAL,GAAsB,KAAKJ,gBAAL,CAAsBpxB,KAAtB,CAA4BiB,MAAlD;AACA,iBAAKwwB,kBAAL;;AACA,iBAAK/vB,OAAL,CAAaqM,iBAAb;AAAgC;;;AAGhC,wBAAM;AACF;AACA,kBAAMpN,MAAM,GAAG,OAAI,CAAC+wB,UAAL,EAAf;;AACA,qEAAU/wB,MAAV,EAAkB,QAAlB,EACKwL,IADL,CACU,iEAAU,EAAV,CADV,EACyB,iEAAU,OAAI,CAACwf,UAAf,CADzB,EAEKnpB,SAFL;AAEgB;;;AAGhB;AAAA,uBAAM,OAAI,CAACivB,kBAAL,CAAwB,IAAxB,CAAN;AAAA,eALA;AAMH,aAZD;AAaH;AACJ;AACD;;;;;;sCAGc;AACV,eAAK9F,UAAL,CAAgB1jB,IAAhB;;AACA,eAAK0jB,UAAL,CAAgB9e,QAAhB;AACH;AACD;;;;;;;;;;;;mDAS2B;AACvB,cAAI,KAAKykB,iBAAT,EAA4B;AACxB;AACH,WAHsB,CAIvB;;AACA;;;AACA,cAAIK,aAAa;AAAI;AAAkB,eAAKP,gBAAL,CAAsBQ,SAAtB,CAAgC,KAAhC,CAAvC;;AACAD,uBAAa,CAACE,IAAd,GAAqB,CAArB,CAPuB,CAQvB;AACA;AACA;;AACAF,uBAAa,CAAC3xB,KAAd,CAAoB+R,QAApB,GAA+B,UAA/B;AACA4f,uBAAa,CAAC3xB,KAAd,CAAoB8xB,UAApB,GAAiC,QAAjC;AACAH,uBAAa,CAAC3xB,KAAd,CAAoB+xB,MAApB,GAA6B,MAA7B;AACAJ,uBAAa,CAAC3xB,KAAd,CAAoBgyB,OAApB,GAA8B,GAA9B;AACAL,uBAAa,CAAC3xB,KAAd,CAAoBiB,MAApB,GAA6B,EAA7B;AACA0wB,uBAAa,CAAC3xB,KAAd,CAAoBuN,SAApB,GAAgC,EAAhC;AACAokB,uBAAa,CAAC3xB,KAAd,CAAoByN,SAApB,GAAgC,EAAhC,CAjBuB,CAkBvB;AACA;AACA;AACA;AACA;;AACAkkB,uBAAa,CAAC3xB,KAAd,CAAoBiyB,QAApB,GAA+B,QAA/B;;AACC;AAAkB,eAAKb,gBAAL,CAAsB7nB,UAAzC,CAAsDS,WAAtD,CAAkE2nB,aAAlE;;AACA,eAAKL,iBAAL,GAAyBK,aAAa,CAACpa,YAAvC;;AACC;AAAkB,eAAK6Z,gBAAL,CAAsB7nB,UAAzC,CAAsDC,WAAtD,CAAkEmoB,aAAlE,EA1BuB,CA2BvB;;;AACA,eAAKO,aAAL;;AACA,eAAKC,aAAL;AACH;AACD;;;;;;oCAGY;AACR,cAAI,KAAK/oB,SAAL,CAAeM,SAAnB,EAA8B;AAC1B,iBAAK+nB,kBAAL;AACH;AACJ;AACD;;;;;;;;;6CAMkC;AAAA;;AAAA,cAAfW,KAAe,uEAAP,KAAO;;AAC9B;AACA,cAAI,CAAC,KAAKlB,QAAV,EAAoB;AAChB;AACH;;AACD,eAAKmB,wBAAL,GAL8B,CAM9B;AACA;;;AACA,cAAI,CAAC,KAAKf,iBAAV,EAA6B;AACzB;AACH;AACD;;;AACA,cAAMgB,QAAQ;AAAI;AAAkB,eAAK9K,WAAL,CAAiBvP,aAArD;AACA;;AACA,cAAM3Q,KAAK,GAAGgrB,QAAQ,CAAChrB,KAAvB,CAd8B,CAe9B;;AACA,cAAI,CAAC8qB,KAAD,IAAU,KAAKG,QAAL,KAAkB,KAAKpB,gBAAjC,IAAqD7pB,KAAK,KAAK,KAAKkrB,cAAxE,EAAwF;AACpF;AACH;AACD;;;AACA,cAAMC,eAAe,GAAGH,QAAQ,CAACI,WAAjC,CApB8B,CAqB9B;AACA;AACA;AACA;AACA;;AACAJ,kBAAQ,CAACryB,SAAT,CAAmBC,GAAnB,CAAuB,iCAAvB;AACAoyB,kBAAQ,CAACI,WAAT,GAAuB,EAAvB,CA3B8B,CA4B9B;AACA;;AACA;;AACA,cAAMzxB,MAAM,GAAGqxB,QAAQ,CAACtxB,YAAT,GAAwB,CAAvC,CA/B8B,CAgC9B;;AACAsxB,kBAAQ,CAACtyB,KAAT,CAAeiB,MAAf,aAA2BA,MAA3B;AACAqxB,kBAAQ,CAACryB,SAAT,CAAmBS,MAAnB,CAA0B,iCAA1B;AACA4xB,kBAAQ,CAACI,WAAT,GAAuBD,eAAvB;;AACA,eAAK/wB,OAAL,CAAaqM,iBAAb;AAAgC;;;AAGhC,sBAAM;AACF,gBAAI,OAAOD,qBAAP,KAAiC,WAArC,EAAkD;AAC9CA,mCAAqB;AAAE;;;AAGvB;AAAA,uBAAM,OAAI,CAAC6kB,sBAAL,CAA4BL,QAA5B,CAAN;AAAA,eAHqB,CAArB;AAIH,aALD,MAMK;AACDjkB,wBAAU;AAAE;;;AAGZ;AAAA,uBAAM,OAAI,CAACskB,sBAAL,CAA4BL,QAA5B,CAAN;AAAA,eAHU,CAAV;AAIH;AACJ,WAhBD;;AAiBA,eAAKE,cAAL,GAAsBlrB,KAAtB;AACA,eAAK6pB,gBAAL,GAAwB,KAAKoB,QAA7B;AACH;AACD;;;;;;;gCAIQ;AACJ;AACA;AACA,cAAI,KAAKf,cAAL,KAAwBpsB,SAA5B,EAAuC;AACnC,iBAAKgsB,gBAAL,CAAsBpxB,KAAtB,CAA4BiB,MAA5B,GAAqC,KAAKuwB,cAA1C;AACH;AACJ,S,CACD;AACA;AACA;AACA;;AACA;;;;;;4CAGoB,CAEnB,C,CADG;;AAEJ;;;;;;;;uCAKe;AACX,iBAAO,KAAK9xB,SAAL,IAAkBL,QAAzB;AACH;AACD;;;;;;;;qCAKa;AACT;AACA,cAAMuzB,GAAG,GAAG,KAAKC,YAAL,EAAZ;;AACA,iBAAOD,GAAG,CAACE,WAAJ,IAAmBnyB,MAA1B;AACH;AACD;;;;;;;;;;;+CAQuB2xB,Q,EAAU;AAAA,cACrBS,cADqB,GACYT,QADZ,CACrBS,cADqB;AAAA,cACLC,YADK,GACYV,QADZ,CACLU,YADK;AAE7B;;AACA,cAAM3zB,QAAQ,GAAG,KAAKwzB,YAAL,EAAjB,CAH6B,CAI7B;AACA;AACA;AACA;AACA;AACA;;;AACA,cAAI,CAAC,KAAKlH,UAAL,CAAgBsH,SAAjB,IAA8B5zB,QAAQ,CAAC+uB,aAAT,KAA2BkE,QAA7D,EAAuE;AACnEA,oBAAQ,CAACY,iBAAT,CAA2BH,cAA3B,EAA2CC,YAA3C;AACH;AACJ;;;4BAvQa;AAAE,iBAAO,KAAKT,QAAZ;AAAuB;AACvC;;;;;0BAIYjrB,K,EAAO;AACf,eAAKirB,QAAL,GAAgB,mFAAqBjrB,KAArB,CAAhB;;AACA,eAAK4qB,aAAL;AACH;AACD;;;;;;;4BAIc;AAAE,iBAAO,KAAKiB,QAAZ;AAAuB;AACvC;;;;;0BAIY7rB,K,EAAO;AACf,eAAK6rB,QAAL,GAAgB,mFAAqB7rB,KAArB,CAAhB;;AACA,eAAK6qB,aAAL;AACH;AACD;;;;;;;4BAIc;AAAE,iBAAO,KAAKjB,QAAZ;AAAuB;AACvC;;;;;0BAIY5pB,K,EAAO;AACfA,eAAK,GAAG,oFAAsBA,KAAtB,CAAR,CADe,CAEf;AACA;;AACA,cAAI,KAAK4pB,QAAL,KAAkB5pB,KAAtB,EAA6B;AACzB,aAAC,KAAK4pB,QAAL,GAAgB5pB,KAAjB,IAA0B,KAAKmqB,kBAAL,CAAwB,IAAxB,CAA1B,GAA0D,KAAKhI,KAAL,EAA1D;AACH;AACJ;;;;;;AAmOLwH,uBAAmB,CAAClsB,IAApB,GAA2B,SAASquB,2BAAT,CAAqCnuB,CAArC,EAAwC;AAAE,aAAO,KAAKA,CAAC,IAAIgsB,mBAAV,EAA+B,gEAAyB,wDAAzB,CAA/B,EAA4E,gEAAyB,8DAAzB,CAA5E,EAAuH,gEAAyB,oDAAzB,CAAvH,EAAgK,gEAAyB,wDAAzB,EAAmC,CAAnC,CAAhK,CAAP;AAAgN,KAArR;;AACAA,uBAAmB,CAACvT,IAApB,GAA2B,gEAAyB;AAAEvY,UAAI,EAAE8rB,mBAAR;AAA6BtT,eAAS,EAAE,CAAC,CAAC,UAAD,EAAa,qBAAb,EAAoC,EAApC,CAAD,CAAxC;AAAmFgK,eAAS,EAAE,CAAC,MAAD,EAAS,GAAT,EAAc,CAAd,EAAiB,uBAAjB,CAA9F;AAAyIoH,kBAAY,EAAE,SAASsE,gCAAT,CAA0CjM,EAA1C,EAA8CC,GAA9C,EAAmD;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACpQ,mEAAkB,OAAlB,EAA2B,SAASkM,4CAAT,GAAwD;AAAE,mBAAOjM,GAAG,CAACkM,iBAAJ,EAAP;AAAiC,WAAtH;AACH;AAAE,OAF6C;AAE3CnT,YAAM,EAAE;AAAEiR,eAAO,EAAE,CAAC,oBAAD,EAAuB,SAAvB,CAAX;AAA8CE,eAAO,EAAE,CAAC,oBAAD,EAAuB,SAAvB,CAAvD;AAA0FiC,eAAO,EAAE,CAAC,qBAAD,EAAwB,SAAxB;AAAnG,OAFmC;AAEsG5V,cAAQ,EAAE,CAAC,qBAAD;AAFhH,KAAzB,CAA3B;AAGA;;AACAqT,uBAAmB,CAAC/rB,cAApB,GAAqC;AAAA,aAAM,CACvC;AAAEC,YAAI,EAAE;AAAR,OADuC,EAEvC;AAAEA,YAAI,EAAE;AAAR,OAFuC,EAGvC;AAAEA,YAAI,EAAE;AAAR,OAHuC,EAIvC;AAAEA,YAAI,EAAEC,SAAR;AAAmBC,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD,EAAqB;AAAEA,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAAC,wDAAD;AAAtB,SAArB;AAA/B,OAJuC,CAAN;AAAA,KAArC;;AAMA2rB,uBAAmB,CAAC1Q,cAApB,GAAqC;AACjC8Q,aAAO,EAAE,CAAC;AAAElsB,YAAI,EAAE,mDAAR;AAAeG,YAAI,EAAE,CAAC,oBAAD;AAArB,OAAD,CADwB;AAEjCisB,aAAO,EAAE,CAAC;AAAEpsB,YAAI,EAAE,mDAAR;AAAeG,YAAI,EAAE,CAAC,oBAAD;AAArB,OAAD,CAFwB;AAGjCkuB,aAAO,EAAE,CAAC;AAAEruB,YAAI,EAAE,mDAAR;AAAeG,YAAI,EAAE,CAAC,qBAAD;AAArB,OAAD,CAHwB;AAIjCiuB,uBAAiB,EAAE,CAAC;AAAEpuB,YAAI,EAAE,0DAAR;AAAsBG,YAAI,EAAE,CAAC,OAAD;AAA5B,OAAD;AAJc,KAArC;AAMA;;AAAc,KAAC,YAAY;AAAE,sEAAyB2rB,mBAAzB,EAA8C,CAAC;AACpE9rB,YAAI,EAAE,uDAD8D;AAEpEG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,+BADX;AAECsK,kBAAQ,EAAE,qBAFX;AAGClB,cAAI,EAAE;AACF,qBAAS,uBADP;AAEF;AACA;AACA,oBAAQ;AAJN;AAHP,SAAD;AAF8D,OAAD,CAA9C,EAYrB,YAAY;AAAE,eAAO,CAAC;AAAEvX,cAAI,EAAE;AAAR,SAAD,EAA8B;AAAEA,cAAI,EAAE;AAAR,SAA9B,EAAyD;AAAEA,cAAI,EAAE;AAAR,SAAzD,EAAkF;AAAEA,cAAI,EAAEC,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAC/HF,gBAAI,EAAE;AADyH,WAAD,EAE/H;AACCA,gBAAI,EAAE,oDADP;AAECG,gBAAI,EAAE,CAAC,wDAAD;AAFP,WAF+H;AAA/B,SAAlF,CAAP;AAKF,OAjBS,EAiBP;AAAE+rB,eAAO,EAAE,CAAC;AACtBlsB,cAAI,EAAE,mDADgB;AAEtBG,cAAI,EAAE,CAAC,oBAAD;AAFgB,SAAD,CAAX;AAGVisB,eAAO,EAAE,CAAC;AACVpsB,cAAI,EAAE,mDADI;AAEVG,cAAI,EAAE,CAAC,oBAAD;AAFI,SAAD,CAHC;AAMVkuB,eAAO,EAAE,CAAC;AACVruB,cAAI,EAAE,mDADI;AAEVG,cAAI,EAAE,CAAC,qBAAD;AAFI,SAAD,CANC;AASViuB,yBAAiB,EAAE,CAAC;AACpBpuB,cAAI,EAAE,0DADc;AAEpBG,cAAI,EAAE,CAAC,OAAD;AAFc,SAAD;AATT,OAjBO;AA6Bb,KA7BF;;AA8Bd,QAAI,KAAJ,EAAW,CA8EV;AAED;;;;;;;QAKMmuB,e;;;;AAENA,mBAAe,CAAC9S,IAAhB,GAAuB,+DAAwB;AAAExb,UAAI,EAAEsuB;AAAR,KAAxB,CAAvB;AACAA,mBAAe,CAAC7S,IAAhB,GAAuB,+DAAwB;AAAEpb,aAAO,EAAE,SAASkuB,uBAAT,CAAiCzuB,CAAjC,EAAoC;AAAE,eAAO,KAAKA,CAAC,IAAIwuB,eAAV,GAAP;AAAsC,OAAvF;AAAyF1S,aAAO,EAAE,CAAC,CAAC,oEAAD,CAAD;AAAlG,KAAxB,CAAvB;;AACA,KAAC,YAAY;AAAE,OAAC,OAAOC,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,iEAA0ByS,eAA1B,EAA2C;AAAExS,oBAAY,EAAE,wBAAY;AAAE,iBAAO,CAAC2P,WAAD,EAC1IK,mBAD0I,CAAP;AAC5G,SAD8E;AAC5ElQ,eAAO,EAAE,mBAAY;AAAE,iBAAO,CAAC,oEAAD,CAAP;AAA0B,SAD2B;AACzBG,eAAO,EAAE,mBAAY;AAAE,iBAAO,CAAC0P,WAAD,EAC1GK,mBAD0G,CAAP;AAC5E;AAF8E,OAA3C,CAAnD;AAEsB,KAFrC;AAGA;;;AAAc,KAAC,YAAY;AAAE,sEAAyBwC,eAAzB,EAA0C,CAAC;AAChEtuB,YAAI,EAAE,sDAD0D;AAEhEG,YAAI,EAAE,CAAC;AACC2b,sBAAY,EAAE,CAAC2P,WAAD,EAAcK,mBAAd,CADf;AAEClQ,iBAAO,EAAE,CAAC,oEAAD,CAFV;AAGCG,iBAAO,EAAE,CAAC0P,WAAD,EAAcK,mBAAd;AAHV,SAAD;AAF0D,OAAD,CAA1C,EAOrB,IAPqB,EAOf,IAPe;AAOP,KAPR;AASd;;;;;;AAMA;;;AAMA;;;;;;;;;;;;;;;;;;AC9qBA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAIA;;;;;;AAKA;;;;;;AAMA,QAAM3J,GAAG,GAAG,CAAC,GAAD,EAAM,CAAC,CAAC,iBAAD,CAAD,CAAN,CAAZ;AACA,QAAMqM,GAAG,GAAG,CAAC,GAAD,EAAM,iBAAN,CAAZ;AACA,QAAMC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAD,EAAK,iBAAL,EAAwB,EAAxB,CAAD,EAA8B,CAAC,EAAD,EAAK,eAAL,EAAsB,EAAtB,CAA9B,CAAD,EAA2D,CAAC,CAAC,gBAAD,CAAD,EAAqB,CAAC,mBAAD,CAArB,EAA4C,CAAC,EAAD,EAAK,gBAAL,EAAuB,EAAvB,CAA5C,EAAwE,CAAC,EAAD,EAAK,mBAAL,EAA0B,EAA1B,CAAxE,EAAuG,CAAC,EAAD,EAAK,cAAL,EAAqB,EAArB,CAAvG,EAAiI,CAAC,EAAD,EAAK,iBAAL,EAAwB,EAAxB,CAAjI,CAA3D,EAA0N,GAA1N,CAAZ;AACA,QAAMC,GAAG,GAAG,CAAC,oCAAD,EAAuC,2HAAvC,EAAoK,GAApK,CAAZ;AACA,QAAMC,GAAG,GAAG,CAAC,CAAC,CAAC,gBAAD,CAAD,EAAqB,CAAC,mBAAD,CAArB,EAA4C,CAAC,EAAD,EAAK,gBAAL,EAAuB,EAAvB,CAA5C,EAAwE,CAAC,EAAD,EAAK,mBAAL,EAA0B,EAA1B,CAAxE,EAAuG,CAAC,EAAD,EAAK,cAAL,EAAqB,EAArB,CAAvG,EAAiI,CAAC,EAAD,EAAK,iBAAL,EAAwB,EAAxB,CAAjI,CAAD,EAAgK,CAAC,CAAC,KAAD,CAAD,CAAhK,EAA2K,GAA3K,CAAZ;AACA,QAAMC,GAAG,GAAG,CAAC,2HAAD,EAA8H,KAA9H,EAAqI,GAArI,CAAZ;;QACMC,c;;;;AAENA,kBAAc,CAACjvB,IAAf,GAAsB,SAASkvB,sBAAT,CAAgChvB,CAAhC,EAAmC;AAAE,aAAO,KAAKA,CAAC,IAAI+uB,cAAV,GAAP;AAAqC,KAAhG;;AACAA,kBAAc,CAACtW,IAAf,GAAsB,gEAAyB;AAAEvY,UAAI,EAAE6uB,cAAR;AAAwBrW,eAAS,EAAE,CAAC,CAAC,kBAAD,CAAD,EAAuB,CAAC,EAAD,EAAK,kBAAL,EAAyB,EAAzB,CAAvB,EAAqD,CAAC,EAAD,EAAK,gBAAL,EAAuB,EAAvB,CAArD,CAAnC;AAAqHgK,eAAS,EAAE,CAAC,CAAD,EAAI,kBAAJ;AAAhI,KAAzB,CAAtB;AACA;;AAAc,KAAC,YAAY;AAAE,sEAAyBqM,cAAzB,EAAyC,CAAC;AAC/D7uB,YAAI,EAAE,uDADyD;AAE/DG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,wDADX;AAECoJ,cAAI,EAAE;AAAE,qBAAS;AAAX;AAFP,SAAD;AAFyD,OAAD,CAAzC,EAMrB,IANqB,EAMf,IANe;AAMP,KANR;AAOd;;;;;;QAIMwX,Y;;;;AAENA,gBAAY,CAACnvB,IAAb,GAAoB,SAASovB,oBAAT,CAA8BlvB,CAA9B,EAAiC;AAAE,aAAO,KAAKA,CAAC,IAAIivB,YAAV,GAAP;AAAmC,KAA1F;;AACAA,gBAAY,CAACxW,IAAb,GAAoB,gEAAyB;AAAEvY,UAAI,EAAE+uB,YAAR;AAAsBvW,eAAS,EAAE,CAAC,CAAC,gBAAD,CAAD,EAAqB,CAAC,EAAD,EAAK,gBAAL,EAAuB,EAAvB,CAArB,EAAiD,CAAC,EAAD,EAAK,cAAL,EAAqB,EAArB,CAAjD,CAAjC;AAA6GgK,eAAS,EAAE,CAAC,CAAD,EAAI,gBAAJ;AAAxH,KAAzB,CAApB;AACA;;AAAc,KAAC,YAAY;AAAE,sEAAyBuM,YAAzB,EAAuC,CAAC;AAC7D/uB,YAAI,EAAE,uDADuD;AAE7DG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,oDADT;AAECoJ,cAAI,EAAE;AACF,qBAAS;AADP;AAFP,SAAD;AAFuD,OAAD,CAAvC,EAQrB,IARqB,EAQf,IARe;AAQP,KARR;AASd;;;;;;QAIM0X,e;;;;AAENA,mBAAe,CAACrvB,IAAhB,GAAuB,SAASsvB,uBAAT,CAAiCpvB,CAAjC,EAAoC;AAAE,aAAO,KAAKA,CAAC,IAAImvB,eAAV,GAAP;AAAsC,KAAnG;;AACAA,mBAAe,CAAC1W,IAAhB,GAAuB,gEAAyB;AAAEvY,UAAI,EAAEivB,eAAR;AAAyBzW,eAAS,EAAE,CAAC,CAAC,mBAAD,CAAD,EAAwB,CAAC,EAAD,EAAK,mBAAL,EAA0B,EAA1B,CAAxB,EAAuD,CAAC,EAAD,EAAK,iBAAL,EAAwB,EAAxB,CAAvD,CAApC;AAAyHgK,eAAS,EAAE,CAAC,CAAD,EAAI,mBAAJ;AAApI,KAAzB,CAAvB;AACA;;AAAc,KAAC,YAAY;AAAE,sEAAyByM,eAAzB,EAA0C,CAAC;AAChEjvB,YAAI,EAAE,uDAD0D;AAEhEG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,6DADT;AAECoJ,cAAI,EAAE;AACF,qBAAS;AADP;AAFP,SAAD;AAF0D,OAAD,CAA1C,EAQrB,IARqB,EAQf,IARe;AAQP,KARR;AASd;;;;;;QAIM4X,c,GACF,0BAAc;AAAA;;AACV;;;AAGA,WAAKC,KAAL,GAAa,OAAb;AACH,K;;AAELD,kBAAc,CAACvvB,IAAf,GAAsB,SAASyvB,sBAAT,CAAgCvvB,CAAhC,EAAmC;AAAE,aAAO,KAAKA,CAAC,IAAIqvB,cAAV,GAAP;AAAqC,KAAhG;;AACAA,kBAAc,CAAC5W,IAAf,GAAsB,gEAAyB;AAAEvY,UAAI,EAAEmvB,cAAR;AAAwB3W,eAAS,EAAE,CAAC,CAAC,kBAAD,CAAD,CAAnC;AAA2DgK,eAAS,EAAE,CAAC,CAAD,EAAI,kBAAJ,CAAtE;AAA+FmH,cAAQ,EAAE,CAAzG;AAA4GC,kBAAY,EAAE,SAAS0F,2BAAT,CAAqCrN,EAArC,EAAyCC,GAAzC,EAA8C;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAC7N,oEAAmB,4BAAnB,EAAiDC,GAAG,CAACkN,KAAJ,KAAc,KAA/D;AACH;AAAE,OAFwC;AAEtCnU,YAAM,EAAE;AAAEmU,aAAK,EAAE;AAAT,OAF8B;AAEV3W,cAAQ,EAAE,CAAC,gBAAD;AAFA,KAAzB,CAAtB;AAGA0W,kBAAc,CAAC/T,cAAf,GAAgC;AAC5BgU,WAAK,EAAE,CAAC;AAAEpvB,YAAI,EAAE;AAAR,OAAD;AADqB,KAAhC;AAGA;;AAAc,KAAC,YAAY;AAAE,sEAAyBmvB,cAAzB,EAAyC,CAAC;AAC/DnvB,YAAI,EAAE,uDADyD;AAE/DG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,kBADX;AAECsK,kBAAQ,EAAE,gBAFX;AAGClB,cAAI,EAAE;AACF,qBAAS,kBADP;AAEF,kDAAsC;AAFpC;AAHP,SAAD;AAFyD,OAAD,CAAzC,EAUrB,YAAY;AAAE,eAAO,EAAP;AAAY,OAVL,EAUO;AAAE6X,aAAK,EAAE,CAAC;AAClCpvB,cAAI,EAAE;AAD4B,SAAD;AAAT,OAVP;AAYb,KAZF;;AAad,QAAI,KAAJ,EAAW,CAMV;AACD;;;;;;QAIMuvB,a;;;;AAENA,iBAAa,CAAC3vB,IAAd,GAAqB,SAAS4vB,qBAAT,CAA+B1vB,CAA/B,EAAkC;AAAE,aAAO,KAAKA,CAAC,IAAIyvB,aAAV,GAAP;AAAoC,KAA7F;;AACAA,iBAAa,CAAChX,IAAd,GAAqB,gEAAyB;AAAEvY,UAAI,EAAEuvB,aAAR;AAAuB/W,eAAS,EAAE,CAAC,CAAC,iBAAD,CAAD,CAAlC;AAAyDgK,eAAS,EAAE,CAAC,CAAD,EAAI,iBAAJ;AAApE,KAAzB,CAArB;AACA;;AAAc,KAAC,YAAY;AAAE,sEAAyB+M,aAAzB,EAAwC,CAAC;AAC9DvvB,YAAI,EAAE,uDADwD;AAE9DG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,iBADX;AAECoJ,cAAI,EAAE;AAAE,qBAAS;AAAX;AAFP,SAAD;AAFwD,OAAD,CAAxC,EAMrB,IANqB,EAMf,IANe;AAMP,KANR;AAOd;;;;;;QAIMkY,Y;;;;AAENA,gBAAY,CAAC7vB,IAAb,GAAoB,SAAS8vB,oBAAT,CAA8B5vB,CAA9B,EAAiC;AAAE,aAAO,KAAKA,CAAC,IAAI2vB,YAAV,GAAP;AAAmC,KAA1F;;AACAA,gBAAY,CAAClX,IAAb,GAAoB,gEAAyB;AAAEvY,UAAI,EAAEyvB,YAAR;AAAsBjX,eAAS,EAAE,CAAC,CAAC,EAAD,EAAK,gBAAL,EAAuB,EAAvB,CAAD,EAA6B,CAAC,EAAD,EAAK,cAAL,EAAqB,EAArB,CAA7B,CAAjC;AAAyFgK,eAAS,EAAE,CAAC,CAAD,EAAI,gBAAJ;AAApG,KAAzB,CAApB;AACA;;AAAc,KAAC,YAAY;AAAE,sEAAyBiN,YAAzB,EAAuC,CAAC;AAC7DzvB,YAAI,EAAE,uDADuD;AAE7DG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,kCADX;AAECoJ,cAAI,EAAE;AAAE,qBAAS;AAAX;AAFP,SAAD;AAFuD,OAAD,CAAvC,EAMrB,IANqB,EAMf,IANe;AAMP,KANR;AAOd;;;;;;QAIMoY,c;;;;AAENA,kBAAc,CAAC/vB,IAAf,GAAsB,SAASgwB,sBAAT,CAAgC9vB,CAAhC,EAAmC;AAAE,aAAO,KAAKA,CAAC,IAAI6vB,cAAV,GAAP;AAAqC,KAAhG;;AACAA,kBAAc,CAACpX,IAAf,GAAsB,gEAAyB;AAAEvY,UAAI,EAAE2vB,cAAR;AAAwBnX,eAAS,EAAE,CAAC,CAAC,EAAD,EAAK,mBAAL,EAA0B,EAA1B,CAAD,EAAgC,CAAC,EAAD,EAAK,mBAAL,EAA0B,EAA1B,CAAhC,CAAnC;AAAmGgK,eAAS,EAAE,CAAC,CAAD,EAAI,mBAAJ;AAA9G,KAAzB,CAAtB;AACA;;AAAc,KAAC,YAAY;AAAE,sEAAyBmN,cAAzB,EAAyC,CAAC;AAC/D3vB,YAAI,EAAE,uDADyD;AAE/DG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,0CADX;AAECoJ,cAAI,EAAE;AAAE,qBAAS;AAAX;AAFP,SAAD;AAFyD,OAAD,CAAzC,EAMrB,IANqB,EAMf,IANe;AAMP,KANR;AAOd;;;;;;QAIMsY,c;;;;AAENA,kBAAc,CAACjwB,IAAf,GAAsB,SAASkwB,sBAAT,CAAgChwB,CAAhC,EAAmC;AAAE,aAAO,KAAKA,CAAC,IAAI+vB,cAAV,GAAP;AAAqC,KAAhG;;AACAA,kBAAc,CAACtX,IAAf,GAAsB,gEAAyB;AAAEvY,UAAI,EAAE6vB,cAAR;AAAwBrX,eAAS,EAAE,CAAC,CAAC,EAAD,EAAK,mBAAL,EAA0B,EAA1B,CAAD,EAAgC,CAAC,EAAD,EAAK,oBAAL,EAA2B,EAA3B,CAAhC,CAAnC;AAAoGgK,eAAS,EAAE,CAAC,CAAD,EAAI,mBAAJ;AAA/G,KAAzB,CAAtB;AACA;;AAAc,KAAC,YAAY;AAAE,sEAAyBqN,cAAzB,EAAyC,CAAC;AAC/D7vB,YAAI,EAAE,uDADyD;AAE/DG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,2CADX;AAECoJ,cAAI,EAAE;AAAE,qBAAS;AAAX;AAFP,SAAD;AAFyD,OAAD,CAAzC,EAMrB,IANqB,EAMf,IANe;AAMP,KANR;AAOd;;;;;;QAIMwY,c;;;;AAENA,kBAAc,CAACnwB,IAAf,GAAsB,SAASowB,sBAAT,CAAgClwB,CAAhC,EAAmC;AAAE,aAAO,KAAKA,CAAC,IAAIiwB,cAAV,GAAP;AAAqC,KAAhG;;AACAA,kBAAc,CAACxX,IAAf,GAAsB,gEAAyB;AAAEvY,UAAI,EAAE+vB,cAAR;AAAwBvX,eAAS,EAAE,CAAC,CAAC,EAAD,EAAK,mBAAL,EAA0B,EAA1B,CAAD,EAAgC,CAAC,EAAD,EAAK,mBAAL,EAA0B,EAA1B,CAAhC,CAAnC;AAAmGgK,eAAS,EAAE,CAAC,CAAD,EAAI,mBAAJ;AAA9G,KAAzB,CAAtB;AACA;;AAAc,KAAC,YAAY;AAAE,sEAAyBuN,cAAzB,EAAyC,CAAC;AAC/D/vB,YAAI,EAAE,uDADyD;AAE/DG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,0CADX;AAECoJ,cAAI,EAAE;AAAE,qBAAS;AAAX;AAFP,SAAD;AAFyD,OAAD,CAAzC,EAMrB,IANqB,EAMf,IANe;AAMP,KANR;AAOd;;;;;;QAIM0Y,c;;;;AAENA,kBAAc,CAACrwB,IAAf,GAAsB,SAASswB,sBAAT,CAAgCpwB,CAAhC,EAAmC;AAAE,aAAO,KAAKA,CAAC,IAAImwB,cAAV,GAAP;AAAqC,KAAhG;;AACAA,kBAAc,CAAC1X,IAAf,GAAsB,gEAAyB;AAAEvY,UAAI,EAAEiwB,cAAR;AAAwBzX,eAAS,EAAE,CAAC,CAAC,EAAD,EAAK,mBAAL,EAA0B,EAA1B,CAAD,EAAgC,CAAC,EAAD,EAAK,oBAAL,EAA2B,EAA3B,CAAhC,CAAnC;AAAoGgK,eAAS,EAAE,CAAC,CAAD,EAAI,mBAAJ;AAA/G,KAAzB,CAAtB;AACA;;AAAc,KAAC,YAAY;AAAE,sEAAyByN,cAAzB,EAAyC,CAAC;AAC/DjwB,YAAI,EAAE,uDADyD;AAE/DG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,2CADX;AAECoJ,cAAI,EAAE;AAAE,qBAAS;AAAX;AAFP,SAAD;AAFyD,OAAD,CAAzC,EAMrB,IANqB,EAMf,IANe;AAMP,KANR;AAOd;;;;;;QAIM4Y,a;;;;AAENA,iBAAa,CAACvwB,IAAd,GAAqB,SAASwwB,qBAAT,CAA+BtwB,CAA/B,EAAkC;AAAE,aAAO,KAAKA,CAAC,IAAIqwB,aAAV,GAAP;AAAoC,KAA7F;;AACAA,iBAAa,CAAC5X,IAAd,GAAqB,gEAAyB;AAAEvY,UAAI,EAAEmwB,aAAR;AAAuB3X,eAAS,EAAE,CAAC,CAAC,EAAD,EAAK,iBAAL,EAAwB,EAAxB,CAAD,EAA8B,CAAC,EAAD,EAAK,eAAL,EAAsB,EAAtB,CAA9B,CAAlC;AAA4FgK,eAAS,EAAE,CAAC,CAAD,EAAI,iBAAJ;AAAvG,KAAzB,CAArB;AACA;;AAAc,KAAC,YAAY;AAAE,sEAAyB2N,aAAzB,EAAwC,CAAC;AAC9DnwB,YAAI,EAAE,uDADwD;AAE9DG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,oCADX;AAECoJ,cAAI,EAAE;AAAE,qBAAS;AAAX;AAFP,SAAD;AAFwD,OAAD,CAAxC,EAMrB,IANqB,EAMf,IANe;AAMP,KANR;AAOd;;;;;;;;;;;;;QAWM8Y,O,GACF;;AACA;;;AAGA,qBAAYC,cAAZ,EAA4B;AAAA;;AACxB,WAAKA,cAAL,GAAsBA,cAAtB;AACH,K;;AAELD,WAAO,CAACzwB,IAAR,GAAe,SAAS2wB,eAAT,CAAyBzwB,CAAzB,EAA4B;AAAE,aAAO,KAAKA,CAAC,IAAIuwB,OAAV,EAAmB,gEAAyB,0FAAzB,EAAgD,CAAhD,CAAnB,CAAP;AAAgF,KAA7H;;AACAA,WAAO,CAACzL,IAAR,GAAe,gEAAyB;AAAE5kB,UAAI,EAAEqwB,OAAR;AAAiB7X,eAAS,EAAE,CAAC,CAAC,UAAD,CAAD,CAA5B;AAA4CgK,eAAS,EAAE,CAAC,CAAD,EAAI,UAAJ,EAAgB,qBAAhB,CAAvD;AAA+FmH,cAAQ,EAAE,CAAzG;AAA4GC,kBAAY,EAAE,SAAS4G,oBAAT,CAA8BvO,EAA9B,EAAkCC,GAAlC,EAAuC;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAC/M,oEAAmB,yBAAnB,EAA8CC,GAAG,CAACoO,cAAJ,KAAuB,gBAArE;AACH;AAAE,OAFiC;AAE/B7X,cAAQ,EAAE,CAAC,SAAD,CAFqB;AAERsN,wBAAkB,EAAEyI,GAFZ;AAEiBxI,WAAK,EAAE,CAFxB;AAE2BC,UAAI,EAAE,CAFjC;AAEoChI,cAAQ,EAAE,SAASwS,gBAAT,CAA0BxO,EAA1B,EAA8BC,GAA9B,EAAmC;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAC/H,wEAAuBE,GAAvB;;AACA,qEAAoB,CAApB;;AACA,qEAAoB,CAApB,EAAuB,CAAvB;AACH;AAAE,OANiC;AAM/B5Q,YAAM,EAAE,CAAC,g8EAAD,CANuB;AAM66E4U,mBAAa,EAAE,CAN57E;AAM+7EC,qBAAe,EAAE;AANh9E,KAAzB,CAAf;AAOA;;AACAiK,WAAO,CAACtwB,cAAR,GAAyB;AAAA,aAAM,CAC3B;AAAEC,YAAI,EAAE0wB,MAAR;AAAgBxwB,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD,EAAqB;AAAEA,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAAC,0FAAD;AAAtB,SAArB;AAA5B,OAD2B,CAAN;AAAA,KAAzB;AAGA;;;AAAc,KAAC,YAAY;AAAE,sEAAyBkwB,OAAzB,EAAkC,CAAC;AACxDrwB,YAAI,EAAE,uDADkD;AAExDG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,UADX;AAECsK,kBAAQ,EAAE,SAFX;AAGCwF,kBAAQ,EAAE,mFAHX;AAICkI,uBAAa,EAAE,gEAAkBE,IAJlC;AAKCD,yBAAe,EAAE,sEAAwBE,MAL1C;AAMC/O,cAAI,EAAE;AACF,qBAAS,8BADP;AAEF,+CAAmC;AAFjC,WANP;AAUChG,gBAAM,EAAE,CAAC,g8EAAD;AAVT,SAAD;AAFkD,OAAD,CAAlC,EAcrB,YAAY;AAAE,eAAO,CAAC;AAAEvR,cAAI,EAAE0wB,MAAR;AAAgBxwB,oBAAU,EAAE,CAAC;AAC3CF,gBAAI,EAAE;AADqC,WAAD,EAE3C;AACCA,gBAAI,EAAE,oDADP;AAECG,gBAAI,EAAE,CAAC,0FAAD;AAFP,WAF2C;AAA5B,SAAD,CAAP;AAKF,OAnBS,EAmBP,IAnBO;AAmBC,KAnBhB;;AAoBd,QAAI,KAAJ,EAAW,CAGV;AACD;;;;;;;QAKMwwB,a;;;;AAENA,iBAAa,CAAC/wB,IAAd,GAAqB,SAASgxB,qBAAT,CAA+B9wB,CAA/B,EAAkC;AAAE,aAAO,KAAKA,CAAC,IAAI6wB,aAAV,GAAP;AAAoC,KAA7F;;AACAA,iBAAa,CAAC/L,IAAd,GAAqB,gEAAyB;AAAE5kB,UAAI,EAAE2wB,aAAR;AAAuBnY,eAAS,EAAE,CAAC,CAAC,iBAAD,CAAD,CAAlC;AAAyDgK,eAAS,EAAE,CAAC,CAAD,EAAI,iBAAJ,CAApE;AAA4FuD,wBAAkB,EAAE2I,GAAhH;AAAqH1I,WAAK,EAAE,CAA5H;AAA+HC,UAAI,EAAE,CAArI;AAAwI4K,YAAM,EAAE,CAAC,CAAC,CAAD,EAAI,sBAAJ,CAAD,CAAhJ;AAA+K5S,cAAQ,EAAE,SAAS6S,sBAAT,CAAgC7O,EAAhC,EAAoCC,GAApC,EAAyC;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACtR,wEAAuBwM,GAAvB;;AACA,qEAAoB,CAApB;;AACA,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;;AACA,qEAAoB,CAApB,EAAuB,CAAvB;;AACA;;AACA,qEAAoB,CAApB,EAAuB,CAAvB;AACH;AAAE,OAPuC;AAOrCtI,mBAAa,EAAE,CAPsB;AAOnBC,qBAAe,EAAE;AAPE,KAAzB,CAArB;AAQA;;AAAc,KAAC,YAAY;AAAE,sEAAyBuK,aAAzB,EAAwC,CAAC;AAC9D3wB,YAAI,EAAE,uDADwD;AAE9DG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,iBADX;AAEC8P,kBAAQ,EAAE,6TAFX;AAGCkI,uBAAa,EAAE,gEAAkBE,IAHlC;AAICD,yBAAe,EAAE,sEAAwBE,MAJ1C;AAKC/O,cAAI,EAAE;AAAE,qBAAS;AAAX;AALP,SAAD;AAFwD,OAAD,CAAxC,EASrB,IATqB,EASf,IATe;AASP,KATR;AAUd;;;;;;;QAKMwZ,iB;;;;AAENA,qBAAiB,CAACnxB,IAAlB,GAAyB,SAASoxB,yBAAT,CAAmClxB,CAAnC,EAAsC;AAAE,aAAO,KAAKA,CAAC,IAAIixB,iBAAV,GAAP;AAAwC,KAAzG;;AACAA,qBAAiB,CAACnM,IAAlB,GAAyB,gEAAyB;AAAE5kB,UAAI,EAAE+wB,iBAAR;AAA2BvY,eAAS,EAAE,CAAC,CAAC,sBAAD,CAAD,CAAtC;AAAkEgK,eAAS,EAAE,CAAC,CAAD,EAAI,sBAAJ,CAA7E;AAA0GuD,wBAAkB,EAAE6I,GAA9H;AAAmI5I,WAAK,EAAE,CAA1I;AAA6IC,UAAI,EAAE,CAAnJ;AAAsJhI,cAAQ,EAAE,SAASgT,0BAAT,CAAoChP,EAApC,EAAwCC,GAAxC,EAA6C;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACrQ,wEAAuB0M,GAAvB;;AACA,uEAAsB,CAAtB,EAAyB,KAAzB;;AACA,qEAAoB,CAApB;;AACA;;AACA,qEAAoB,CAApB,EAAuB,CAAvB;;AACA,qEAAoB,CAApB,EAAuB,CAAvB;AACH;AAAE,OAP2C;AAOzCxI,mBAAa,EAAE,CAP0B;AAOvBC,qBAAe,EAAE;AAPM,KAAzB,CAAzB;AAQA;;AAAc,KAAC,YAAY;AAAE,sEAAyB2K,iBAAzB,EAA4C,CAAC;AAClE/wB,YAAI,EAAE,uDAD4D;AAElEG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,sBADX;AAEC8P,kBAAQ,EAAE,+PAFX;AAGCkI,uBAAa,EAAE,gEAAkBE,IAHlC;AAICD,yBAAe,EAAE,sEAAwBE,MAJ1C;AAKC/O,cAAI,EAAE;AAAE,qBAAS;AAAX;AALP,SAAD;AAF4D,OAAD,CAA5C,EASrB,IATqB,EASf,IATe;AASP,KATR;AAWd;;;;;;;QAKM2Z,a;;;;AAENA,iBAAa,CAAC1V,IAAd,GAAqB,+DAAwB;AAAExb,UAAI,EAAEkxB;AAAR,KAAxB,CAArB;AACAA,iBAAa,CAACzV,IAAd,GAAqB,+DAAwB;AAAEpb,aAAO,EAAE,SAAS8wB,qBAAT,CAA+BrxB,CAA/B,EAAkC;AAAE,eAAO,KAAKA,CAAC,IAAIoxB,aAAV,GAAP;AAAoC,OAAnF;AAAqFtV,aAAO,EAAE,CAAC,CAAC,sEAAD,CAAD,EACnI,sEADmI;AAA9F,KAAxB,CAArB;;AAEA,KAAC,YAAY;AAAE,OAAC,OAAOC,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,iEAA0BqV,aAA1B,EAAyC;AAAEpV,oBAAY,EAAE,wBAAY;AAAE,iBAAO,CAACuU,OAAD,EACxIM,aADwI,EAExII,iBAFwI,EAGxIlC,cAHwI,EAIxIE,YAJwI,EAKxIE,eALwI,EAMxIE,cANwI,EAOxII,aAPwI,EAQxII,cARwI,EASxIE,cATwI,EAUxIE,cAVwI,EAWxIN,YAXwI,EAYxIQ,cAZwI,EAaxIE,aAbwI,CAAP;AAahH,SAbkF;AAahFvU,eAAO,EAAE,mBAAY;AAAE,iBAAO,CAAC,sEAAD,CAAP;AAA2B,SAb8B;AAa5BG,eAAO,EAAE,mBAAY;AAAE,iBAAO,CAACsU,OAAD,EACrGM,aADqG,EAErGI,iBAFqG,EAGrGlC,cAHqG,EAIrGE,YAJqG,EAKrGE,eALqG,EAMrGE,cANqG,EAOrGI,aAPqG,EAQrGI,cARqG,EASrGE,cATqG,EAUrGE,cAVqG,EAWrGN,YAXqG,EAYrGQ,cAZqG,EAarGE,aAbqG,EAcrG,sEAdqG,CAAP;AAc3E;AA3BgF,OAAzC,CAAnD;AA2BkB,KA3BjC;AA4BA;;;AAAc,KAAC,YAAY;AAAE,sEAAyBe,aAAzB,EAAwC,CAAC;AAC9DlxB,YAAI,EAAE,sDADwD;AAE9DG,YAAI,EAAE,CAAC;AACCyb,iBAAO,EAAE,CAAC,sEAAD,CADV;AAECG,iBAAO,EAAE,CACLsU,OADK,EAELM,aAFK,EAGLI,iBAHK,EAILlC,cAJK,EAKLE,YALK,EAMLE,eANK,EAOLE,cAPK,EAQLI,aARK,EASLI,cATK,EAULE,cAVK,EAWLE,cAXK,EAYLN,YAZK,EAaLQ,cAbK,EAcLE,aAdK,EAeL,sEAfK,CAFV;AAmBCrU,sBAAY,EAAE,CACVuU,OADU,EACDM,aADC,EACcI,iBADd,EACiClC,cADjC,EACiDE,YADjD,EAC+DE,eAD/D,EAEVE,cAFU,EAEMI,aAFN,EAEqBI,cAFrB,EAEqCE,cAFrC,EAEqDE,cAFrD,EAEqEN,YAFrE,EAGVQ,cAHU,EAGME,aAHN;AAnBf,SAAD;AAFwD,OAAD,CAAxC,EA2BrB,IA3BqB,EA2Bf,IA3Be;AA2BP,KA3BR;AA6Bd;;;;;;AAMA;;;AAMA;;;;;;;;;;;;;;;;;;AC9YA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAQA;;;;;;AAKA;;;;;;AASA,QAAMhO,GAAG,GAAG,CAAC,OAAD,CAAZ;;AACA,QAAMqM,GAAG,GAAG,SAANA,GAAM,GAAY;AAAE,aAAO;AAAE4C,qBAAa,EAAE;AAAjB,OAAP;AAAgC,KAA1D;;AACA,QAAM3C,GAAG,GAAG,CAAC,GAAD,CAAZ;;AACA,aAAS4C,yBAAT,GAAqC,CAAG;;AACxC,QAAI,KAAJ,EAAW,CAKV;AACD;;;;;;AAIA,QAAMC,4BAA4B,GAAG,IAAI,4DAAJ,CAAmB,8BAAnB,EAAmD;AACpF/wB,gBAAU,EAAE,MADwE;AAEpFF,aAAO,EAAEkxB;AAF2E,KAAnD,CAArC;AAIA;;;;;AAIA,aAASA,oCAAT,GAAgD;AAC5C,aAAO;AACHC,aAAK,EAAE,QADJ;AAEHC,mBAAW,EAAE;AAFV,OAAP;AAIH;AACD;;;;;;;;AAMA,QAAMC,yBAAyB,GAAG,IAAI,4DAAJ,CAAmB,2BAAnB,CAAlC;AAEA;;;;;AAKA;;AACA;;AACA,QAAI1a,YAAY,GAAG,CAAnB;AACA;;;;;;;AAMA,QAAM2a,mCAAmC,GAAG;AACxCjuB,aAAO,EAAE,gEAD+B;AAExCid,iBAAW,EAAE;AAAY;;;AAGzB;AAAA,eAAMiR,WAAN;AAAA,OAHa,CAF2B;AAMxCC,WAAK,EAAE;AANiC,KAA5C;AAQA;;AACA,QAAMC,oBAAoB,GAAG;AACzB;AACAC,UAAI,EAAE,CAFmB;;AAGzB;AACAC,aAAO,EAAE,CAJgB;;AAKzB;AACAC,eAAS,EAAE,CANc;;AAOzB;AACAC,mBAAa,EAAE;AARU,KAA7B;AAUA;;;;QAGMC,iB;;;;AAEN,QAAI,KAAJ,EAAW,CAWV,C,CACD;;AACA;;;;;QAGMC,e;AACF;;;AAGA,6BAAY/P,WAAZ,EAAyB;AAAA;;AACrB,WAAKA,WAAL,GAAmBA,WAAnB;AACH,K;;AAEL,QAAI,KAAJ,EAAW,CAGV;AACD;;;AACA,QAAMgQ,qBAAqB,GAAG,6EAAc,0EAAW,kFAAmB,6EAAcD,eAAd,CAAnB,CAAX,CAAd,CAA9B;AACA;;;;;;;;;;QAQMR,W;;;;;AACF;;;;;;;;;;AAUA,2BAAY9a,UAAZ,EAAwByP,kBAAxB,EAA4C+L,aAA5C,EAA2D/1B,OAA3D,EAAoEg2B,QAApE,EAA8EC,YAA9E,EAA4FlC,cAA5F,EAA4GmC,QAA5G,EAAsH;AAAA;;AAAA;;AAClH,sCAAM3b,UAAN;AACA,gBAAKyP,kBAAL,GAA0BA,kBAA1B;AACA,gBAAK+L,aAAL,GAAqBA,aAArB;AACA,gBAAK/1B,OAAL,GAAeA,OAAf;AACA,gBAAKi2B,YAAL,GAAoBA,YAApB;AACA,gBAAKlC,cAAL,GAAsBA,cAAtB;AACA,gBAAKmC,QAAL,GAAgBA,QAAhB;AACA;;;;;AAIA,gBAAK7M,SAAL,GAAiB,EAAjB;AACA;;;;AAGA,gBAAKC,cAAL,GAAsB,IAAtB;AACA,gBAAK6M,SAAL,0BAAiC,EAAE1b,YAAnC;AACA;;;;AAGA,gBAAKc,EAAL,GAAU,QAAK4a,SAAf;AACA;;;;AAGA,gBAAKC,aAAL,GAAqB,OAArB;AACA;;;;AAGA,gBAAKC,IAAL,GAAY,IAAZ;AACA;;;;AAGA,gBAAKxnB,MAAL,GAAc,IAAI,0DAAJ,EAAd;AACA;;;;AAGA,gBAAKynB,mBAAL,GAA2B,IAAI,0DAAJ,EAA3B;AACA;;;;;AAIA,gBAAKC,UAAL;AAAmB;;;AAGnB,oBAAM,CAAG,CAHT;;AAIA,gBAAKC,sBAAL,GAA8B,EAA9B;AACA,gBAAKC,kBAAL,GAA0B;AAAE;AAA5B;;AACA,gBAAKC,6BAAL;AAAsC;;;AAGtC,oBAAM,CAAG,CAHT;;AAIA,gBAAKC,QAAL,GAAgB,KAAhB;AACA,gBAAKC,SAAL,GAAiB,KAAjB;AACA,gBAAKC,cAAL,GAAsB,KAAtB;AACA,gBAAKX,QAAL,GAAgB,QAAKA,QAAL,IAAiB,EAAjC;;AACA,YAAI,QAAKA,QAAL,CAAcjB,KAAlB,EAAyB;AACrB,kBAAKA,KAAL,GAAa,QAAKiB,QAAL,CAAcjB,KAA3B;AACH;;AACD,gBAAKe,QAAL,GAAgBc,QAAQ,CAACd,QAAD,CAAR,IAAsB,CAAtC;;AACA,gBAAKD,aAAL,CAAmB1G,OAAnB,CAA2B9U,UAA3B,EAAuC,IAAvC,EAA6CzZ,SAA7C;AAAwD;;;;AAIxD,kBAAAi2B,WAAW,EAAI;AACX,cAAI,CAACA,WAAL,EAAkB;AACd;AACA;AACA;AACA;AACA;AACAC,mBAAO,CAACC,OAAR,GAAkBC,IAAlB;AAAwB;;;AAGxB,wBAAM;AACF,sBAAKX,UAAL;;AACAvM,gCAAkB,CAACkB,YAAnB;AACH,aAND;AAOH;AACJ,SAnBD,EA5DkH,CAgFlH;;;AACA,gBAAK+K,YAAL,GAAoB,QAAKA,YAAL,IAAqB,QAAKC,QAAL,CAAchB,WAAvD;AAjFkH;AAkFrH;AACD;;;;;;;;;AAeA;;;0CAGkB;AACd,eAAKiC,kBAAL,CAAwB,KAAKN,cAA7B;AACH,S,CACD;;AACA;;;;;;6CAGqB,CAAG;AACxB;;;;;;sCAGc;AACV,eAAKd,aAAL,CAAmB/G,cAAnB,CAAkC,KAAKlJ,WAAvC;AACH;AACD;;;;;;;;AA4DA;;;4CAGoB;AAChB,iBAAO,KAAKsR,aAAL,IAAsB,KAAKC,QAAlC;AACH;AACD;;;;;;;6CAIqB;AACjB;AACA;AACA;AACA;AACA;AACA,eAAKrN,kBAAL,CAAwBrG,aAAxB;AACH,S,CACD;;AACA;;;;;;;mCAIW/d,K,EAAO;AACd,eAAK0xB,OAAL,GAAe,CAAC,CAAC1xB,KAAjB;AACH,S,CACD;;AACA;;;;;;;yCAIiBqa,E,EAAI;AACjB,eAAKyW,6BAAL,GAAqCzW,EAArC;AACH,S,CACD;;AACA;;;;;;;0CAIkBA,E,EAAI;AAClB,eAAKsW,UAAL,GAAkBtW,EAAlB;AACH,S,CACD;;AACA;;;;;;;yCAIiBsX,U,EAAY;AACzB,eAAKF,QAAL,GAAgBE,UAAhB;AACH;AACD;;;;;;0CAGkB;AACd,cAAI,KAAKD,OAAT,EAAkB;AACd,mBAAO,MAAP;AACH;;AACD,iBAAO,KAAKE,aAAL,GAAqB,OAArB,GAA+B,OAAtC;AACH;AACD;;;;;;;;8CAKsBC,Q,EAAU;AAC5B;AACA,cAAIC,QAAQ,GAAG,KAAKjB,kBAApB;AACA;;AACA,cAAIn1B,OAAO,GAAG,KAAKwkB,WAAL,CAAiBvP,aAA/B;;AACA,cAAImhB,QAAQ,KAAKD,QAAjB,EAA2B;AACvB;AACH;;AACD,cAAI,KAAKjB,sBAAL,CAA4BpwB,MAA5B,GAAqC,CAAzC,EAA4C;AACxC9E,mBAAO,CAAC/C,SAAR,CAAkBS,MAAlB,CAAyB,KAAKw3B,sBAA9B;AACH;;AACD,eAAKA,sBAAL,GAA8B,KAAKmB,yCAAL,CAA+CD,QAA/C,EAAyDD,QAAzD,CAA9B;AACA,eAAKhB,kBAAL,GAA0BgB,QAA1B;;AACA,cAAI,KAAKjB,sBAAL,CAA4BpwB,MAA5B,GAAqC,CAAzC,EAA4C;AACxC9E,mBAAO,CAAC/C,SAAR,CAAkBC,GAAlB,CAAsB,KAAKg4B,sBAA3B,EADwC,CAExC;;AACA;;AACA,gBAAMoB,cAAc,GAAG,KAAKpB,sBAA5B;;AACA,iBAAKx2B,OAAL,CAAaqM,iBAAb;AAAgC;;;AAGhC,wBAAM;AACFM,wBAAU;AAAE;;;AAGZ,0BAAM;AACFrL,uBAAO,CAAC/C,SAAR,CAAkBS,MAAlB,CAAyB44B,cAAzB;AACH,eALS,EAKN,IALM,CAAV;AAMH,aAVD;AAWH;AACJ;AACD;;;;;;;2CAImB;AACf;AACA,cAAM3xB,KAAK,GAAG,IAAI2vB,iBAAJ,EAAd;AACA3vB,eAAK,CAACyR,MAAN,GAAe,IAAf;AACAzR,eAAK,CAACqxB,OAAN,GAAgB,KAAKA,OAArB;;AACA,eAAKZ,6BAAL,CAAmC,KAAKY,OAAxC;;AACA,eAAKzoB,MAAL,CAAY0P,IAAZ,CAAiBtY,KAAjB;AACH;AACD;;;;;;;iCAIS;AACL,eAAKqxB,OAAL,GAAe,CAAC,KAAKA,OAArB;AACH;AACD;;;;;;;;;;;sCAQcrxB,K,EAAO;AAAA;;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,eAAK,CAAC4xB,eAAN,GARiB,CASjB;;AACA,cAAI,CAAC,KAAKR,QAAN,IAAkB,KAAKpB,YAAL,KAAsB,MAA5C,EAAoD;AAChD;AACA,gBAAI,KAAKuB,aAAL,IAAsB,KAAKvB,YAAL,KAAsB,OAAhD,EAAyD;AACrDe,qBAAO,CAACC,OAAR,GAAkBC,IAAlB;AAAwB;;;AAGxB,0BAAM;AACF,uBAAI,CAACL,cAAL,GAAsB,KAAtB;;AACA,uBAAI,CAACP,mBAAL,CAAyB/X,IAAzB,CAA8B,OAAI,CAACsY,cAAnC;AACH,eAND;AAOH;;AACD,iBAAKiB,MAAL;;AACA,iBAAKC,qBAAL,CAA2B,KAAKpB,QAAL,GAAgB;AAAE;AAAlB,cAAkC;AAAE;AAA/D,cAZgD,CAahD;AACA;AACA;;;AACA,iBAAKqB,gBAAL;AACH,WAjBD,MAkBK,IAAI,CAAC,KAAKX,QAAN,IAAkB,KAAKpB,YAAL,KAAsB,MAA5C,EAAoD;AACrD;AACA;AACA,iBAAKgC,aAAL,CAAmB1hB,aAAnB,CAAiC+gB,OAAjC,GAA2C,KAAKA,OAAhD;AACA,iBAAKW,aAAL,CAAmB1hB,aAAnB,CAAiCihB,aAAjC,GAAiD,KAAKA,aAAtD;AACH;AACJ;AACD;;;;;;;;;gCAMoC;AAAA,cAA9B1yB,MAA8B,uEAArB,UAAqB;AAAA,cAATozB,OAAS;;AAChC,eAAKnC,aAAL,CAAmBoC,QAAnB,CAA4B,KAAKF,aAAjC,EAAgDnzB,MAAhD,EAAwDozB,OAAxD;AACH;AACD;;;;;;;4CAIoBjyB,K,EAAO;AACvB;AACA;AACA;AACAA,eAAK,CAAC4xB,eAAN;AACH;AACD;;;;;;;;;kEAM0CH,Q,EAAUD,Q,EAAU;AAC1D;AACA,cAAI,KAAK1D,cAAL,KAAwB,gBAA5B,EAA8C;AAC1C,mBAAO,EAAP;AACH;AACD;;;AACA,cAAIqE,UAAU,GAAG,EAAjB;;AACA,kBAAQV,QAAR;AACI,iBAAK;AAAE;AAAP;AACI;AACA;AACA,kBAAID,QAAQ,KAAK;AAAE;AAAnB,gBAAkC;AAC9BW,4BAAU,GAAG,mBAAb;AACH,iBAFD,MAGK,IAAIX,QAAQ,IAAI;AAAE;AAAlB,gBAAuC;AACxCW,4BAAU,GAAG,yBAAb;AACH,iBAFI,MAGA;AACD,uBAAO,EAAP;AACH;;AACD;;AACJ,iBAAK;AAAE;AAAP;AACIA,wBAAU,GAAGX,QAAQ,KAAK;AAAE;AAAf,gBACT,mBADS,GACa,yBAD1B;AAEA;;AACJ,iBAAK;AAAE;AAAP;AACIW,wBAAU,GAAGX,QAAQ,KAAK;AAAE;AAAf,gBACT,mBADS,GACa,uBAD1B;AAEA;;AACJ,iBAAK;AAAE;AAAP;AACIW,wBAAU,GAAGX,QAAQ,KAAK;AAAE;AAAf,gBACT,uBADS,GACiB,yBAD9B;AAEA;AAzBR;;AA2BA,6CAA4BW,UAA5B;AACH;AACD;;;;;;;;;;;;;;2CAWmBxyB,K,EAAO;AACtB;AACA,cAAMyyB,cAAc,GAAG,KAAKJ,aAA5B;;AACA,cAAII,cAAJ,EAAoB;AAChBA,0BAAc,CAAC9hB,aAAf,CAA6BihB,aAA7B,GAA6C5xB,KAA7C;AACH;AACJ;;;4BAnUa;AAAE,2BAAU,KAAK2V,EAAL,IAAW,KAAK4a,SAA1B;AAA8C;AAC9D;;;;;;;4BAIe;AAAE,iBAAO,KAAKmC,SAAZ;AAAwB;AACzC;;;;;0BAIa1yB,K,EAAO;AAAE,eAAK0yB,SAAL,GAAiB,oFAAsB1yB,KAAtB,CAAjB;AAAgD;;;4BAsBxD;AAAE,iBAAO,KAAK+wB,QAAZ;AAAuB;AACvC;;;;;0BAIY/wB,K,EAAO;AACf,cAAIA,KAAK,IAAI,KAAK0xB,OAAlB,EAA2B;AACvB,iBAAKX,QAAL,GAAgB/wB,KAAhB;;AACA,iBAAKokB,kBAAL,CAAwBkB,YAAxB;AACH;AACJ;AACD;;;;;;;;4BAKe;AAAE,iBAAO,KAAK0L,SAAZ;AAAwB;AACzC;;;;;0BAIahxB,K,EAAO;AAChB;AACA,cAAM2yB,QAAQ,GAAG,oFAAsB3yB,KAAtB,CAAjB;;AACA,cAAI2yB,QAAQ,KAAK,KAAKlB,QAAtB,EAAgC;AAC5B,iBAAKT,SAAL,GAAiB2B,QAAjB;;AACA,iBAAKvO,kBAAL,CAAwBkB,YAAxB;AACH;AACJ;AACD;;;;;;;;;;4BAOoB;AAAE,iBAAO,KAAK2L,cAAZ;AAA6B;AACnD;;;;;0BAIkBjxB,K,EAAO;AACrB;AACA,cAAM4yB,OAAO,GAAG5yB,KAAK,IAAI,KAAKixB,cAA9B;AACA,eAAKA,cAAL,GAAsB,oFAAsBjxB,KAAtB,CAAtB;;AACA,cAAI4yB,OAAJ,EAAa;AACT,gBAAI,KAAK3B,cAAT,EAAyB;AACrB,mBAAKkB,qBAAL,CAA2B;AAAE;AAA7B;AACH,aAFD,MAGK;AACD,mBAAKA,qBAAL,CAA2B,KAAKT,OAAL,GAAe;AAAE;AAAjB,gBAAiC;AAAE;AAA9D;AACH;;AACD,iBAAKhB,mBAAL,CAAyB/X,IAAzB,CAA8B,KAAKsY,cAAnC;AACH;;AACD,eAAKM,kBAAL,CAAwB,KAAKN,cAA7B;AACH;;;;MAzLqBf,qB;;AAua1BT,eAAW,CAAChyB,IAAZ,GAAmB,SAASo1B,mBAAT,CAA6Bl1B,CAA7B,EAAgC;AAAE,aAAO,KAAKA,CAAC,IAAI8xB,WAAV,EAAuB,gEAAyB,wDAAzB,CAAvB,EAAoE,gEAAyB,+DAAzB,CAApE,EAAwH,gEAAyB,8DAAzB,CAAxH,EAAuK,gEAAyB,oDAAzB,CAAvK,EAAgN,gEAAyB,UAAzB,CAAhN,EAAsP,gEAAyBF,yBAAzB,EAAoD,CAApD,CAAtP,EAA8S,gEAAyB,0FAAzB,EAAgD,CAAhD,CAA9S,EAAkW,gEAAyBJ,4BAAzB,EAAuD,CAAvD,CAAlW,CAAP;AAAsa,KAA3d;;AACAM,eAAW,CAAChN,IAAZ,GAAmB,gEAAyB;AAAE5kB,UAAI,EAAE4xB,WAAR;AAAqBpZ,eAAS,EAAE,CAAC,CAAC,cAAD,CAAD,CAAhC;AAAoD2M,eAAS,EAAE,SAAS8P,iBAAT,CAA2BhT,EAA3B,EAA+BC,GAA/B,EAAoC;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACrJ,oEAAmBE,GAAnB,EAAwB,IAAxB;;AACA,oEAAmB,gEAAnB,EAA8B,IAA9B;AACH;;AAAC,YAAIF,EAAE,GAAG,CAAT,EAAY;AACV,cAAI+C,EAAJ;;AACA,uEAAsBA,EAAE,GAAG,2DAA3B,MAAqD9C,GAAG,CAACsS,aAAJ,GAAoBxP,EAAE,CAACE,KAA5E;AACA,uEAAsBF,EAAE,GAAG,2DAA3B,MAAqD9C,GAAG,CAACgT,MAAJ,GAAalQ,EAAE,CAACE,KAArE;AACH;AAAE,OAPqC;AAOnC1C,eAAS,EAAE,CAAC,CAAD,EAAI,cAAJ,CAPwB;AAOHmH,cAAQ,EAAE,EAPP;AAOWC,kBAAY,EAAE,SAASuL,wBAAT,CAAkClT,EAAlC,EAAsCC,GAAtC,EAA2C;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACtH,uEAAsB,IAAtB,EAA4BC,GAAG,CAACpK,EAAhC;;AACA,oEAAmB,UAAnB,EAA+B,IAA/B;;AACA,oEAAmB,4BAAnB,EAAiDoK,GAAG,CAAC6R,aAArD,EAAoE,sBAApE,EAA4F7R,GAAG,CAAC2R,OAAhG,EAAyG,uBAAzG,EAAkI3R,GAAG,CAAC0R,QAAtI,EAAgJ,2BAAhJ,EAA6K1R,GAAG,CAACyQ,aAAJ,IAAqB,QAAlM,EAA4M,yBAA5M,EAAuOzQ,GAAG,CAACoO,cAAJ,KAAuB,gBAA9P;AACH;AAAE,OAXqC;AAWnCrV,YAAM,EAAE;AAAE0Y,qBAAa,EAAE,eAAjB;AAAkCnC,aAAK,EAAE,OAAzC;AAAkDe,gBAAQ,EAAE,UAA5D;AAAwE3M,iBAAS,EAAE,CAAC,YAAD,EAAe,WAAf,CAAnF;AAAgHC,sBAAc,EAAE,CAAC,iBAAD,EAAoB,gBAApB,CAAhI;AAAuK/N,UAAE,EAAE,IAA3K;AAAiL6a,qBAAa,EAAE,eAAhM;AAAiNC,YAAI,EAAE,MAAvN;AAA+NwC,gBAAQ,EAAE,UAAzO;AAAqPvB,eAAO,EAAE,SAA9P;AAAyQD,gBAAQ,EAAE,UAAnR;AAA+RG,qBAAa,EAAE,eAA9S;AAA+T5xB,aAAK,EAAE;AAAtU,OAX2B;AAWsT+Y,aAAO,EAAE;AAAE9P,cAAM,EAAE,QAAV;AAAoBynB,2BAAmB,EAAE;AAAzC,OAX/T;AAWiYpa,cAAQ,EAAE,CAAC,aAAD,CAX3Y;AAW4Z0C,cAAQ,EAAE,CAAC,iEAA0B,CAACwW,mCAAD,CAA1B,CAAD,EAAmE,wEAAnE,CAXta;AAW6gB5L,wBAAkB,EAAE0I,GAXjiB;AAWsiBzI,WAAK,EAAE,EAX7iB;AAWijBC,UAAI,EAAE,EAXvjB;AAW2jB4K,YAAM,EAAE,CAAC,CAAC,CAAD,EAAI,qBAAJ,CAAD,EAA6B,CAAC,OAAD,EAAU,EAAV,CAA7B,EAA4C,CAAC,CAAD,EAAI,8BAAJ,CAA5C,EAAiF,CAAC,MAAD,EAAS,UAAT,EAAqB,CAArB,EAAwB,oBAAxB,EAA8C,qBAA9C,EAAqE,CAArE,EAAwE,IAAxE,EAA8E,UAA9E,EAA0F,SAA1F,EAAqG,UAArG,EAAiH,UAAjH,EAA6H,QAA7H,EAAuI,OAAvI,CAAjF,EAAkO,CAAC,OAAD,EAAU,EAAV,CAAlO,EAAiP,CAAC,WAAD,EAAc,EAAd,EAAkB,CAAlB,EAAqB,qBAArB,EAA4C,qBAA5C,EAAmE,CAAnE,EAAsE,kBAAtE,EAA0F,mBAA1F,EAA+G,iBAA/G,EAAkI,mBAAlI,EAAuJ,oBAAvJ,CAAjP,EAA+Z,CAAC,CAAD,EAAI,oBAAJ,EAA0B,gCAA1B,CAA/Z,EAA4d,CAAC,CAAD,EAAI,oBAAJ,CAA5d,EAAuf,CAAC,CAAD,EAAI,yBAAJ,CAAvf,EAAuhB,CAAC,SAAD,EAAY,KAAZ,EAAmB,WAAnB,EAAgC,OAAhC,EAAyC,SAAzC,EAAoD,WAApD,EAAiE,CAAjE,EAAoE,KAApE,EAA2E,OAA3E,EAAoF,UAApF,EAAgG,CAAhG,EAAmG,wBAAnG,CAAvhB,EAAqpB,CAAC,MAAD,EAAS,MAAT,EAAiB,QAAjB,EAA2B,OAA3B,EAAoC,GAApC,EAAyC,2BAAzC,EAAsE,CAAtE,EAAyE,6BAAzE,CAArpB,EAA8vB,CAAC,CAAD,EAAI,wBAAJ,CAA9vB,EAA6xB,CAAC,CAAD,EAAI,oBAAJ,EAA0B,CAA1B,EAA6B,mBAA7B,CAA7xB,EAAg1B,CAAC,eAAD,EAAkB,EAAlB,CAAh1B,EAAu2B,CAAC,CAAD,EAAI,SAAJ,EAAe,MAAf,CAAv2B,CAXnkB;AAWm8C5S,cAAQ,EAAE,SAASoX,oBAAT,CAA8BpT,EAA9B,EAAkCC,GAAlC,EAAuC;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACtiD;;AACA,uEAAsB,CAAtB,EAAyB,OAAzB,EAAkC,CAAlC,EAAqC,CAArC;;AACA,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;;AACA,uEAAsB,CAAtB,EAAyB,OAAzB,EAAkC,CAAlC,EAAqC,CAArC;;AACA,mEAAkB,QAAlB,EAA4B,SAASqT,4CAAT,CAAsDC,MAAtD,EAA8D;AAAE,mBAAOrT,GAAG,CAACsT,mBAAJ,CAAwBD,MAAxB,CAAP;AAAyC,WAArI,EAAuI,OAAvI,EAAgJ,SAASE,2CAAT,CAAqDF,MAArD,EAA6D;AAAE,mBAAOrT,GAAG,CAACwT,aAAJ,CAAkBH,MAAlB,CAAP;AAAmC,WAAlP;;AACA;;AACA,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;;AACA,kEAAiB,CAAjB,EAAoB,KAApB,EAA2B,CAA3B;;AACA;;AACA,kEAAiB,CAAjB,EAAoB,KAApB,EAA2B,CAA3B;;AACA,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;;AACA;;AACA,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;;AACA,kEAAiB,EAAjB,EAAqB,MAArB,EAA6B,EAA7B;;AACA;;AACA;;AACA,kEAAiB,EAAjB,EAAqB,KAArB,EAA4B,EAA5B;;AACA;;AACA;;AACA,uEAAsB,EAAtB,EAA0B,MAA1B,EAAkC,EAAlC,EAAsC,EAAtC;;AACA,mEAAkB,mBAAlB,EAAuC,SAASI,uDAAT,GAAmE;AAAE,mBAAOzT,GAAG,CAAC0T,kBAAJ,EAAP;AAAkC,WAA9I;;AACA,uEAAsB,EAAtB,EAA0B,MAA1B,EAAkC,EAAlC;;AACA,+DAAc,EAAd,EAAkB,MAAlB;;AACA;;AACA,qEAAoB,EAApB;;AACA;;AACA;AACH;;AAAC,YAAI3T,EAAE,GAAG,CAAT,EAAY;AACV,cAAM4T,GAAG,GAAG,0DAAmB,CAAnB,CAAZ;;AACA,cAAMC,GAAG,GAAG,0DAAmB,EAAnB,CAAZ;;AACA,oEAAmB,KAAnB,EAA0B5T,GAAG,CAAC6T,OAA9B;;AACA,kEAAiB,CAAjB;;AACA,oEAAmB,6CAAnB,EAAkE,CAACD,GAAG,CAACE,WAAL,IAAoB,CAACF,GAAG,CAACE,WAAJ,CAAgBjkB,IAAhB,EAAvF;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,IAAlB,EAAwBmQ,GAAG,CAAC6T,OAA5B,EAAqC,UAArC,EAAiD7T,GAAG,CAACkT,QAArD,EAA+D,SAA/D,EAA0ElT,GAAG,CAAC2R,OAA9E,EAAuF,UAAvF,EAAmG3R,GAAG,CAAC0R,QAAvG,EAAiH,UAAjH,EAA6H1R,GAAG,CAACqQ,QAAjI;;AACA,oEAAmB,OAAnB,EAA4BrQ,GAAG,CAAC/f,KAAhC,EAAuC,MAAvC,EAA+C+f,GAAG,CAAC0Q,IAAnD,EAAyD,YAAzD,EAAuE1Q,GAAG,CAAC0D,SAAJ,IAAiB,IAAxF,EAA8F,iBAA9F,EAAiH1D,GAAG,CAAC2D,cAArH,EAAqI,cAArI,EAAqJ3D,GAAG,CAAC+T,eAAJ,EAArJ;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,kBAAlB,EAAsCJ,GAAtC,EAA2C,mBAA3C,EAAgE3T,GAAG,CAACgU,iBAAJ,EAAhE,EAAyF,iBAAzF,EAA4G,EAA5G,EAAgH,mBAAhH,EAAqI,IAArI,EAA2I,oBAA3I,EAAiK,8DAAuB,EAAvB,EAA2B1H,GAA3B,CAAjK;AACH;AAAE,OAlDqC;AAkDnC2H,gBAAU,EAAE,CAAC,gEAAD,EAAmB,wEAAnB,CAlDuB;AAkDuB5kB,YAAM,EAAE,CAAC,ozNAAD,CAlD/B;AAkDu1N4U,mBAAa,EAAE,CAlDt2N;AAkDy2NC,qBAAe,EAAE;AAlD13N,KAAzB,CAAnB;AAmDA;;AACAwL,eAAW,CAAC7xB,cAAZ,GAA6B;AAAA,aAAM,CAC/B;AAAEC,YAAI,EAAE;AAAR,OAD+B,EAE/B;AAAEA,YAAI,EAAE;AAAR,OAF+B,EAG/B;AAAEA,YAAI,EAAE;AAAR,OAH+B,EAI/B;AAAEA,YAAI,EAAE;AAAR,OAJ+B,EAK/B;AAAEA,YAAI,EAAE0wB,MAAR;AAAgBxwB,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE,uDAAR;AAAmBG,cAAI,EAAE,CAAC,UAAD;AAAzB,SAAD;AAA5B,OAL+B,EAM/B;AAAEH,YAAI,EAAEC,SAAR;AAAmBC,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD,EAAqB;AAAEA,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAACuxB,yBAAD;AAAtB,SAArB;AAA/B,OAN+B,EAO/B;AAAE1xB,YAAI,EAAE0wB,MAAR;AAAgBxwB,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD,EAAqB;AAAEA,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAAC,0FAAD;AAAtB,SAArB;AAA5B,OAP+B,EAQ/B;AAAEH,YAAI,EAAEC,SAAR;AAAmBC,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD,EAAqB;AAAEA,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAACmxB,4BAAD;AAAtB,SAArB;AAA/B,OAR+B,CAAN;AAAA,KAA7B;;AAUAM,eAAW,CAACxW,cAAZ,GAA6B;AACzBwK,eAAS,EAAE,CAAC;AAAE5lB,YAAI,EAAE,mDAAR;AAAeG,YAAI,EAAE,CAAC,YAAD;AAArB,OAAD,CADc;AAEzB0lB,oBAAc,EAAE,CAAC;AAAE7lB,YAAI,EAAE,mDAAR;AAAeG,YAAI,EAAE,CAAC,iBAAD;AAArB,OAAD,CAFS;AAGzB2X,QAAE,EAAE,CAAC;AAAE9X,YAAI,EAAE;AAAR,OAAD,CAHqB;AAIzBo1B,cAAQ,EAAE,CAAC;AAAEp1B,YAAI,EAAE;AAAR,OAAD,CAJe;AAKzB2yB,mBAAa,EAAE,CAAC;AAAE3yB,YAAI,EAAE;AAAR,OAAD,CALU;AAMzB4yB,UAAI,EAAE,CAAC;AAAE5yB,YAAI,EAAE;AAAR,OAAD,CANmB;AAOzBoL,YAAM,EAAE,CAAC;AAAEpL,YAAI,EAAE;AAAR,OAAD,CAPiB;AAQzB6yB,yBAAmB,EAAE,CAAC;AAAE7yB,YAAI,EAAE;AAAR,OAAD,CARI;AASzBmC,WAAK,EAAE,CAAC;AAAEnC,YAAI,EAAE;AAAR,OAAD,CATkB;AAUzBw0B,mBAAa,EAAE,CAAC;AAAEx0B,YAAI,EAAE,uDAAR;AAAmBG,YAAI,EAAE,CAAC,OAAD;AAAzB,OAAD,CAVU;AAWzB+0B,YAAM,EAAE,CAAC;AAAEl1B,YAAI,EAAE,uDAAR;AAAmBG,YAAI,EAAE,CAAC,gEAAD;AAAzB,OAAD,CAXiB;AAYzB0zB,aAAO,EAAE,CAAC;AAAE7zB,YAAI,EAAE;AAAR,OAAD,CAZgB;AAazB4zB,cAAQ,EAAE,CAAC;AAAE5zB,YAAI,EAAE;AAAR,OAAD,CAbe;AAczB+zB,mBAAa,EAAE,CAAC;AAAE/zB,YAAI,EAAE;AAAR,OAAD;AAdU,KAA7B;AAgBA;;AAAc,KAAC,YAAY;AAAE,sEAAyB4xB,WAAzB,EAAsC,CAAC;AAC5D5xB,YAAI,EAAE,uDADsD;AAE5DG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,cADX;AAEC8P,kBAAQ,EAAE,giEAFX;AAGCxF,kBAAQ,EAAE,aAHX;AAIClB,cAAI,EAAE;AACF,qBAAS,cADP;AAEF,oBAAQ,IAFN;AAGF,+BAAmB,MAHjB;AAIF,kDAAsC,eAJpC;AAKF,4CAAgC,SAL9B;AAMF,6CAAiC,UAN/B;AAOF,iDAAqC,2BAPnC;AAQF;AARE,WAJP;AAcCoE,mBAAS,EAAE,CAACgW,mCAAD,CAdZ;AAeC1W,gBAAM,EAAE,CAAC,eAAD,EAAkB,OAAlB,EAA2B,UAA3B,CAfT;AAgBCkL,uBAAa,EAAE,gEAAkBE,IAhBlC;AAiBCD,yBAAe,EAAE,sEAAwBE,MAjB1C;AAkBC/U,gBAAM,EAAE,CAAC,ozNAAD;AAlBT,SAAD;AAFsD,OAAD,CAAtC,EAsBrB,YAAY;AAAE,eAAO,CAAC;AAAEvR,cAAI,EAAE;AAAR,SAAD,EAA8B;AAAEA,cAAI,EAAE;AAAR,SAA9B,EAAkE;AAAEA,cAAI,EAAE;AAAR,SAAlE,EAAiG;AAAEA,cAAI,EAAE;AAAR,SAAjG,EAA0H;AAAEA,cAAI,EAAE0wB,MAAR;AAAgBxwB,oBAAU,EAAE,CAAC;AACpKF,gBAAI,EAAE,uDAD8J;AAEpKG,gBAAI,EAAE,CAAC,UAAD;AAF8J,WAAD;AAA5B,SAA1H,EAGX;AAAEH,cAAI,EAAEC,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAClCF,gBAAI,EAAE;AAD4B,WAAD,EAElC;AACCA,gBAAI,EAAE,oDADP;AAECG,gBAAI,EAAE,CAACuxB,yBAAD;AAFP,WAFkC;AAA/B,SAHW,EAQX;AAAE1xB,cAAI,EAAE0wB,MAAR;AAAgBxwB,oBAAU,EAAE,CAAC;AAC/BF,gBAAI,EAAE;AADyB,WAAD,EAE/B;AACCA,gBAAI,EAAE,oDADP;AAECG,gBAAI,EAAE,CAAC,0FAAD;AAFP,WAF+B;AAA5B,SARW,EAaX;AAAEH,cAAI,EAAEC,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAClCF,gBAAI,EAAE;AAD4B,WAAD,EAElC;AACCA,gBAAI,EAAE,oDADP;AAECG,gBAAI,EAAE,CAACmxB,4BAAD;AAFP,WAFkC;AAA/B,SAbW,CAAP;AAkBF,OAxCS,EAwCP;AAAE1L,iBAAS,EAAE,CAAC;AACxB5lB,cAAI,EAAE,mDADkB;AAExBG,cAAI,EAAE,CAAC,YAAD;AAFkB,SAAD,CAAb;AAGV0lB,sBAAc,EAAE,CAAC;AACjB7lB,cAAI,EAAE,mDADW;AAEjBG,cAAI,EAAE,CAAC,iBAAD;AAFW,SAAD,CAHN;AAMV2X,UAAE,EAAE,CAAC;AACL9X,cAAI,EAAE;AADD,SAAD,CANM;AAQV2yB,qBAAa,EAAE,CAAC;AAChB3yB,cAAI,EAAE;AADU,SAAD,CARL;AAUV4yB,YAAI,EAAE,CAAC;AACP5yB,cAAI,EAAE;AADC,SAAD,CAVI;AAYVoL,cAAM,EAAE,CAAC;AACTpL,cAAI,EAAE;AADG,SAAD,CAZE;AAcV6yB,2BAAmB,EAAE,CAAC;AACtB7yB,cAAI,EAAE;AADgB,SAAD,CAdX;AAgBVo1B,gBAAQ,EAAE,CAAC;AACXp1B,cAAI,EAAE;AADK,SAAD,CAhBA;AAkBV6zB,eAAO,EAAE,CAAC;AACV7zB,cAAI,EAAE;AADI,SAAD,CAlBC;AAoBV4zB,gBAAQ,EAAE,CAAC;AACX5zB,cAAI,EAAE;AADK,SAAD,CApBA;AAsBV+zB,qBAAa,EAAE,CAAC;AAChB/zB,cAAI,EAAE;AADU,SAAD,CAtBL;AAwBVmC,aAAK,EAAE,CAAC;AACRnC,cAAI,EAAE;AADE,SAAD,CAxBG;AA0BVw0B,qBAAa,EAAE,CAAC;AAChBx0B,cAAI,EAAE,uDADU;AAEhBG,cAAI,EAAE,CAAC,OAAD;AAFU,SAAD,CA1BL;AA6BV+0B,cAAM,EAAE,CAAC;AACTl1B,cAAI,EAAE,uDADG;AAETG,cAAI,EAAE,CAAC,gEAAD;AAFG,SAAD;AA7BE,OAxCO;AAwEb,KAxEF;;AAyEd,QAAI,KAAJ,EAAW,CAwIV;AAED;;;;;;AAKA;;;AACA,QAAMi2B,+BAA+B,GAAG;AACpC1yB,aAAO,EAAE,4DAD2B;AAEpCid,iBAAW,EAAE;AAAY;;;AAGzB;AAAA,eAAM0V,4BAAN;AAAA,OAHa,CAFuB;AAMpCxE,WAAK,EAAE;AAN6B,KAAxC;AAQA;;;;;;QAKMwE,4B;;;;;;;;;;;;MAAqC,wE;;AAE3CA,gCAA4B,CAACz2B,IAA7B,GAAoC,SAAS02B,oCAAT,CAA8Cx2B,CAA9C,EAAiD;AAAE,aAAOy2B,yCAAyC,CAACz2B,CAAC,IAAIu2B,4BAAN,CAAhD;AAAsF,KAA7K;;AACAA,gCAA4B,CAAC9d,IAA7B,GAAoC,gEAAyB;AAAEvY,UAAI,EAAEq2B,4BAAR;AAAsC7d,eAAS,EAAE,CAAC,CAAC,cAAD,EAAiB,UAAjB,EAA6B,EAA7B,EAAiC,iBAAjC,EAAoD,EAApD,CAAD,EAA0D,CAAC,cAAD,EAAiB,UAAjB,EAA6B,EAA7B,EAAiC,aAAjC,EAAgD,EAAhD,CAA1D,EAA+G,CAAC,cAAD,EAAiB,UAAjB,EAA6B,EAA7B,EAAiC,SAAjC,EAA4C,EAA5C,CAA/G,CAAjD;AAAkN2C,cAAQ,EAAE,CAAC,iEAA0B,CAACib,+BAAD,CAA1B,CAAD,EAA+D,wEAA/D;AAA5N,KAAzB,CAApC;;AACA,QAAMG,yCAAyC,GAAG,oEAA6BF,4BAA7B,CAAlD;AACA;;;AAAc,KAAC,YAAY;AAAE,sEAAyBA,4BAAzB,EAAuD,CAAC;AAC7Er2B,YAAI,EAAE,uDADuE;AAE7EG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,+HADT;AAGCwN,mBAAS,EAAE,CAACya,+BAAD;AAHZ,SAAD;AAFuE,OAAD,CAAvD,EAOrB,IAPqB,EAOf,IAPe;AAOP,KAPR;AASd;;;;;;AAKA;;;AAGA;;;QACMI,mC;;;;AAENA,uCAAmC,CAAChb,IAApC,GAA2C,+DAAwB;AAAExb,UAAI,EAAEw2B;AAAR,KAAxB,CAA3C;AACAA,uCAAmC,CAAC/a,IAApC,GAA2C,+DAAwB;AAAEpb,aAAO,EAAE,SAASo2B,2CAAT,CAAqD32B,CAArD,EAAwD;AAAE,eAAO,KAAKA,CAAC,IAAI02B,mCAAV,GAAP;AAA0D;AAA/H,KAAxB,CAA3C;;AACA,KAAC,YAAY;AAAE,OAAC,OAAO3a,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,iEAA0B2a,mCAA1B,EAA+D;AAAE1a,oBAAY,EAAE,CAACua,4BAAD,CAAhB;AAAgDta,eAAO,EAAE,CAACsa,4BAAD;AAAzD,OAA/D,CAAnD;AAA+M,KAA9N;AACA;;;AAAc,KAAC,YAAY;AAAE,sEAAyBG,mCAAzB,EAA8D,CAAC;AACpFx2B,YAAI,EAAE,sDAD8E;AAEpFG,YAAI,EAAE,CAAC;AACC4b,iBAAO,EAAE,CAACsa,4BAAD,CADV;AAECva,sBAAY,EAAE,CAACua,4BAAD;AAFf,SAAD;AAF8E,OAAD,CAA9D,EAMrB,IANqB,EAMf,IANe;AAMP,KANR;;QAORK,iB;;;;AAENA,qBAAiB,CAAClb,IAAlB,GAAyB,+DAAwB;AAAExb,UAAI,EAAE02B;AAAR,KAAxB,CAAzB;AACAA,qBAAiB,CAACjb,IAAlB,GAAyB,+DAAwB;AAAEpb,aAAO,EAAE,SAASs2B,yBAAT,CAAmC72B,CAAnC,EAAsC;AAAE,eAAO,KAAKA,CAAC,IAAI42B,iBAAV,GAAP;AAAwC,OAA3F;AAA6F9a,aAAO,EAAE,CAAC,CAC5I,sEAD4I,EAC3H,sEAD2H,EAC1G,sEAD0G,EAE5I4a,mCAF4I,CAAD,EAI/I,sEAJ+I,EAK/IA,mCAL+I;AAAtG,KAAxB,CAAzB;;AAMA,KAAC,YAAY;AAAE,OAAC,OAAO3a,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,iEAA0B6a,iBAA1B,EAA6C;AAAE5a,oBAAY,EAAE,wBAAY;AAAE,iBAAO,CAAC8V,WAAD,CAAP;AAAuB,SAArD;AAAuDhW,eAAO,EAAE,mBAAY;AAAE,iBAAO,CAAC,sEAAD,EAAkB,sEAAlB,EAAmC,sEAAnC,EAC5L4a,mCAD4L,CAAP;AAC9I,SADgE;AAC9Dza,eAAO,EAAE,mBAAY;AAAE,iBAAO,CAAC6V,WAAD,EACvE,sEADuE,EAEvE4E,mCAFuE,CAAP;AAEzB;AAHgE,OAA7C,CAAnD;AAGsC,KAHrD;AAIA;;;AAAc,KAAC,YAAY;AAAE,sEAAyBE,iBAAzB,EAA4C,CAAC;AAClE12B,YAAI,EAAE,sDAD4D;AAElEG,YAAI,EAAE,CAAC;AACCyb,iBAAO,EAAE,CACL,sEADK,EACY,sEADZ,EAC6B,sEAD7B,EAEL4a,mCAFK,CADV;AAKCza,iBAAO,EAAE,CAAC6V,WAAD,EAAc,sEAAd,EAA+B4E,mCAA/B,CALV;AAMC1a,sBAAY,EAAE,CAAC8V,WAAD;AANf,SAAD;AAF4D,OAAD,CAA5C,EAUrB,IAVqB,EAUf,IAVe;AAUP,KAVR;AAYd;;;;;;AAMA;;;AAMA;;;;;;;;;;;;;;;;;;AC16BA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAYA;;;;;;AAKA;;;AAOA,QAAMzP,GAAG,GAAG,CAAC,WAAD,CAAZ;AACA,QAAMqM,GAAG,GAAG,CAAC,qBAAD,CAAZ;AACA,QAAMC,GAAG,GAAG,CAAC,gBAAD,CAAZ;AACA,QAAMC,GAAG,GAAG,CAAC,OAAD,CAAZ;;AACA,aAASkI,oCAAT,CAA8C3U,EAA9C,EAAkDC,GAAlD,EAAuD;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AACjE,8EAA+B,CAA/B;;AACA,qEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,EAAhC;;AACA,gEAAiB,CAAjB,EAAoB,KAApB,EAA2B,EAA3B;;AACA,gEAAiB,CAAjB,EAAoB,KAApB,EAA2B,EAA3B;;AACA,gEAAiB,CAAjB,EAAoB,KAApB,EAA2B,EAA3B;;AACA;;AACA,qEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,EAAhC;;AACA,gEAAiB,CAAjB,EAAoB,KAApB,EAA2B,EAA3B;;AACA,gEAAiB,CAAjB,EAAoB,KAApB,EAA2B,EAA3B;;AACA,gEAAiB,CAAjB,EAAoB,KAApB,EAA2B,EAA3B;;AACA;;AACA;AACH;AAAE;;AACH,aAAS4U,2BAAT,CAAqC5U,EAArC,EAAyCC,GAAzC,EAA8C;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AACxD,qEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,EAAhC;;AACA,mEAAoB,CAApB,EAAuB,CAAvB;;AACA;AACH;AAAE;;AACH,aAAS6U,4CAAT,CAAsD7U,EAAtD,EAA0DC,GAA1D,EAA+D;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AACzE,8EAA+B,CAA/B;;AACA,mEAAoB,CAApB,EAAuB,CAAvB;;AACA,qEAAsB,CAAtB,EAAyB,MAAzB;;AACA,6DAAc,CAAd;;AACA;;AACA;AACH;;AAAC,UAAIA,EAAE,GAAG,CAAT,EAAY;AACV,YAAM8U,OAAO,GAAG,4DAAqB,CAArB,CAAhB;;AACA,gEAAiB,CAAjB;;AACA,wEAAyBA,OAAO,CAACC,QAAR,CAAiBzJ,WAA1C;AACH;AAAE;;AACH,aAAS0J,+BAAT,CAAyChV,EAAzC,EAA6CC,GAA7C,EAAkD;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AAC5D,mEAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAAC,eAAD,EAAkB,MAAlB,CAA1B;AACH;AAAE;;AACH,aAASiV,oCAAT,CAA8CjV,EAA9C,EAAkDC,GAAlD,EAAuD;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AACjE,qEAAsB,CAAtB,EAAyB,MAAzB,EAAiC,EAAjC;;AACA,6DAAc,CAAd,EAAiB,IAAjB;;AACA;AACH;AAAE;;AACH,aAASkV,6BAAT,CAAuClV,EAAvC,EAA2CC,GAA3C,EAAgD;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AAC1D,YAAMmV,IAAI,GAAG,gEAAb;;AACA,qEAAsB,CAAtB,EAAyB,OAAzB,EAAkC,EAAlC,EAAsC,EAAtC;;AACA,iEAAkB,mBAAlB,EAAuC,SAASC,gEAAT,GAA4E;AAAE,sEAAqBD,IAArB;;AAA4B,cAAME,OAAO,GAAG,6DAAhB;;AAAwC,iBAAOA,OAAO,CAACC,gBAAR,EAAP;AAAoC,SAA7N;;AACA,iEAAkB,CAAlB,EAAqBT,4CAArB,EAAmE,CAAnE,EAAsE,CAAtE,EAAyE,cAAzE,EAAyF,EAAzF;;AACA,iEAAkB,CAAlB,EAAqBG,+BAArB,EAAsD,CAAtD,EAAyD,CAAzD,EAA4Dh3B,SAA5D,EAAuE,EAAvE;;AACA,iEAAkB,CAAlB,EAAqBi3B,oCAArB,EAA2D,CAA3D,EAA8D,CAA9D,EAAiE,MAAjE,EAAyE,EAAzE;;AACA;AACH;;AAAC,UAAIjV,EAAE,GAAG,CAAT,EAAY;AACV,YAAMuV,MAAM,GAAG,6DAAf;;AACA,kEAAmB,WAAnB,EAAgCA,MAAM,CAACR,QAAP,CAAgBS,KAAhB,IAAyB,CAACD,MAAM,CAACE,kBAAjE,EAAqF,sBAArF,EAA6GF,MAAM,CAACR,QAAP,CAAgBS,KAAhB,IAAyB,CAACD,MAAM,CAACE,kBAA9I,EAAkK,YAAlK,EAAgLF,MAAM,CAAChG,KAAP,IAAgB,QAAhM,EAA0M,UAA1M,EAAsNgG,MAAM,CAAChG,KAAP,IAAgB,MAAtO;;AACA,iEAAkB,2BAAlB,EAA+CgG,MAAM,CAACG,UAAP,IAAqB,SAApE,EAA+E,IAA/E,EAAqFH,MAAM,CAACI,QAA5F,EAAsG,UAAtG,EAAkHJ,MAAM,CAACK,SAAP,EAAlH;;AACA,kEAAmB,KAAnB,EAA0BL,MAAM,CAACR,QAAP,CAAgBlf,EAA1C,EAA8C,WAA9C,EAA2D0f,MAAM,CAACR,QAAP,CAAgBlf,EAA3E;;AACA,gEAAiB,CAAjB;;AACA,iEAAkB,cAAlB,EAAkC,KAAlC;;AACA,gEAAiB,CAAjB;;AACA,iEAAkB,cAAlB,EAAkC,IAAlC;;AACA,gEAAiB,CAAjB;;AACA,iEAAkB,MAAlB,EAA0B,CAAC0f,MAAM,CAACM,kBAAR,IAA8BN,MAAM,CAACR,QAAP,CAAgB5B,QAA9C,IAA0D,CAACoC,MAAM,CAACR,QAAP,CAAgBpD,QAArG;AACH;AAAE;;AACH,aAASmE,4BAAT,CAAsC9V,EAAtC,EAA0CC,GAA1C,EAA+C;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AACzD,qEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,EAAhC;;AACA,mEAAoB,CAApB,EAAuB,CAAvB;;AACA;AACH;AAAE;;AACH,aAAS+V,4BAAT,CAAsC/V,EAAtC,EAA0CC,GAA1C,EAA+C;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AACzD,qEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,EAAhC,EAAoC,EAApC;;AACA,gEAAiB,CAAjB,EAAoB,MAApB,EAA4B,EAA5B;;AACA;AACH;;AAAC,UAAIA,EAAE,GAAG,CAAT,EAAY;AACV,YAAMgW,MAAM,GAAG,6DAAf;;AACA,gEAAiB,CAAjB;;AACA,kEAAmB,YAAnB,EAAiCA,MAAM,CAACzG,KAAP,IAAgB,QAAjD,EAA2D,UAA3D,EAAuEyG,MAAM,CAACzG,KAAP,IAAgB,MAAvF;AACH;AAAE;;AACH,aAAS0G,4BAAT,CAAsCjW,EAAtC,EAA0CC,GAA1C,EAA+C;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AACzD,qEAAsB,CAAtB,EAAyB,KAAzB;;AACA,mEAAoB,CAApB,EAAuB,CAAvB;;AACA;AACH;;AAAC,UAAIA,EAAE,GAAG,CAAT,EAAY;AACV,YAAMkW,MAAM,GAAG,6DAAf;;AACA,iEAAkB,qBAAlB,EAAyCA,MAAM,CAACC,wBAAhD;AACH;AAAE;;AACH,aAASC,kCAAT,CAA4CpW,EAA5C,EAAgDC,GAAhD,EAAqD;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AAC/D,qEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,EAAhC;;AACA,6DAAc,CAAd;;AACA;AACH;;AAAC,UAAIA,EAAE,GAAG,CAAT,EAAY;AACV,YAAMqW,OAAO,GAAG,4DAAqB,CAArB,CAAhB;;AACA,iEAAkB,IAAlB,EAAwBA,OAAO,CAACC,YAAhC;;AACA,gEAAiB,CAAjB;;AACA,wEAAyBD,OAAO,CAACE,SAAjC;AACH;AAAE;;AACH,aAASC,4BAAT,CAAsCxW,EAAtC,EAA0CC,GAA1C,EAA+C;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AACzD,qEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,EAAhC;;AACA,iEAAkB,CAAlB,EAAqBoW,kCAArB,EAAyD,CAAzD,EAA4D,CAA5D,EAA+D,KAA/D,EAAsE,EAAtE;;AACA,mEAAoB,CAApB,EAAuB,CAAvB;;AACA,gEAAiB,CAAjB,EAAoB,KAApB,EAA2B,EAA3B;;AACA,mEAAoB,CAApB,EAAuB,CAAvB;;AACA;AACH;;AAAC,UAAIpW,EAAE,GAAG,CAAT,EAAY;AACV,YAAMyW,MAAM,GAAG,6DAAf;;AACA,iEAAkB,qBAAlB,EAAyCA,MAAM,CAACN,wBAAhD;;AACA,gEAAiB,CAAjB;;AACA,iEAAkB,MAAlB,EAA0BM,MAAM,CAACF,SAAjC;AACH;AAAE;;AACH,QAAM7J,GAAG,GAAG,CAAC,GAAD,EAAM,CAAC,CAAC,EAAD,EAAK,WAAL,EAAkB,EAAlB,CAAD,CAAN,EAA+B,CAAC,CAAC,iBAAD,CAAD,CAA/B,EAAsD,CAAC,CAAC,WAAD,CAAD,CAAtD,EAAuE,CAAC,CAAC,EAAD,EAAK,WAAL,EAAkB,EAAlB,CAAD,CAAvE,EAAgG,CAAC,CAAC,WAAD,CAAD,CAAhG,EAAiH,CAAC,CAAC,UAAD,EAAa,CAAb,EAAgB,OAAhB,EAAyB,KAAzB,CAAD,CAAjH,EAAoJ,CAAC,CAAC,UAAD,EAAa,OAAb,EAAsB,KAAtB,CAAD,CAApJ,CAAZ;AACA,QAAMC,GAAG,GAAG,CAAC,GAAD,EAAM,aAAN,EAAqB,iBAArB,EAAwC,WAAxC,EAAqD,aAArD,EAAoE,WAApE,EAAiF,6BAAjF,EAAgH,uBAAhH,CAAZ;AACA,QAAI5X,YAAY,GAAG,CAAnB;AACA;;;;QAGM2hB,Q,GACF,oBAAc;AAAA;;AACV,WAAK7gB,EAAL,uBAAuBd,YAAY,EAAnC;AACH,K;;AAEL2hB,YAAQ,CAAC/4B,IAAT,GAAgB,SAASg5B,gBAAT,CAA0B94B,CAA1B,EAA6B;AAAE,aAAO,KAAKA,CAAC,IAAI64B,QAAV,GAAP;AAA+B,KAA9E;;AACAA,YAAQ,CAACpgB,IAAT,GAAgB,gEAAyB;AAAEvY,UAAI,EAAE24B,QAAR;AAAkBngB,eAAS,EAAE,CAAC,CAAC,WAAD,CAAD,CAA7B;AAA8CgK,eAAS,EAAE,CAAC,MAAD,EAAS,OAAT,EAAkB,CAAlB,EAAqB,WAArB,CAAzD;AAA4FmH,cAAQ,EAAE,CAAtG;AAAyGC,kBAAY,EAAE,SAASiP,qBAAT,CAA+B5W,EAA/B,EAAmCC,GAAnC,EAAwC;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAC9M,oEAAmB,IAAnB,EAAyBC,GAAG,CAACpK,EAA7B;AACH;AAAE,OAFkC;AAEhCmD,YAAM,EAAE;AAAEnD,UAAE,EAAE;AAAN;AAFwB,KAAzB,CAAhB;AAGA6gB,YAAQ,CAACvd,cAAT,GAA0B;AACtBtD,QAAE,EAAE,CAAC;AAAE9X,YAAI,EAAE;AAAR,OAAD;AADkB,KAA1B;AAGA;;AAAc,KAAC,YAAY;AAAE,sEAAyB24B,QAAzB,EAAmC,CAAC;AACzD34B,YAAI,EAAE,uDADmD;AAEzDG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,WADX;AAECoJ,cAAI,EAAE;AACF,qBAAS,WADP;AAEF,oBAAQ,OAFN;AAGF,yBAAa;AAHX;AAFP,SAAD;AAFmD,OAAD,CAAnC,EAUrB,YAAY;AAAE,eAAO,EAAP;AAAY,OAVL,EAUO;AAAEO,UAAE,EAAE,CAAC;AAC/B9X,cAAI,EAAE;AADyB,SAAD;AAAN,OAVP;AAYb,KAZF;;AAad,QAAI,KAAJ,EAAW,CAGV;AAED;;;;;;AAKA;;;;;;;AAKA,QAAM84B,sBAAsB,GAAG;AAC3B;;;AAGAC,wBAAkB,EAAE,oEAAQ,oBAAR,EAA8B,CAC9C;AACA,wEAAM,OAAN,EAAe,kEAAM;AAAEC,eAAO,EAAE,CAAX;AAAcvnB,iBAAS,EAAE;AAAzB,OAAN,CAAf,CAF8C,EAG9C,uEAAW,eAAX,EAA4B,CACxB,kEAAM;AAAEunB,eAAO,EAAE,CAAX;AAAcvnB,iBAAS,EAAE;AAAzB,OAAN,CADwB,EAExB,oEAAQ,wCAAR,CAFwB,CAA5B,CAH8C,CAA9B;AAJO,KAA/B;AAcA;;;;;;AAKA;;;;;;QAKMwnB,mB;;;;AAENA,uBAAmB,CAACr5B,IAApB,GAA2B,SAASs5B,2BAAT,CAAqCp5B,CAArC,EAAwC;AAAE,aAAO,KAAKA,CAAC,IAAIm5B,mBAAV,GAAP;AAA0C,KAA/G;;AACAA,uBAAmB,CAAC1gB,IAApB,GAA2B,gEAAyB;AAAEvY,UAAI,EAAEi5B;AAAR,KAAzB,CAA3B;AACA;;AAAc,KAAC,YAAY;AAAE,sEAAyBA,mBAAzB,EAA8C,CAAC;AACpEj5B,YAAI,EAAE;AAD8D,OAAD,CAA9C,EAErB,IAFqB,EAEf,IAFe;AAEP,KAFR;;AAGd,QAAI,KAAJ,EAAW,CAoFV;AAED;;;;;;AAKA;;;;;;;;AAOA;;;;;;AAIA,aAASm5B,uCAAT,GAAmD;AAC/C,aAAOh9B,KAAK,CAAC,8DAAD,CAAZ;AACH;AACD;;;;;;;AAKA,aAASi9B,kCAAT,CAA4ChK,KAA5C,EAAmD;AAC/C,aAAOjzB,KAAK,oDAA4CizB,KAA5C,UAAZ;AACH;AACD;;;;;;AAIA,aAASiK,kCAAT,GAA8C;AAC1C,aAAOl9B,KAAK,CAAC,oDAAD,CAAZ;AACH;AAED;;;;;;AAKA;;;AACA,QAAIm9B,cAAc,GAAG,CAArB;AACA;;;;QAGMC,O,GACF,mBAAc;AAAA;;AACV;;;AAGA,WAAKnK,KAAL,GAAa,OAAb;AACA;;;;AAGA,WAAKtX,EAAL,sBAAsBwhB,cAAc,EAApC;AACH,K;;AAELC,WAAO,CAAC35B,IAAR,GAAe,SAAS45B,eAAT,CAAyB15B,CAAzB,EAA4B;AAAE,aAAO,KAAKA,CAAC,IAAIy5B,OAAV,GAAP;AAA8B,KAA3E;;AACAA,WAAO,CAAChhB,IAAR,GAAe,gEAAyB;AAAEvY,UAAI,EAAEu5B,OAAR;AAAiB/gB,eAAS,EAAE,CAAC,CAAC,UAAD,CAAD,CAA5B;AAA4CgK,eAAS,EAAE,CAAC,CAAD,EAAI,UAAJ,CAAvD;AAAwEmH,cAAQ,EAAE,CAAlF;AAAqFC,kBAAY,EAAE,SAAS6P,oBAAT,CAA8BxX,EAA9B,EAAkCC,GAAlC,EAAuC;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACxL,oEAAmB,IAAnB,EAAyBC,GAAG,CAACpK,EAA7B,EAAiC,OAAjC,EAA0C,IAA1C;;AACA,oEAAmB,WAAnB,EAAgCoK,GAAG,CAACkN,KAAJ,IAAa,KAA7C;AACH;AAAE,OAHiC;AAG/BnU,YAAM,EAAE;AAAEmU,aAAK,EAAE,OAAT;AAAkBtX,UAAE,EAAE;AAAtB;AAHuB,KAAzB,CAAf;AAIAyhB,WAAO,CAACne,cAAR,GAAyB;AACrBgU,WAAK,EAAE,CAAC;AAAEpvB,YAAI,EAAE;AAAR,OAAD,CADc;AAErB8X,QAAE,EAAE,CAAC;AAAE9X,YAAI,EAAE;AAAR,OAAD;AAFiB,KAAzB;AAIA;;AAAc,KAAC,YAAY;AAAE,sEAAyBu5B,OAAzB,EAAkC,CAAC;AACxDv5B,YAAI,EAAE,uDADkD;AAExDG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,UADX;AAECoJ,cAAI,EAAE;AACF,qBAAS,UADP;AAEF,iCAAqB,gBAFnB;AAGF,yBAAa,IAHX;AAIF;AACA,4BAAgB;AALd;AAFP,SAAD;AAFkD,OAAD,CAAlC,EAYrB,YAAY;AAAE,eAAO,EAAP;AAAY,OAZL,EAYO;AAAE6X,aAAK,EAAE,CAAC;AAClCpvB,cAAI,EAAE;AAD4B,SAAD,CAAT;AAExB8X,UAAE,EAAE,CAAC;AACL9X,cAAI,EAAE;AADD,SAAD;AAFoB,OAZP;AAgBb,KAhBF;;AAiBd,QAAI,KAAJ,EAAW,CAWV;AAED;;;;;;AAKA;;;;;QAGM05B,Q;;;;AAENA,YAAQ,CAAC95B,IAAT,GAAgB,SAAS+5B,gBAAT,CAA0B75B,CAA1B,EAA6B;AAAE,aAAO,KAAKA,CAAC,IAAI45B,QAAV,GAAP;AAA+B,KAA9E;;AACAA,YAAQ,CAACnhB,IAAT,GAAgB,gEAAyB;AAAEvY,UAAI,EAAE05B,QAAR;AAAkBlhB,eAAS,EAAE,CAAC,CAAC,WAAD,CAAD;AAA7B,KAAzB,CAAhB;AACA;;AAAc,KAAC,YAAY;AAAE,sEAAyBkhB,QAAzB,EAAmC,CAAC;AACzD15B,YAAI,EAAE,uDADmD;AAEzDG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE;AADX,SAAD;AAFmD,OAAD,CAAnC,EAKrB,IALqB,EAKf,IALe;AAKP,KALR;AAOd;;;;;;AAKA;;;;;;;;QAMMyrB,c;;;;AAENA,kBAAc,CAACh6B,IAAf,GAAsB,SAASi6B,sBAAT,CAAgC/5B,CAAhC,EAAmC;AAAE,aAAO,KAAKA,CAAC,IAAI85B,cAAV,GAAP;AAAqC,KAAhG;;AACAA,kBAAc,CAACrhB,IAAf,GAAsB,gEAAyB;AAAEvY,UAAI,EAAE45B,cAAR;AAAwBphB,eAAS,EAAE,CAAC,CAAC,iBAAD,CAAD;AAAnC,KAAzB,CAAtB;AACA;;AAAc,KAAC,YAAY;AAAE,sEAAyBohB,cAAzB,EAAyC,CAAC;AAC/D55B,YAAI,EAAE,uDADyD;AAE/DG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE;AADX,SAAD;AAFyD,OAAD,CAAzC,EAKrB,IALqB,EAKf,IALe;AAKP,KALR;AAOd;;;;;;AAKA;;;;;QAGM2rB,S;;;;AAENA,aAAS,CAACl6B,IAAV,GAAiB,SAASm6B,iBAAT,CAA2Bj6B,CAA3B,EAA8B;AAAE,aAAO,KAAKA,CAAC,IAAIg6B,SAAV,GAAP;AAAgC,KAAjF;;AACAA,aAAS,CAACvhB,IAAV,GAAiB,gEAAyB;AAAEvY,UAAI,EAAE85B,SAAR;AAAmBthB,eAAS,EAAE,CAAC,CAAC,EAAD,EAAK,WAAL,EAAkB,EAAlB,CAAD;AAA9B,KAAzB,CAAjB;AACA;;AAAc,KAAC,YAAY;AAAE,sEAAyBshB,SAAzB,EAAoC,CAAC;AAC1D95B,YAAI,EAAE,uDADoD;AAE1DG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE;AADX,SAAD;AAFoD,OAAD,CAApC,EAKrB,IALqB,EAKf,IALe;AAKP,KALR;AAOd;;;;;;AAKA;;;;;QAGM6rB,S;;;;AAENA,aAAS,CAACp6B,IAAV,GAAiB,SAASq6B,iBAAT,CAA2Bn6B,CAA3B,EAA8B;AAAE,aAAO,KAAKA,CAAC,IAAIk6B,SAAV,GAAP;AAAgC,KAAjF;;AACAA,aAAS,CAACzhB,IAAV,GAAiB,gEAAyB;AAAEvY,UAAI,EAAEg6B,SAAR;AAAmBxhB,eAAS,EAAE,CAAC,CAAC,EAAD,EAAK,WAAL,EAAkB,EAAlB,CAAD;AAA9B,KAAzB,CAAjB;AACA;;AAAc,KAAC,YAAY;AAAE,sEAAyBwhB,SAAzB,EAAoC,CAAC;AAC1Dh6B,YAAI,EAAE,uDADoD;AAE1DG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE;AADX,SAAD;AAFoD,OAAD,CAApC,EAKrB,IALqB,EAKf,IALe;AAKP,KALR;AAOd;;;;;;AAKA;;;AACA,QAAI+rB,cAAc,GAAG,CAArB;AACA;;AACA,QAAMC,kBAAkB,GAAG,IAA3B;AACA;;AACA,QAAMC,iBAAiB,GAAG,CAA1B;AACA;;;;;QAIMC,gB;AACF;;;AAGA,8BAAYhY,WAAZ,EAAyB;AAAA;;AACrB,WAAKA,WAAL,GAAmBA,WAAnB;AACH,K;;AAEL,QAAI,KAAJ,EAAW,CAGV;AACD;;;;;;;AAKA,QAAMiY,sBAAsB,GAAG,0EAAWD,gBAAX,EAA6B,SAA7B,CAA/B;AACA;;;;;;;AAKA,aAASE,0BAAT,GAAsC,CAAG;;AACzC,QAAI,KAAJ,EAAW,CAWV;AACD;;;;;;;AAKA,QAAMC,8BAA8B,GAAG,IAAI,4DAAJ,CAAmB,gCAAnB,CAAvC;AACA;;;;;;;AAMA,QAAMC,cAAc,GAAG,IAAI,4DAAJ,CAAmB,cAAnB,CAAvB;AACA;;;;QAGMC,Y;;;;;AACF;;;;;;;;;;AAUA,4BAAYrY,WAAZ,EAAyBkE,kBAAzB,EAA6CoU,YAA7C,EAA2D5hB,IAA3D,EAAiE6hB,SAAjE,EAA4E32B,SAA5E,EAAuF1H,OAAvF,EAAgG+zB,cAAhG,EAAgH;AAAA;;AAAA;;AAC5G,sCAAMjO,WAAN;AACA,gBAAKA,WAAL,GAAmBA,WAAnB;AACA,gBAAKkE,kBAAL,GAA0BA,kBAA1B;AACA,gBAAKxN,IAAL,GAAYA,IAAZ;AACA,gBAAK6hB,SAAL,GAAiBA,SAAjB;AACA,gBAAK32B,SAAL,GAAiBA,SAAjB;AACA,gBAAK1H,OAAL,GAAeA,OAAf;AACA;;;;;AAIA,gBAAKs+B,uCAAL,GAA+C,KAA/C;AACA;;;;AAGA,gBAAKC,oCAAL,GAA4C,KAA5C;AACA,gBAAKtU,UAAL,GAAkB,IAAI,4CAAJ,EAAlB;AACA;;;;AAGA,gBAAKuU,kBAAL,GAA0B,KAA1B;AACA;;;;AAGA,gBAAK3C,wBAAL,GAAgC,EAAhC;AACA,gBAAK4C,UAAL,GAAkB,EAAlB,CA1B4G,CA2B5G;;AACA,gBAAKzC,YAAL,sBAAgC2B,cAAc,EAA9C,EA5B4G,CA6B5G;;AACA,gBAAKtC,QAAL,kCAAwCsC,cAAc,EAAtD;AACA,gBAAKe,aAAL,GAAqBN,YAAY,GAAGA,YAAH,GAAkB,EAAnD;AACA,gBAAKO,UAAL,GAAkB,QAAKC,0BAAL,EAAlB;AACA,gBAAKC,kBAAL,GAA0B9K,cAAc,KAAK,gBAA7C,CAjC4G,CAkC5G;;AACA,gBAAKqH,UAAL,GAAmBiD,SAAS,IAAIA,SAAS,CAACjD,UAAxB,GAAsCiD,SAAS,CAACjD,UAAhD,GAA6D,QAA/E;AACA,gBAAK0D,mBAAL,GAA4BT,SAAS,IAAIA,SAAS,CAAC9C,kBAAV,IAAgC,IAA9C,GACvB8C,SAAS,CAAC9C,kBADa,GACQ,KADnC;AApC4G;AAsC/G;AACD;;;;;;;;;AAiGA;;;;;oDAK4B;AACxB,iBAAO,KAAKwD,uBAAL,IAAgC,KAAKjZ,WAA5C;AACH;AACD;;;;;;6CAGqB;AAAA;;AACjB,eAAKkZ,qBAAL;AACA;;;AACA,cAAM3S,OAAO,GAAG,KAAKoO,QAArB;;AACA,cAAIpO,OAAO,CAAC4S,WAAZ,EAAyB;AACrB,iBAAKnZ,WAAL,CAAiBvP,aAAjB,CAA+BhY,SAA/B,CAAyCC,GAAzC,+BAAoE6tB,OAAO,CAAC4S,WAA5E;AACH,WANgB,CAOjB;;;AACA5S,iBAAO,CAAC6S,YAAR,CAAqBz0B,IAArB,CAA0B;AAAW;AAAkB,cAA7B,CAA1B,EAAgE3J,SAAhE;AAA2E;;;AAG3E,sBAAM;AACF,mBAAI,CAACq+B,qBAAL;;AACA,mBAAI,CAACC,mBAAL;;AACA,mBAAI,CAACpV,kBAAL,CAAwBkB,YAAxB;AACH,WAPD,EARiB,CAgBjB;;AACA,cAAImB,OAAO,CAACgT,SAAR,IAAqBhT,OAAO,CAACgT,SAAR,CAAkBC,YAA3C,EAAyD;AACrDjT,mBAAO,CAACgT,SAAR,CAAkBC,YAAlB,CACK70B,IADL,CACU,iEAAU,KAAKwf,UAAf,CADV,EAEKnpB,SAFL;AAEgB;;;AAGhB;AAAA,qBAAM,OAAI,CAACkpB,kBAAL,CAAwBkB,YAAxB,EAAN;AAAA,aALA;AAMH,WAxBgB,CAyBjB;AACA;AACA;;;AACA,eAAKlrB,OAAL,CAAaqM,iBAAb;AAAgC;;;AAGhC,sBAAM;AACF,mBAAI,CAACrM,OAAL,CAAauK,QAAb,CAAsBC,YAAtB,GAAqCC,IAArC,CAA0C,iEAAU,OAAI,CAACwf,UAAf,CAA1C,EAAsEnpB,SAAtE;AAAiF;;;AAGjF,wBAAM;AACF,kBAAI,OAAI,CAACy9B,oCAAT,EAA+C;AAC3C,uBAAI,CAACvD,gBAAL;AACH;AACJ,aAPD;AAQH,WAZD,EA5BiB,CAyCjB;;;AACA,6DAAM,KAAKuE,eAAL,CAAqBliB,OAA3B,EAAoC,KAAKmiB,eAAL,CAAqBniB,OAAzD,EAAkEvc,SAAlE;AAA6E;;;AAG7E,sBAAM;AACF,mBAAI,CAACy9B,oCAAL,GAA4C,IAA5C;;AACA,mBAAI,CAACvU,kBAAL,CAAwBkB,YAAxB;AACH,WAND,EA1CiB,CAiDjB;;AACA,eAAKuU,aAAL,CAAmBpiB,OAAnB,CAA2B5S,IAA3B,CAAgC,iEAAU,IAAV,CAAhC,EAAiD3J,SAAjD;AAA4D;;;AAG5D,sBAAM;AACF,mBAAI,CAAC4+B,aAAL;;AACA,mBAAI,CAAC1V,kBAAL,CAAwBkB,YAAxB;AACH,WAND,EAlDiB,CAyDjB;;;AACA,eAAKyU,cAAL,CAAoBtiB,OAApB,CAA4B5S,IAA5B,CAAiC,iEAAU,IAAV,CAAjC,EAAkD3J,SAAlD;AAA6D;;;AAG7D,sBAAM;AACF,mBAAI,CAACs+B,mBAAL;;AACA,mBAAI,CAACpV,kBAAL,CAAwBkB,YAAxB;AACH,WAND;;AAOA,cAAI,KAAK1O,IAAT,EAAe;AACX,iBAAKA,IAAL,CAAU3N,MAAV,CAAiBpE,IAAjB,CAAsB,iEAAU,KAAKwf,UAAf,CAAtB,EAAkDnpB,SAAlD;AAA6D;;;AAG7D,wBAAM;AACF,kBAAI,OAAOsL,qBAAP,KAAiC,UAArC,EAAiD;AAC7C,uBAAI,CAACpM,OAAL,CAAaqM,iBAAb;AAAgC;;;AAGhC,4BAAM;AACFD,uCAAqB;AAAE;;;AAGvB;AAAA,2BAAM,OAAI,CAAC4uB,gBAAL,EAAN;AAAA,mBAHqB,CAArB;AAIH,iBARD;AASH,eAVD,MAWK;AACD,uBAAI,CAACA,gBAAL;AACH;AACJ,aAlBD;AAmBH;AACJ;AACD;;;;;;gDAGwB;AACpB,eAAKgE,qBAAL;;AACA,cAAI,KAAKV,uCAAT,EAAkD;AAC9C,iBAAKtD,gBAAL;AACH;AACJ;AACD;;;;;;0CAGkB;AACd;AACA,eAAKa,wBAAL,GAAgC,OAAhC;;AACA,eAAK7R,kBAAL,CAAwBrG,aAAxB;AACH;AACD;;;;;;sCAGc;AACV,eAAKsG,UAAL,CAAgB1jB,IAAhB;;AACA,eAAK0jB,UAAL,CAAgB9e,QAAhB;AACH;AACD;;;;;;;;uCAKey0B,I,EAAM;AACjB;AACA,cAAMP,SAAS,GAAG,KAAK5E,QAAL,GAAgB,KAAKA,QAAL,CAAc4E,SAA9B,GAA0C,IAA5D;AACA,iBAAOA,SAAS,IAAIA,SAAS,CAACO,IAAD,CAA7B;AACH;AACD;;;;;;0CAGkB;AACd,iBAAO,CAAC,EAAE,KAAKnF,QAAL,IAAiB,KAAKA,QAAL,CAAczJ,WAA/B,IAA8C,KAAK6O,iBAArD,CAAR;AACH;AACD;;;;;;oCAGY;AACR,iBAAO,CAAC,CAAC,KAAKC,WAAd;AACH;AACD;;;;;;4CAGoB;AAChB,iBAAO,KAAKC,cAAL,KAAwB,KAAKtF,QAAL,CAAcuF,gBAAd,IAAkC,KAAK7E,kBAA/D,CAAP;AACH;AACD;;;;;;kDAG0B;AACtB;AACA,iBAAO,KAAKC,UAAL,KAAoB,QAApB,IAAgC,CAAC,KAAKE,SAAL,EAAjC,IACH,KAAKA,SAAL,MAAoB,CAAC,KAAK2E,iBAAL,EADzB;AAEH;AACD;;;;;;4CAGoB;AAChB;AACA,iBAAO,KAAK3E,SAAL,MAAoB,KAAKF,UAAL,KAAoB,QAApB,IAAgC,KAAK8E,eAAL,EAA3D;AACH;AACD;;;;;;;gDAIwB;AACpB,iBAAQ,KAAKP,cAAL,IAAuB,KAAKA,cAAL,CAAoBv5B,MAApB,GAA6B,CAApD,IACJ,KAAKq0B,QAAL,CAAc0F,UADX,GACyB,OADzB,GACmC,MAD1C;AAEH;AACD;;;;;;;+CAIuB;AAAA;;AACnB,cAAI,KAAKC,iBAAL,MAA4B,KAAKL,cAArC,EAAqD;AACjD;AACA;AACA,gBAAI,KAAKlB,kBAAL,IAA2B,KAAKwB,MAApC,EAA4C;AACxC,mBAAK7B,kBAAL,GAA0B,IAA1B;AACA,qEAAU,KAAK6B,MAAL,CAAY9pB,aAAtB,EAAqC,eAArC,EAAsD9L,IAAtD,CAA2D,4DAAK,CAAL,CAA3D,EAAoE3J,SAApE;AAA+E;;;AAG/E,0BAAM;AACF,uBAAI,CAAC09B,kBAAL,GAA0B,KAA1B;AACH,eALD;AAMH;;AACD,iBAAKG,UAAL,GAAkB,QAAlB;;AACA,iBAAK3U,kBAAL,CAAwBkB,YAAxB;AACH;AACJ;AACD;;;;;;;;;gDAMwB;AACpB,cAAI,KAAKuP,QAAL,CAAczJ,WAAd,IAA6B,KAAK6O,iBAAtC,EAAyD;AACrD,kBAAMjD,uCAAuC,EAA7C;AACH;AACJ;AACD;;;;;;;;wCAKgB;AACZ,eAAK0D,cAAL;;AACA,eAAKlB,mBAAL;AACH;AACD;;;;;;;;;yCAMiB;AAAA;;AACb,cAAI,KAAKK,aAAT,EAAwB;AACpB;AACA,gBAAIc,SAAJ;AACA;;AACA,gBAAIC,OAAJ;;AACA,iBAAKf,aAAL,CAAmB3yB,OAAnB;AAA4B;;;;AAI5B,sBAAC2zB,IAAD,EAAU;AACN,kBAAIA,IAAI,CAAC5N,KAAL,KAAe,OAAnB,EAA4B;AACxB,oBAAI0N,SAAS,IAAI,OAAI,CAACtE,SAAtB,EAAiC;AAC7B,wBAAMY,kCAAkC,CAAC,OAAD,CAAxC;AACH;;AACD0D,yBAAS,GAAGE,IAAZ;AACH,eALD,MAMK,IAAIA,IAAI,CAAC5N,KAAL,KAAe,KAAnB,EAA0B;AAC3B,oBAAI2N,OAAJ,EAAa;AACT,wBAAM3D,kCAAkC,CAAC,KAAD,CAAxC;AACH;;AACD2D,uBAAO,GAAGC,IAAV;AACH;AACJ,aAjBD;AAkBH;AACJ;AACD;;;;;;;;qDAK6B;AACzB,iBAAQ,KAAKpC,SAAL,IAAkB,KAAKA,SAAL,CAAeM,UAAlC,IAAiD,KAAKD,aAAL,SAAjD,IAA6E,MAApF;AACH;AACD;;;;;;;;;8CAMsB;AAClB,cAAI,KAAKjE,QAAT,EAAmB;AACf;AACA,gBAAIiG,GAAG,GAAG,EAAV;;AACA,gBAAI,KAAKC,qBAAL,OAAiC,MAArC,EAA6C;AACzC;AACA,kBAAMJ,SAAS,GAAG,KAAKd,aAAL,GACd,KAAKA,aAAL,CAAmBmB,IAAnB;AAAyB;;;;AAIzB,wBAAAH,IAAI;AAAA,uBAAIA,IAAI,CAAC5N,KAAL,KAAe,OAAnB;AAAA,eAJJ,CADc,GAKqB,IALvC;AAMA;;AACA,kBAAM2N,OAAO,GAAG,KAAKf,aAAL,GACZ,KAAKA,aAAL,CAAmBmB,IAAnB;AAAyB;;;;AAIzB,wBAAAH,IAAI;AAAA,uBAAIA,IAAI,CAAC5N,KAAL,KAAe,KAAnB;AAAA,eAJJ,CADY,GAKqB,IALrC;;AAMA,kBAAI0N,SAAJ,EAAe;AACXG,mBAAG,CAACh6B,IAAJ,CAAS65B,SAAS,CAAChlB,EAAnB;AACH,eAFD,MAGK,IAAI,KAAKkjB,UAAT,EAAqB;AACtBiC,mBAAG,CAACh6B,IAAJ,CAAS,KAAKs1B,YAAd;AACH;;AACD,kBAAIwE,OAAJ,EAAa;AACTE,mBAAG,CAACh6B,IAAJ,CAAS85B,OAAO,CAACjlB,EAAjB;AACH;AACJ,aAxBD,MAyBK,IAAI,KAAKokB,cAAT,EAAyB;AAC1Be,iBAAG,GAAG,KAAKf,cAAL,CAAoBvpB,GAApB;AAAyB;;;;AAI/B,wBAAAyqB,KAAK;AAAA,uBAAIA,KAAK,CAACtlB,EAAV;AAAA,eAJC,CAAN;AAKH;;AACD,iBAAKkf,QAAL,CAAcqG,iBAAd,CAAgCJ,GAAhC;AACH;AACJ;AACD;;;;;;;;gDAKwB;AACpB,cAAI,CAAC,KAAKjG,QAAV,EAAoB;AAChB,kBAAMqC,kCAAkC,EAAxC;AACH;AACJ;AACD;;;;;;;;2CAKmB;AACf;AACA,cAAMiE,OAAO,GAAG,KAAKV,MAAL,GAAc,KAAKA,MAAL,CAAY9pB,aAA1B,GAA0C,IAA1D;;AACA,cAAI,KAAK6kB,UAAL,KAAoB,SAApB,IAAiC,CAAC2F,OAAlC,IAA6C,CAACA,OAAO,CAAC/zB,QAAR,CAAiB5G,MAA/D,IACA,CAAC26B,OAAO,CAACtH,WAAR,CAAoBjkB,IAApB,EADL,EACiC;AAC7B;AACH;;AACD,cAAI,CAAC,KAAK9N,SAAL,CAAeM,SAApB,EAA+B;AAC3B;AACA;AACH,WAVc,CAWf;AACA;;;AACA,cAAI,CAAC,KAAKg5B,gBAAL,EAAL,EAA8B;AAC1B,iBAAK1C,uCAAL,GAA+C,IAA/C;AACA;AACH;AACD;;;AACA,cAAI2C,UAAU,GAAG,CAAjB;AACA;;AACA,cAAIC,QAAQ,GAAG,CAAf;AACA;;AACA,cAAMv5B,SAAS,GAAG,KAAKo3B,uBAAL,CAA6BxoB,aAA/C;AACA;;AACA,cAAM4qB,QAAQ,GAAGx5B,SAAS,CAACQ,gBAAV,CAA2B,+BAA3B,CAAjB;AACA;;AACA,cAAMi5B,MAAM,GAAGz5B,SAAS,CAACQ,gBAAV,CAA2B,6BAA3B,CAAf;;AACA,cAAI,KAAKk4B,MAAL,IAAe,KAAKA,MAAL,CAAY9pB,aAAZ,CAA0BvJ,QAA1B,CAAmC5G,MAAtD,EAA8D;AAC1D;AACA,gBAAMi7B,aAAa,GAAG15B,SAAS,CAAC9E,qBAAV,EAAtB,CAF0D,CAG1D;AACA;AACA;AACA;AACA;AACA;;AACA,gBAAIw+B,aAAa,CAAC5hC,KAAd,KAAwB,CAAxB,IAA6B4hC,aAAa,CAAC9hC,MAAd,KAAyB,CAA1D,EAA6D;AACzD,mBAAKg/B,oCAAL,GAA4C,IAA5C;AACA,mBAAKD,uCAAL,GAA+C,KAA/C;AACA;AACH;AACD;;;AACA,gBAAMgD,cAAc,GAAG,KAAKC,YAAL,CAAkBF,aAAlB,CAAvB;AACA;;;AACA,gBAAMG,UAAU,GAAG,KAAKD,YAAL,CAAkBR,OAAO,CAAC/zB,QAAR,CAAiB,CAAjB,EAAoBnK,qBAApB,EAAlB,CAAnB;AACA;;;AACA,gBAAI4+B,UAAU,GAAG,CAAjB;;AAnB0D,wDAoBtCV,OAAO,CAAC/zB,QApB8B;AAAA;;AAAA;AAoB1D,qEAAsC;AAAA,oBAA3B00B,KAA2B;AAClCD,0BAAU,IAAIC,KAAK,CAACC,WAApB;AACH;AAtByD;AAAA;AAAA;AAAA;AAAA;;AAuB1DV,sBAAU,GAAGjgC,IAAI,CAACC,GAAL,CAASugC,UAAU,GAAGF,cAAtB,IAAwCzD,iBAArD;AACAqD,oBAAQ,GAAGO,UAAU,GAAG,CAAb,GAAiBA,UAAU,GAAG7D,kBAAb,GAAkCC,iBAAiB,GAAG,CAAvE,GAA2E,CAAtF;AACH;;AACD,eAAK,IAAI13B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGg7B,QAAQ,CAAC/6B,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACtCg7B,oBAAQ,CAACh7B,CAAD,CAAR,CAAY7H,KAAZ,CAAkBmB,KAAlB,aAA6BwhC,UAA7B;AACH;;AACD,eAAK,IAAI96B,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAGi7B,MAAM,CAACh7B,MAA3B,EAAmCD,GAAC,EAApC,EAAwC;AACpCi7B,kBAAM,CAACj7B,GAAD,CAAN,CAAU7H,KAAV,CAAgBmB,KAAhB,aAA2ByhC,QAA3B;AACH;;AACD,eAAK3C,oCAAL,GACI,KAAKD,uCAAL,GAA+C,KADnD;AAEH;AACD;;;;;;;;;qCAMasD,I,EAAM;AACf,iBAAQ,KAAKplB,IAAL,IAAa,KAAKA,IAAL,CAAU5W,KAAV,KAAoB,KAAlC,GAA2Cg8B,IAAI,CAAC9/B,KAAhD,GAAwD8/B,IAAI,CAAC9jC,IAApE;AACH;AACD;;;;;;;;2CAKmB;AACf;AACA,cAAMwD,OAAO,GAAG,KAAKwkB,WAAL,CAAiBvP,aAAjC;;AACA,cAAIjV,OAAO,CAACugC,WAAZ,EAAyB;AACrB;AACA,gBAAMhe,QAAQ,GAAGviB,OAAO,CAACugC,WAAR,EAAjB,CAFqB,CAGrB;AACA;;AACA,mBAAOhe,QAAQ,IAAIA,QAAQ,KAAKviB,OAAhC;AACH,WATc,CAUf;AACA;;;AACA,iBAAO;AAAC;AAAkB3D,oBAAQ,CAACQ,eAA5B,CAA8CgB,QAA9C,CAAuDmC,OAAvD;AAAP;AACH;;;4BAhfgB;AAAE,iBAAO,KAAKwgC,WAAZ;AAA0B;AAC7C;;;;;0BAIel8B,K,EAAO;AAClB;AACA,cAAMm8B,QAAQ,GAAG,KAAKD,WAAtB;AACA,eAAKA,WAAL,GAAmBl8B,KAAK,IAAK,KAAKy4B,SAAL,IAAkB,KAAKA,SAAL,CAAejD,UAA3C,IAA0D,QAA7E;;AACA,cAAI,KAAK0G,WAAL,KAAqB,SAArB,IAAkCC,QAAQ,KAAKn8B,KAAnD,EAA0D;AACtD,iBAAK24B,oCAAL,GAA4C,IAA5C;AACH;AACJ;AACD;;;;;;;4BAIyB;AAAE,iBAAO,KAAKO,mBAAZ;AAAkC;AAC7D;;;;;0BAIuBl5B,K,EAAO;AAC1B,eAAKk5B,mBAAL,GAA2B,oFAAsBl5B,KAAtB,CAA3B;AACH;AACD;;;;;;;4BAIyB;AACrB,iBAAO,KAAK+4B,UAAL,KAAoB,QAApB,IAAgC,CAAC,KAAKH,kBAA7C;AACH;AACD;;;;;;;4BAIqB;AAAE,iBAAO,KAAKG,UAAL,KAAoB,OAA3B;AAAqC;AAC5D;;;;;;;4BAIgB;AAAE,iBAAO,KAAKF,UAAZ;AAAyB;AAC3C;;;;;0BAIc74B,K,EAAO;AACjB,eAAK64B,UAAL,GAAkB74B,KAAlB;;AACA,eAAK85B,aAAL;AACH;AACD;;;;;;;;;;;;4BASiB;AACb,iBAAO,KAAKtE,UAAL,KAAoB,QAApB,IAAgC,KAAK4G,WAAL,KAAqB,OAArD,GAA+D,MAA/D,GAAwE,KAAKA,WAApF;AACH;AACD;;;;;0BAIep8B,K,EAAO;AAClB,cAAIA,KAAK,KAAK,KAAKo8B,WAAnB,EAAgC;AAC5B,iBAAKA,WAAL,GAAmBp8B,KAAK,IAAI,KAAKg5B,0BAAL,EAA5B;;AACA,iBAAK5U,kBAAL,CAAwBkB,YAAxB;AACH;AACJ;AACD;;;;;;4BAGe;AACX;AACA;AACA,iBAAO,KAAK+W,yBAAL,IAAkC,KAAKC,iBAAvC,IAA4D,KAAKC,cAAxE;AACH;AACD;;;;;0BAIav8B,K,EAAO;AAChB,eAAKq8B,yBAAL,GAAiCr8B,KAAjC;AACH;AACD;;;;;;4BAGkB;AACd,iBAAO,KAAKw8B,oBAAL,IAA6B,KAAKC,iBAAzC;AACH;;;;MAlJsBtE,sB;;AAwiB3BI,gBAAY,CAAC96B,IAAb,GAAoB,SAASi/B,oBAAT,CAA8B/+B,CAA9B,EAAiC;AAAE,aAAO,KAAKA,CAAC,IAAI46B,YAAV,EAAwB,gEAAyB,wDAAzB,CAAxB,EAAqE,gEAAyB,+DAAzB,CAArE,EAAyH,gEAAyB,+EAAzB,EAAmD,CAAnD,CAAzH,EAAgL,gEAAyB,gEAAzB,EAAgD,CAAhD,CAAhL,EAAoO,gEAAyBF,8BAAzB,EAAyD,CAAzD,CAApO,EAAiS,gEAAyB,8DAAzB,CAAjS,EAA4U,gEAAyB,oDAAzB,CAA5U,EAAqX,gEAAyB,2FAAzB,EAAgD,CAAhD,CAArX,CAAP;AAAkb,KAAze;;AACAE,gBAAY,CAAC9V,IAAb,GAAoB,gEAAyB;AAAE5kB,UAAI,EAAE06B,YAAR;AAAsBliB,eAAS,EAAE,CAAC,CAAC,gBAAD,CAAD,CAAjC;AAAuDqM,oBAAc,EAAE,SAASia,2BAAT,CAAqC7c,EAArC,EAAyCC,GAAzC,EAA8C6C,QAA9C,EAAwD;AAAE,YAAI9C,EAAE,GAAG,CAAT,EAAY;AAClL,uEAAsB8C,QAAtB,EAAgCkU,mBAAhC,EAAqD,IAArD;;AACA,6EAA4BlU,QAA5B,EAAsCkU,mBAAtC,EAA2D,IAA3D;;AACA,uEAAsBlU,QAAtB,EAAgC2U,QAAhC,EAA0C,IAA1C;;AACA,6EAA4B3U,QAA5B,EAAsC2U,QAAtC,EAAgD,IAAhD;;AACA,uEAAsB3U,QAAtB,EAAgC6U,cAAhC,EAAgD,IAAhD;;AACA,uEAAsB7U,QAAtB,EAAgC4T,QAAhC,EAA0C,IAA1C;;AACA,uEAAsB5T,QAAtB,EAAgCwU,OAAhC,EAAyC,IAAzC;;AACA,uEAAsBxU,QAAtB,EAAgC+U,SAAhC,EAA2C,IAA3C;;AACA,uEAAsB/U,QAAtB,EAAgCiV,SAAhC,EAA2C,IAA3C;AACH;;AAAC,YAAI/X,EAAE,GAAG,CAAT,EAAY;AACV,cAAI+C,EAAJ;;AACA,uEAAsBA,EAAE,GAAG,2DAA3B,MAAqD9C,GAAG,CAACuc,iBAAJ,GAAwBzZ,EAAE,CAACE,KAAhF;AACA,uEAAsBF,EAAE,GAAG,2DAA3B,MAAqD9C,GAAG,CAACwc,cAAJ,GAAqB1Z,EAAE,CAACE,KAA7E;AACA,uEAAsBF,EAAE,GAAG,2DAA3B,MAAqD9C,GAAG,CAACyc,oBAAJ,GAA2B3Z,EAAE,CAACE,KAAnF;AACA,uEAAsBF,EAAE,GAAG,2DAA3B,MAAqD9C,GAAG,CAAC0c,iBAAJ,GAAwB5Z,EAAE,CAACE,KAAhF;AACA,uEAAsBF,EAAE,GAAG,2DAA3B,MAAqD9C,GAAG,CAACka,iBAAJ,GAAwBpX,EAAE,CAACE,KAAhF;AACA,uEAAsBF,EAAE,GAAG,2DAA3B,MAAqD9C,GAAG,CAACga,cAAJ,GAAqBlX,EAA1E;AACA,uEAAsBA,EAAE,GAAG,2DAA3B,MAAqD9C,GAAG,CAAC8Z,aAAJ,GAAoBhX,EAAzE;AACA,uEAAsBA,EAAE,GAAG,2DAA3B,MAAqD9C,GAAG,CAAC4Z,eAAJ,GAAsB9W,EAA3E;AACA,uEAAsBA,EAAE,GAAG,2DAA3B,MAAqD9C,GAAG,CAAC6Z,eAAJ,GAAsB/W,EAA3E;AACH;AAAE,OArBsC;AAqBpCG,eAAS,EAAE,SAAS4Z,kBAAT,CAA4B9c,EAA5B,EAAgCC,GAAhC,EAAqC;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAC/D,oEAAmBE,GAAnB,EAAwB,IAAxB;;AACA,0EAAyBqM,GAAzB,EAA8B,IAA9B;;AACA,oEAAmBC,GAAnB,EAAwB,IAAxB;;AACA,oEAAmBC,GAAnB,EAAwB,IAAxB;AACH;;AAAC,YAAIzM,EAAE,GAAG,CAAT,EAAY;AACV,cAAI+C,EAAJ;;AACA,uEAAsBA,EAAE,GAAG,2DAA3B,MAAqD9C,GAAG,CAAC8c,YAAJ,GAAmBha,EAAE,CAACE,KAA3E;AACA,uEAAsBF,EAAE,GAAG,2DAA3B,MAAqD9C,GAAG,CAACoZ,uBAAJ,GAA8BtW,EAAE,CAACE,KAAtF;AACA,uEAAsBF,EAAE,GAAG,2DAA3B,MAAqD9C,GAAG,CAAC+c,kBAAJ,GAAyBja,EAAE,CAACE,KAAjF;AACA,uEAAsBF,EAAE,GAAG,2DAA3B,MAAqD9C,GAAG,CAAC0a,MAAJ,GAAa5X,EAAE,CAACE,KAArE;AACH;AAAE,OAhCsC;AAgCpC1C,eAAS,EAAE,CAAC,CAAD,EAAI,gBAAJ,CAhCyB;AAgCFmH,cAAQ,EAAE,EAhCR;AAgCYC,kBAAY,EAAE,SAASsV,yBAAT,CAAmCjd,EAAnC,EAAuCC,GAAvC,EAA4C;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACzH,oEAAmB,oCAAnB,EAAyDC,GAAG,CAACyV,UAAJ,IAAkB,UAA3E,EAAuF,gCAAvF,EAAyHzV,GAAG,CAACyV,UAAJ,IAAkB,MAA3I,EAAmJ,mCAAnJ,EAAwLzV,GAAG,CAACyV,UAAJ,IAAkB,SAA1M,EAAqN,kCAArN,EAAyPzV,GAAG,CAACyV,UAAJ,IAAkB,QAA3Q,EAAqR,wBAArR,EAA+SzV,GAAG,CAAC8U,QAAJ,CAAa0F,UAA5T,EAAwU,0BAAxU,EAAoWxa,GAAG,CAACoa,cAAxW,EAAwX,6BAAxX,EAAuZpa,GAAG,CAACsa,iBAAJ,EAAvZ,EAAgb,0BAAhb,EAA4cta,GAAG,CAACya,iBAAJ,EAA5c,EAAqe,iCAAre,EAAwgBza,GAAG,CAACid,uBAAJ,EAAxgB,EAAuiB,yBAAviB,EAAkkBjd,GAAG,CAAC8U,QAAJ,CAAapD,QAA/kB,EAAylB,2BAAzlB,EAAsnB1R,GAAG,CAAC8U,QAAJ,CAAaoI,UAAnoB,EAA+oB,aAA/oB,EAA8pBld,GAAG,CAAC8U,QAAJ,CAAaqI,OAA3qB,EAAorB,YAAprB,EAAksBnd,GAAG,CAACsP,KAAJ,IAAa,QAA/sB,EAAytB,UAAztB,EAAquBtP,GAAG,CAACsP,KAAJ,IAAa,MAAlvB,EAA0vB,cAA1vB,EAA0wBtP,GAAG,CAACod,cAAJ,CAAmB,WAAnB,CAA1wB,EAA2yB,YAA3yB,EAAyzBpd,GAAG,CAACod,cAAJ,CAAmB,SAAnB,CAAzzB,EAAw1B,aAAx1B,EAAu2Bpd,GAAG,CAACod,cAAJ,CAAmB,UAAnB,CAAv2B,EAAu4B,UAAv4B,EAAm5Bpd,GAAG,CAACod,cAAJ,CAAmB,OAAnB,CAAn5B,EAAg7B,UAAh7B,EAA47Bpd,GAAG,CAACod,cAAJ,CAAmB,OAAnB,CAA57B,EAAy9B,YAAz9B,EAAu+Bpd,GAAG,CAACod,cAAJ,CAAmB,SAAnB,CAAv+B,EAAsgC,YAAtgC,EAAohCpd,GAAG,CAACod,cAAJ,CAAmB,SAAnB,CAAphC,EAAmjC,yBAAnjC,EAA8kC,CAACpd,GAAG,CAACkZ,kBAAnlC;AACH;AAAE,OAlCsC;AAkCpCngB,YAAM,EAAE;AAAEuW,aAAK,EAAE,OAAT;AAAkB0J,kBAAU,EAAE,YAA9B;AAA4CvD,kBAAU,EAAE,YAAxD;AAAsEG,0BAAkB,EAAE,oBAA1F;AAAgHU,iBAAS,EAAE;AAA3H,OAlC4B;AAkC8G/f,cAAQ,EAAE,CAAC,cAAD,CAlCxH;AAkC0I0C,cAAQ,EAAE,CAAC,iEAA0B,CAChN;AAAEzX,eAAO,EAAE+2B,cAAX;AAA2B9Z,mBAAW,EAAE+Z;AAAxC,OADgN,CAA1B,CAAD,EAErL,wEAFqL,CAlCpJ;AAoCG3U,wBAAkB,EAAE6I,GApCvB;AAoC4B5I,WAAK,EAAE,EApCnC;AAoCuCC,UAAI,EAAE,CApC7C;AAoCgD4K,YAAM,EAAE,CAAC,CAAC,CAAD,EAAI,wBAAJ,CAAD,EAAgC,CAAC,CAAD,EAAI,qBAAJ,EAA2B,CAA3B,EAA8B,OAA9B,CAAhC,EAAwE,CAAC,qBAAD,EAAwB,EAAxB,CAAxE,EAAqG,CAAC,CAAD,EAAI,MAAJ,CAArG,EAAkH,CAAC,OAAD,EAAU,uBAAV,EAAmC,CAAnC,EAAsC,MAAtC,CAAlH,EAAiK,CAAC,CAAD,EAAI,sBAAJ,CAAjK,EAA8L,CAAC,gBAAD,EAAmB,EAAnB,CAA9L,EAAsN,CAAC,CAAD,EAAI,8BAAJ,CAAtN,EAA2P,CAAC,OAAD,EAAU,sBAAV,EAAkC,CAAlC,EAAqC,2BAArC,EAAkE,IAAlE,EAAwE,WAAxE,EAAqF,sBAArF,EAA6G,YAA7G,EAA2H,UAA3H,EAAuI,UAAvI,EAAmJ,mBAAnJ,EAAwK,CAAxK,EAA2K,MAA3K,CAA3P,EAA+a,CAAC,OAAD,EAAU,uBAAV,EAAmC,CAAnC,EAAsC,MAAtC,CAA/a,EAA8d,CAAC,OAAD,EAAU,0BAAV,EAAsC,CAAtC,EAAyC,MAAzC,CAA9d,EAAghB,CAAC,CAAD,EAAI,kCAAJ,EAAwC,CAAxC,EAA2C,UAA3C,CAAhhB,EAAwkB,CAAC,CAAD,EAAI,cAAJ,CAAxkB,EAA6lB,CAAC,OAAD,EAAU,6BAAV,EAAyC,CAAzC,EAA4C,cAA5C,CAA7lB,EAA0pB,CAAC,CAAD,EAAI,wBAAJ,CAA1pB,EAAyrB,CAAC,CAAD,EAAI,8BAAJ,CAAzrB,EAA8tB,CAAC,CAAD,EAAI,4BAAJ,CAA9tB,EAAiwB,CAAC,CAAD,EAAI,4BAAJ,CAAjwB,EAAoyB,CAAC,CAAD,EAAI,wBAAJ,EAA8B,8BAA9B,CAApyB,EAAm2B,CAAC,CAAD,EAAI,uBAAJ,CAAn2B,EAAi4B,CAAC,CAAD,EAAI,sBAAJ,EAA4B,CAA5B,EAA+B,2BAA/B,EAA4D,IAA5D,EAAkE,UAAlE,EAA8E,mBAA9E,CAAj4B,EAAq+B,CAAC,OAAD,EAAU,EAAV,CAAr+B,EAAo/B,CAAC,OAAD,EAAU,yDAAV,EAAqE,aAArE,EAAoF,MAApF,EAA4F,CAA5F,EAA+F,MAA/F,CAAp/B,EAA4lC,CAAC,aAAD,EAAgB,MAAhB,EAAwB,CAAxB,EAA2B,0BAA3B,EAAuD,gCAAvD,CAA5lC,EAAsrC,CAAC,CAAD,EAAI,uBAAJ,CAAtrC,EAAotC,CAAC,CAAD,EAAI,0BAAJ,CAAptC,EAAqvC,CAAC,WAAD,EAAc,EAAd,CAArvC,EAAwwC,CAAC,CAAD,EAAI,uBAAJ,CAAxwC,EAAsyC,CAAC,CAAD,EAAI,6BAAJ,CAAtyC,EAA00C,CAAC,OAAD,EAAU,UAAV,EAAsB,CAAtB,EAAyB,IAAzB,EAA+B,CAA/B,EAAkC,MAAlC,CAA10C,EAAq3C,CAAC,CAAD,EAAI,4BAAJ,CAAr3C,EAAw5C,CAAC,CAAD,EAAI,UAAJ,EAAgB,CAAhB,EAAmB,IAAnB,CAAx5C,CApCxD;AAoC2+C5S,cAAQ,EAAE,SAASshB,qBAAT,CAA+Btd,EAA/B,EAAmCC,GAAnC,EAAwC;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAChlD,wEAAuB0M,GAAvB;;AACA,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;;AACA,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC,EAAmC,CAAnC;;AACA,mEAAkB,OAAlB,EAA2B,SAAS6Q,0CAAT,CAAoDjK,MAApD,EAA4D;AAAE,mBAAOrT,GAAG,CAAC8U,QAAJ,CAAayI,gBAAb,IAAiCvd,GAAG,CAAC8U,QAAJ,CAAayI,gBAAb,CAA8BlK,MAA9B,CAAxC;AAAgF,WAAzK;;AACA,mEAAkB,CAAlB,EAAqBqB,oCAArB,EAA2D,CAA3D,EAA8D,CAA9D,EAAiE,cAAjE,EAAiF,CAAjF;;AACA,mEAAkB,CAAlB,EAAqBC,2BAArB,EAAkD,CAAlD,EAAqD,CAArD,EAAwD,KAAxD,EAA+D,CAA/D;;AACA,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC,EAAmC,CAAnC;;AACA,qEAAoB,CAApB;;AACA,uEAAsB,CAAtB,EAAyB,MAAzB,EAAiC,CAAjC;;AACA,mEAAkB,CAAlB,EAAqBM,6BAArB,EAAoD,CAApD,EAAuD,EAAvD,EAA2D,OAA3D,EAAoE,CAApE;;AACA;;AACA;;AACA,mEAAkB,EAAlB,EAAsBY,4BAAtB,EAAoD,CAApD,EAAuD,CAAvD,EAA0D,KAA1D,EAAiE,CAAjE;;AACA;;AACA,mEAAkB,EAAlB,EAAsBC,4BAAtB,EAAoD,CAApD,EAAuD,CAAvD,EAA0D,KAA1D,EAAiE,EAAjE;;AACA,uEAAsB,EAAtB,EAA0B,KAA1B,EAAiC,EAAjC;;AACA,mEAAkB,EAAlB,EAAsBE,4BAAtB,EAAoD,CAApD,EAAuD,CAAvD,EAA0D,KAA1D,EAAiE,EAAjE;;AACA,mEAAkB,EAAlB,EAAsBO,4BAAtB,EAAoD,CAApD,EAAuD,CAAvD,EAA0D,KAA1D,EAAiE,EAAjE;;AACA;;AACA;AACH;;AAAC,YAAIxW,EAAE,GAAG,CAAT,EAAY;AACV,kEAAiB,CAAjB;;AACA,mEAAkB,MAAlB,EAA0BC,GAAG,CAACyV,UAAJ,IAAkB,SAA5C;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,MAAlB,EAA0BzV,GAAG,CAAC4Z,eAAJ,CAAoBn5B,MAA9C;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,MAAlB,EAA0Buf,GAAG,CAACya,iBAAJ,EAA1B;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,MAAlB,EAA0Bza,GAAG,CAAC6Z,eAAJ,CAAoBp5B,MAA9C;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,MAAlB,EAA0Buf,GAAG,CAACyV,UAAJ,IAAkB,SAA5C;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,UAAlB,EAA8BzV,GAAG,CAACgb,qBAAJ,EAA9B;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,cAAlB,EAAkC,OAAlC;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,cAAlB,EAAkC,MAAlC;AACH;AAAE,OA1EsC;AA0EpC/G,gBAAU,EAAE,CAAC,oDAAD,EAAc,wDAAd,EAA+B,4DAA/B,EAAoD,wEAApD,CA1EwB;AA0EuD5kB,YAAM,EAAE,CAAC,4nGAAD,EAA+nG,u/BAA/nG,EAAwnI,kjJAAxnI,EAA4qR,o4CAA5qR,EAAkjU,+kGAAljU,EAAmoa,uoCAAnoa,CA1E/D;AA0E40c4U,mBAAa,EAAE,CA1E31c;AA0E81cuZ,UAAI,EAAE;AAAEC,iBAAS,EAAE,CAAC7G,sBAAsB,CAACC,kBAAxB;AAAb,OA1Ep2c;AA0Eg6c3S,qBAAe,EAAE;AA1Ej7c,KAAzB,CAApB;AA2EA;;AACAsU,gBAAY,CAAC36B,cAAb,GAA8B;AAAA,aAAM,CAChC;AAAEC,YAAI,EAAE;AAAR,OADgC,EAEhC;AAAEA,YAAI,EAAE;AAAR,OAFgC,EAGhC;AAAEA,YAAI,EAAEC,SAAR;AAAmBC,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD,EAAqB;AAAEA,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAAC,+EAAD;AAAtB,SAArB;AAA/B,OAHgC,EAIhC;AAAEH,YAAI,EAAE,gEAAR;AAAwBE,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD;AAApC,OAJgC,EAKhC;AAAEA,YAAI,EAAEC,SAAR;AAAmBC,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD,EAAqB;AAAEA,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAACq6B,8BAAD;AAAtB,SAArB;AAA/B,OALgC,EAMhC;AAAEx6B,YAAI,EAAE;AAAR,OANgC,EAOhC;AAAEA,YAAI,EAAE;AAAR,OAPgC,EAQhC;AAAEA,YAAI,EAAE0wB,MAAR;AAAgBxwB,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD,EAAqB;AAAEA,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAAC,2FAAD;AAAtB,SAArB;AAA5B,OARgC,CAAN;AAAA,KAA9B;;AAUAu6B,gBAAY,CAACtf,cAAb,GAA8B;AAC1Buc,gBAAU,EAAE,CAAC;AAAE33B,YAAI,EAAE;AAAR,OAAD,CADc;AAE1B83B,wBAAkB,EAAE,CAAC;AAAE93B,YAAI,EAAE;AAAR,OAAD,CAFM;AAG1Bw4B,eAAS,EAAE,CAAC;AAAEx4B,YAAI,EAAE;AAAR,OAAD,CAHe;AAI1Bk7B,gBAAU,EAAE,CAAC;AAAEl7B,YAAI,EAAE;AAAR,OAAD,CAJc;AAK1Bg/B,kBAAY,EAAE,CAAC;AAAEh/B,YAAI,EAAE,uDAAR;AAAmBG,YAAI,EAAE,CAAC,WAAD;AAAzB,OAAD,CALY;AAM1Bm7B,6BAAuB,EAAE,CAAC;AAAEt7B,YAAI,EAAE,uDAAR;AAAmBG,YAAI,EAAE,CAAC,qBAAD,EAAwB;AAAE,oBAAQ;AAAV,SAAxB;AAAzB,OAAD,CANC;AAO1B8+B,wBAAkB,EAAE,CAAC;AAAEj/B,YAAI,EAAE,uDAAR;AAAmBG,YAAI,EAAE,CAAC,gBAAD;AAAzB,OAAD,CAPM;AAQ1By8B,YAAM,EAAE,CAAC;AAAE58B,YAAI,EAAE,uDAAR;AAAmBG,YAAI,EAAE,CAAC,OAAD;AAAzB,OAAD,CARkB;AAS1Bs+B,uBAAiB,EAAE,CAAC;AAAEz+B,YAAI,EAAE,0DAAR;AAAsBG,YAAI,EAAE,CAAC84B,mBAAD;AAA5B,OAAD,CATO;AAU1ByF,oBAAc,EAAE,CAAC;AAAE1+B,YAAI,EAAE,0DAAR;AAAsBG,YAAI,EAAE,CAAC84B,mBAAD,EAAsB;AAAE,oBAAQ;AAAV,SAAtB;AAA5B,OAAD,CAVU;AAW1B0F,0BAAoB,EAAE,CAAC;AAAE3+B,YAAI,EAAE,0DAAR;AAAsBG,YAAI,EAAE,CAACu5B,QAAD;AAA5B,OAAD,CAXI;AAY1BkF,uBAAiB,EAAE,CAAC;AAAE5+B,YAAI,EAAE,0DAAR;AAAsBG,YAAI,EAAE,CAACu5B,QAAD,EAAW;AAAE,oBAAQ;AAAV,SAAX;AAA5B,OAAD,CAZO;AAa1B0C,uBAAiB,EAAE,CAAC;AAAEp8B,YAAI,EAAE,0DAAR;AAAsBG,YAAI,EAAE,CAACy5B,cAAD;AAA5B,OAAD,CAbO;AAc1BsC,oBAAc,EAAE,CAAC;AAAEl8B,YAAI,EAAE,6DAAR;AAAyBG,YAAI,EAAE,CAACw4B,QAAD,EAAW;AAAEpP,qBAAW,EAAE;AAAf,SAAX;AAA/B,OAAD,CAdU;AAe1ByS,mBAAa,EAAE,CAAC;AAAEh8B,YAAI,EAAE,6DAAR;AAAyBG,YAAI,EAAE,CAACo5B,OAAD,EAAU;AAAEhQ,qBAAW,EAAE;AAAf,SAAV;AAA/B,OAAD,CAfW;AAgB1BuS,qBAAe,EAAE,CAAC;AAAE97B,YAAI,EAAE,6DAAR;AAAyBG,YAAI,EAAE,CAAC25B,SAAD,EAAY;AAAEvQ,qBAAW,EAAE;AAAf,SAAZ;AAA/B,OAAD,CAhBS;AAiB1BwS,qBAAe,EAAE,CAAC;AAAE/7B,YAAI,EAAE,6DAAR;AAAyBG,YAAI,EAAE,CAAC65B,SAAD,EAAY;AAAEzQ,qBAAW,EAAE;AAAf,SAAZ;AAA/B,OAAD;AAjBS,KAA9B;AAmBA;;AAAc,KAAC,YAAY;AAAE,sEAAyBmR,YAAzB,EAAuC,CAAC;AAC7D16B,YAAI,EAAE,uDADuD;AAE7DG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,gBADX;AAECsK,kBAAQ,EAAE,cAFX;AAGCwF,kBAAQ,EAAE,u5HAHX;AAIC2hB,oBAAU,EAAE,CAAC9G,sBAAsB,CAACC,kBAAxB,CAJb;AAKCxhB,cAAI,EAAE;AACF,qBAAS,gBADP;AAEF,0DAA8C,0BAF5C;AAGF,sDAA0C,sBAHxC;AAIF,yDAA6C,yBAJ3C;AAKF,wDAA4C,wBAL1C;AAMF,8CAAkC,qBANhC;AAOF,gDAAoC,gBAPlC;AAQF,mDAAuC,qBARrC;AASF,gDAAoC,qBATlC;AAUF,uDAA2C,2BAVzC;AAWF,+CAAmC,mBAXjC;AAYF,iDAAqC,qBAZnC;AAaF,mCAAuB,kBAbrB;AAcF,kCAAsB,mBAdpB;AAeF,gCAAoB,iBAflB;AAgBF,oCAAwB,6BAhBtB;AAiBF,kCAAsB,2BAjBpB;AAkBF,mCAAuB,4BAlBrB;AAmBF,gCAAoB,yBAnBlB;AAoBF,gCAAoB,yBApBlB;AAqBF,kCAAsB,2BArBpB;AAsBF,kCAAsB,2BAtBpB;AAuBF,+CAAmC;AAvBjC,WALP;AA8BC0D,gBAAM,EAAE,CAAC,OAAD,CA9BT;AA+BCkL,uBAAa,EAAE,gEAAkBE,IA/BlC;AAgCCD,yBAAe,EAAE,sEAAwBE,MAhC1C;AAiCC3K,mBAAS,EAAE,CACP;AAAEjY,mBAAO,EAAE+2B,cAAX;AAA2B9Z,uBAAW,EAAE+Z;AAAxC,WADO,CAjCZ;AAoCCnpB,gBAAM,EAAE,CAAC,4nGAAD,EAA+nG,u/BAA/nG,EAAwnI,kjJAAxnI,EAA4qR,o4CAA5qR,EAAkjU,+kGAAljU,EAAmoa,uoCAAnoa;AApCT,SAAD;AAFuD,OAAD,CAAvC,EAwCrB,YAAY;AAAE,eAAO,CAAC;AAAEvR,cAAI,EAAE;AAAR,SAAD,EAA8B;AAAEA,cAAI,EAAE;AAAR,SAA9B,EAAkE;AAAEA,cAAI,EAAEC,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAC/GF,gBAAI,EAAE;AADyG,WAAD,EAE/G;AACCA,gBAAI,EAAE,oDADP;AAECG,gBAAI,EAAE,CAAC,+EAAD;AAFP,WAF+G;AAA/B,SAAlE,EAKX;AAAEH,cAAI,EAAE,gEAAR;AAA+BE,oBAAU,EAAE,CAAC;AAC9CF,gBAAI,EAAE;AADwC,WAAD;AAA3C,SALW,EAOX;AAAEA,cAAI,EAAEC,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAClCF,gBAAI,EAAE;AAD4B,WAAD,EAElC;AACCA,gBAAI,EAAE,oDADP;AAECG,gBAAI,EAAE,CAACq6B,8BAAD;AAFP,WAFkC;AAA/B,SAPW,EAYX;AAAEx6B,cAAI,EAAE;AAAR,SAZW,EAYgB;AAAEA,cAAI,EAAE;AAAR,SAZhB,EAYyC;AAAEA,cAAI,EAAE0wB,MAAR;AAAgBxwB,oBAAU,EAAE,CAAC;AACnFF,gBAAI,EAAE;AAD6E,WAAD,EAEnF;AACCA,gBAAI,EAAE,oDADP;AAECG,gBAAI,EAAE,CAAC,2FAAD;AAFP,WAFmF;AAA5B,SAZzC,CAAP;AAiBF,OAzDS,EAyDP;AAAE+6B,kBAAU,EAAE,CAAC;AACzBl7B,cAAI,EAAE;AADmB,SAAD,CAAd;AAEV23B,kBAAU,EAAE,CAAC;AACb33B,cAAI,EAAE;AADO,SAAD,CAFF;AAIV83B,0BAAkB,EAAE,CAAC;AACrB93B,cAAI,EAAE;AADe,SAAD,CAJV;AAMVw4B,iBAAS,EAAE,CAAC;AACZx4B,cAAI,EAAE;AADM,SAAD,CAND;AAQVg/B,oBAAY,EAAE,CAAC;AACfh/B,cAAI,EAAE,uDADS;AAEfG,cAAI,EAAE,CAAC,WAAD;AAFS,SAAD,CARJ;AAWVm7B,+BAAuB,EAAE,CAAC;AAC1Bt7B,cAAI,EAAE,uDADoB;AAE1BG,cAAI,EAAE,CAAC,qBAAD,EAAwB;AAAE,sBAAQ;AAAV,WAAxB;AAFoB,SAAD,CAXf;AAcV8+B,0BAAkB,EAAE,CAAC;AACrBj/B,cAAI,EAAE,uDADe;AAErBG,cAAI,EAAE,CAAC,gBAAD;AAFe,SAAD,CAdV;AAiBVy8B,cAAM,EAAE,CAAC;AACT58B,cAAI,EAAE,uDADG;AAETG,cAAI,EAAE,CAAC,OAAD;AAFG,SAAD,CAjBE;AAoBVs+B,yBAAiB,EAAE,CAAC;AACpBz+B,cAAI,EAAE,0DADc;AAEpBG,cAAI,EAAE,CAAC84B,mBAAD;AAFc,SAAD,CApBT;AAuBVyF,sBAAc,EAAE,CAAC;AACjB1+B,cAAI,EAAE,0DADW;AAEjBG,cAAI,EAAE,CAAC84B,mBAAD,EAAsB;AAAE,sBAAQ;AAAV,WAAtB;AAFW,SAAD,CAvBN;AA0BV0F,4BAAoB,EAAE,CAAC;AACvB3+B,cAAI,EAAE,0DADiB;AAEvBG,cAAI,EAAE,CAACu5B,QAAD;AAFiB,SAAD,CA1BZ;AA6BVkF,yBAAiB,EAAE,CAAC;AACpB5+B,cAAI,EAAE,0DADc;AAEpBG,cAAI,EAAE,CAACu5B,QAAD,EAAW;AAAE,sBAAQ;AAAV,WAAX;AAFc,SAAD,CA7BT;AAgCV0C,yBAAiB,EAAE,CAAC;AACpBp8B,cAAI,EAAE,0DADc;AAEpBG,cAAI,EAAE,CAACy5B,cAAD;AAFc,SAAD,CAhCT;AAmCVsC,sBAAc,EAAE,CAAC;AACjBl8B,cAAI,EAAE,6DADW;AAEjBG,cAAI,EAAE,CAACw4B,QAAD,EAAW;AAAEpP,uBAAW,EAAE;AAAf,WAAX;AAFW,SAAD,CAnCN;AAsCVyS,qBAAa,EAAE,CAAC;AAChBh8B,cAAI,EAAE,6DADU;AAEhBG,cAAI,EAAE,CAACo5B,OAAD,EAAU;AAAEhQ,uBAAW,EAAE;AAAf,WAAV;AAFU,SAAD,CAtCL;AAyCVuS,uBAAe,EAAE,CAAC;AAClB97B,cAAI,EAAE,6DADY;AAElBG,cAAI,EAAE,CAAC25B,SAAD,EAAY;AAAEvQ,uBAAW,EAAE;AAAf,WAAZ;AAFY,SAAD,CAzCP;AA4CVwS,uBAAe,EAAE,CAAC;AAClB/7B,cAAI,EAAE,6DADY;AAElBG,cAAI,EAAE,CAAC65B,SAAD,EAAY;AAAEzQ,uBAAW,EAAE;AAAf,WAAZ;AAFY,SAAD;AA5CP,OAzDO;AAwGb,KAxGF;;AAyGd,QAAI,KAAJ,EAAW,CAgIV;AAED;;;;;;;QAKMsW,kB;;;;AAENA,sBAAkB,CAACrkB,IAAnB,GAA0B,+DAAwB;AAAExb,UAAI,EAAE6/B;AAAR,KAAxB,CAA1B;AACAA,sBAAkB,CAACpkB,IAAnB,GAA0B,+DAAwB;AAAEpb,aAAO,EAAE,SAASy/B,0BAAT,CAAoChgC,CAApC,EAAuC;AAAE,eAAO,KAAKA,CAAC,IAAI+/B,kBAAV,GAAP;AAAyC,OAA7F;AAA+FjkB,aAAO,EAAE,CAAC,CAC/I,4DAD+I,EAE/I,sEAF+I,CAAD;AAAxG,KAAxB,CAA1B;;AAIA,KAAC,YAAY;AAAE,OAAC,OAAOC,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,iEAA0BgkB,kBAA1B,EAA8C;AAAE/jB,oBAAY,EAAE,wBAAY;AAAE,iBAAO,CAAC6c,QAAD,EAC7I+B,YAD6I,EAE7InB,OAF6I,EAG7IG,QAH6I,EAI7IE,cAJ6I,EAK7IE,SAL6I,EAM7IE,SAN6I,CAAP;AAMzH,SAN2F;AAMzFpe,eAAO,EAAE,mBAAY;AAAE,iBAAO,CAAC,4DAAD,EAC7C,sEAD6C,CAAP;AACnB,SAPqF;AAOnFG,eAAO,EAAE,mBAAY;AAAE,iBAAO,CAAC4c,QAAD,EACnD+B,YADmD,EAEnDnB,OAFmD,EAGnDG,QAHmD,EAInDE,cAJmD,EAKnDE,SALmD,EAMnDE,SANmD,CAAP;AAM/B;AAb2F,OAA9C,CAAnD;AAaY,KAb3B;AAcA;;;AAAc,KAAC,YAAY;AAAE,sEAAyB6F,kBAAzB,EAA6C,CAAC;AACnE7/B,YAAI,EAAE,sDAD6D;AAEnEG,YAAI,EAAE,CAAC;AACC2b,sBAAY,EAAE,CACV6c,QADU,EAEV+B,YAFU,EAGVnB,OAHU,EAIVG,QAJU,EAKVE,cALU,EAMVE,SANU,EAOVE,SAPU,CADf;AAUCpe,iBAAO,EAAE,CACL,4DADK,EAEL,sEAFK,CAVV;AAcCG,iBAAO,EAAE,CACL4c,QADK,EAEL+B,YAFK,EAGLnB,OAHK,EAILG,QAJK,EAKLE,cALK,EAMLE,SANK,EAOLE,SAPK;AAdV,SAAD;AAF6D,OAAD,CAA7C,EA0BrB,IA1BqB,EA0Bf,IA1Be;AA0BP,KA1BR;AA4Bd;;;;;;AAMA;;;AAMA;;;;;;;;;;;;;;;;;;ACx9CA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AASA;;;;;;AAKA;;;;;;;QAUM+F,mB;;;;;;;;;;;;;;AACF;;;4BAGyB;AAAE,iBAAO,KAAK7T,OAAZ;AAAsB;AACjD;;;;;0BAIuB/pB,K,EAAO;AAAE,eAAK+pB,OAAL,GAAe/pB,KAAf;AAAuB;AACvD;;;;;;4BAGyB;AAAE,iBAAO,KAAKiqB,OAAZ;AAAsB;AACjD;;;;;0BAIuBjqB,K,EAAO;AAAE,eAAKiqB,OAAL,GAAejqB,KAAf;AAAuB;AACvD;;;;;;4BAGkB;AAAE,iBAAO,KAAKksB,OAAZ;AAAsB;AAC1C;;;;;0BAIgBlsB,K,EAAO;AAAE,eAAKksB,OAAL,GAAelsB,KAAf;AAAuB;AAChD;;;;;;4BAG0B;AAAE,iBAAO,KAAKksB,OAAZ;AAAsB;AAClD;;;;;0BAIwBlsB,K,EAAO;AAAE,eAAKksB,OAAL,GAAelsB,KAAf;AAAuB;;;;MApC1B,2E;;AAsClC49B,uBAAmB,CAACngC,IAApB,GAA2B,SAASogC,2BAAT,CAAqClgC,CAArC,EAAwC;AAAE,aAAOmgC,gCAAgC,CAACngC,CAAC,IAAIigC,mBAAN,CAAvC;AAAoE,KAAzI;;AACAA,uBAAmB,CAACxnB,IAApB,GAA2B,gEAAyB;AAAEvY,UAAI,EAAE+/B,mBAAR;AAA6BvnB,eAAS,EAAE,CAAC,CAAC,UAAD,EAAa,cAAb,EAA6B,EAA7B,CAAD,EAAmC,CAAC,UAAD,EAAa,qBAAb,EAAoC,EAApC,CAAnC,CAAxC;AAAqHgK,eAAS,EAAE,CAAC,MAAD,EAAS,GAAT,EAAc,CAAd,EAAiB,uBAAjB,EAA0C,cAA1C,CAAhI;AAA2LvH,YAAM,EAAE;AAAEilB,0BAAkB,EAAE,oBAAtB;AAA4CC,0BAAkB,EAAE,oBAAhE;AAAsFC,0BAAkB,EAAE,oBAA1G;AAAgIC,0BAAkB,EAAE,oBAApJ;AAA0KC,mBAAW,EAAE,CAAC,cAAD,EAAiB,aAAjB,CAAvL;AAAwNC,2BAAmB,EAAE;AAA7O,OAAnM;AAAyc9nB,cAAQ,EAAE,CAAC,qBAAD,CAAnd;AAA4e0C,cAAQ,EAAE,CAAC,wEAAD;AAAtf,KAAzB,CAA3B;AACA4kB,uBAAmB,CAAC3kB,cAApB,GAAqC;AACjCglB,wBAAkB,EAAE,CAAC;AAAEpgC,YAAI,EAAE;AAAR,OAAD,CADa;AAEjCqgC,wBAAkB,EAAE,CAAC;AAAErgC,YAAI,EAAE;AAAR,OAAD,CAFa;AAGjCsgC,iBAAW,EAAE,CAAC;AAAEtgC,YAAI,EAAE,mDAAR;AAAeG,YAAI,EAAE,CAAC,cAAD;AAArB,OAAD,CAHoB;AAIjCogC,yBAAmB,EAAE,CAAC;AAAEvgC,YAAI,EAAE;AAAR,OAAD;AAJY,KAArC;;AAMA,QAAMigC,gCAAgC,GAAG,oEAA6BF,mBAA7B,CAAzC;AACA;;;AAAc,KAAC,YAAY;AAAE,sEAAyBA,mBAAzB,EAA8C,CAAC;AACpE//B,YAAI,EAAE,uDAD8D;AAEpEG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,uDADX;AAECsK,kBAAQ,EAAE,qBAFX;AAGCwC,gBAAM,EAAE,CAAC,oBAAD,EAAuB,oBAAvB,CAHT;AAIC1D,cAAI,EAAE;AACF,qBAAS,oCADP;AAEF;AACA;AACA,oBAAQ;AAJN;AAJP,SAAD;AAF8D,OAAD,CAA9C,EAarB,IAbqB,EAaf;AAAE6oB,0BAAkB,EAAE,CAAC;AACzBpgC,cAAI,EAAE;AADmB,SAAD,CAAtB;AAEFqgC,0BAAkB,EAAE,CAAC;AACrBrgC,cAAI,EAAE;AADe,SAAD,CAFlB;AAIFsgC,mBAAW,EAAE,CAAC;AACdtgC,cAAI,EAAE,mDADQ;AAEdG,cAAI,EAAE,CAAC,cAAD;AAFQ,SAAD,CAJX;AAOFogC,2BAAmB,EAAE,CAAC;AACtBvgC,cAAI,EAAE;AADgB,SAAD;AAPnB,OAbe;AAsBb,KAtBF;AAwBd;;;;;;AAKA;;;;;;;;AAOA;;;;;;;AAKA,aAASwgC,+BAAT,CAAyCxgC,IAAzC,EAA+C;AAC3C,aAAO7D,KAAK,wBAAgB6D,IAAhB,qCAAZ;AACH;AAED;;;;;;AAKA;;;;;;;;;AAOA,QAAMygC,wBAAwB,GAAG,IAAI,4DAAJ,CAAmB,0BAAnB,CAAjC;AAEA;;;;;AAKA;;AACA;;AACA,QAAMC,uBAAuB,GAAG,CAC5B,QAD4B,EAE5B,UAF4B,EAG5B,MAH4B,EAI5B,QAJ4B,EAK5B,OAL4B,EAM5B,OAN4B,EAO5B,OAP4B,EAQ5B,OAR4B,EAS5B,QAT4B,CAAhC;AAWA;;AACA,QAAI1pB,YAAY,GAAG,CAAnB,C,CACA;;AACA;;;;QAGM2pB,Y;AACF;;;;;;AAMA,0BAAYC,yBAAZ,EAAuCC,WAAvC,EAAoDC,gBAApD,EAAsElF,SAAtE,EAAiF;AAAA;;AAC7E,WAAKgF,yBAAL,GAAiCA,yBAAjC;AACA,WAAKC,WAAL,GAAmBA,WAAnB;AACA,WAAKC,gBAAL,GAAwBA,gBAAxB;AACA,WAAKlF,SAAL,GAAiBA,SAAjB;AACH,K;;AAEL,QAAI,KAAJ,EAAW,CAYV;AACD;;;AACA,QAAMmF,kBAAkB,GAAG,+EAAgBJ,YAAhB,CAA3B;AACA;;;;;QAGMK,Q;;;;;AACF;;;;;;;;;;;AAWA,wBAAY3e,WAAZ,EAAyBpe,SAAzB,EAAoC23B,SAApC,EAA+CiF,WAA/C,EAA4DC,gBAA5D,EAA8EF,yBAA9E,EAAyGK,kBAAzG,EAA6HvV,gBAA7H,EAA+IwV,MAA/I,EAAuJ;AAAA;;AAAA;;AACnJ,sCAAMN,yBAAN,EAAiCC,WAAjC,EAA8CC,gBAA9C,EAAgElF,SAAhE;AACA,gBAAKvZ,WAAL,GAAmBA,WAAnB;AACA,gBAAKpe,SAAL,GAAiBA,SAAjB;AACA,gBAAK23B,SAAL,GAAiBA,SAAjB;AACA,gBAAKlQ,gBAAL,GAAwBA,gBAAxB;AACA,gBAAKyV,IAAL,uBAAyBnqB,YAAY,EAArC;AACA;;;;AAGA,gBAAKoqB,SAAL,GAAiB,KAAjB;AACA;;;;AAGA,gBAAKC,eAAL,GAAuB,KAAvB;AACA;;;;;AAIA,gBAAKhC,OAAL,GAAe,KAAf;AACA;;;;;AAIA,gBAAK5D,YAAL,GAAoB,IAAI,4CAAJ,EAApB;AACA;;;;;AAIA,gBAAKD,WAAL,GAAmB,WAAnB;AACA;;;;;AAIA,gBAAK4D,UAAL,GAAkB,KAAlB;AACA,gBAAKjM,SAAL,GAAiB,KAAjB;AACA,gBAAK0B,SAAL,GAAiB,KAAjB;AACA,gBAAKyM,KAAL,GAAa,MAAb;AACA,gBAAKC,SAAL,GAAiB,KAAjB;AACA,gBAAKC,qBAAL,GAA6B,CACzB,MADyB,EAEzB,UAFyB,EAGzB,gBAHyB,EAIzB,OAJyB,EAKzB,MALyB,EAMzB,MANyB,EAO3BC,MAP2B;AAOnB;;;;AAIV,kBAAA3hC,CAAC;AAAA,iBAAI,uFAAyB4hC,GAAzB,CAA6B5hC,CAA7B,CAAJ;AAAA,SAX4B,CAA7B;AAYA;;AACA,YAAMjC,OAAO,GAAG,QAAKwkB,WAAL,CAAiBvP,aAAjC,CApDmJ,CAqDnJ;AACA;;AACA,gBAAK6uB,mBAAL,GAA2BV,kBAAkB,IAAIpjC,OAAjD;AACA,gBAAK+jC,oBAAL,GAA4B,QAAKz/B,KAAjC,CAxDmJ,CAyDnJ;;AACA,gBAAK2V,EAAL,GAAU,QAAKA,EAAf,CA1DmJ,CA2DnJ;AACA;AACA;;AACA,YAAI7T,SAAS,CAAC49B,GAAd,EAAmB;AACfX,gBAAM,CAACt4B,iBAAP;AAA0B;;;AAG1B,sBAAM;AACFyZ,uBAAW,CAACvP,aAAZ,CAA0B9P,gBAA1B,CAA2C,OAA3C;AAAqD;;;;AAIrD,sBAACR,KAAD,EAAW;AACP;AACA,kBAAIs/B,EAAE;AAAI;AAAkBt/B,mBAAK,CAAC0oB,MAAlC;;AACA,kBAAI,CAAC4W,EAAE,CAAC3/B,KAAJ,IAAa,CAAC2/B,EAAE,CAAClU,cAAjB,IAAmC,CAACkU,EAAE,CAACjU,YAA3C,EAAyD;AACrD;AACA;AACA;AACA;AACAiU,kBAAE,CAAC/T,iBAAH,CAAqB,CAArB,EAAwB,CAAxB;AACA+T,kBAAE,CAAC/T,iBAAH,CAAqB,CAArB,EAAwB,CAAxB;AACH;AACJ,aAfD;AAgBH,WApBD;AAqBH;;AACD,gBAAKqT,SAAL,GAAiB,CAAC,QAAKn9B,SAAL,CAAeM,SAAjC;AACA,gBAAK88B,eAAL,GAAuBxjC,OAAO,CAACkkC,QAAR,CAAiBC,WAAjB,OAAmC,QAA1D;;AACA,YAAI,QAAKX,eAAT,EAA0B;AACtB,kBAAK7F,WAAL;AAAqB;AAAkB39B,iBAApB,CAA+BokC,QAA/B,GAA0C,4BAA1C,GACf,mBADJ;AAEH;;AA1FkJ;AA2FtJ;AACD;;;;;;;;;;AA2FA;;;mCAGW;AAAA;;AACP,cAAI,KAAKh+B,SAAL,CAAeM,SAAnB,EAA8B;AAC1B,iBAAKmnB,gBAAL,CAAsBE,OAAtB,CAA8B,KAAKvJ,WAAL,CAAiBvP,aAA/C,EAA8DzV,SAA9D;AAAyE;;;;AAIzE,sBAAAmF,KAAK,EAAI;AACL,qBAAI,CAAC48B,UAAL,GAAkB58B,KAAK,CAAC2oB,YAAxB;;AACA,qBAAI,CAACsQ,YAAL,CAAkB34B,IAAlB;AACH,aAPD;AAQH;AACJ;AACD;;;;;;sCAGc;AACV,eAAK24B,YAAL,CAAkB34B,IAAlB;AACH;AACD;;;;;;sCAGc;AACV,eAAK24B,YAAL,CAAkB/zB,QAAlB;;AACA,cAAI,KAAKzD,SAAL,CAAeM,SAAnB,EAA8B;AAC1B,iBAAKmnB,gBAAL,CAAsBH,cAAtB,CAAqC,KAAKlJ,WAAL,CAAiBvP,aAAtD;AACH;AACJ;AACD;;;;;;oCAGY;AACR,cAAI,KAAK8oB,SAAT,EAAoB;AAChB;AACA;AACA;AACA,iBAAKsG,gBAAL;AACH,WANO,CAOR;AACA;AACA;;;AACA,eAAKC,sBAAL;AACH;AACD;;;;;;;;8BAKM1N,O,EAAS;AACX,eAAKpS,WAAL,CAAiBvP,aAAjB,CAA+BwP,KAA/B,CAAqCmS,OAArC;AACH;AACD;;;;;;;;sCAKc2N,S,EAAW;AACrB,cAAIA,SAAS,KAAK,KAAK/C,OAAnB,KAA+B,CAAC,KAAKgD,QAAN,IAAkB,CAACD,SAAlD,CAAJ,EAAkE;AAC9D,iBAAK/C,OAAL,GAAe+C,SAAf;AACA,iBAAK3G,YAAL,CAAkB34B,IAAlB;AACH;AACJ;AACD;;;;;;mCAGW,CAQV,C,CAPG;AACA;AACA;AACA;AACA;AACA;AACA;;AAEJ;;;;;;;sCAIc;AACV,iBAAO,KAAKuf,WAAL,CAAiBvP,aAAjB,CAA+BivB,QAA/B,CAAwCC,WAAxC,OAA0D,UAAjE;AACH;AACD;;;;;;;;iDAKyB;AACrB;AACA,cAAMlN,QAAQ,GAAG,KAAKzS,WAAL,CAAiBvP,aAAjB,CAA+B3Q,KAAhD;;AACA,cAAI,KAAKy/B,oBAAL,KAA8B9M,QAAlC,EAA4C;AACxC,iBAAK8M,oBAAL,GAA4B9M,QAA5B;AACA,iBAAK2G,YAAL,CAAkB34B,IAAlB;AACH;AACJ;AACD;;;;;;;;wCAKgB;AACZ,cAAI49B,uBAAuB,CAACv9B,OAAxB,CAAgC,KAAKm+B,KAArC,IAA8C,CAAC,CAAnD,EAAsD;AAClD,kBAAMd,+BAA+B,CAAC,KAAKc,KAAN,CAArC;AACH;AACJ;AACD;;;;;;;;wCAKgB;AACZ,iBAAO,KAAKE,qBAAL,CAA2Br+B,OAA3B,CAAmC,KAAKm+B,KAAxC,IAAiD,CAAC,CAAzD;AACH;AACD;;;;;;;;sCAKc;AACV;;AACA;AACA,cAAIgB,QAAQ;AAAK;AAAkB,eAAKjgB,WAAL,CAAiBvP,aAArC,CAAsDwvB,QAArE;AACA,iBAAOA,QAAQ,IAAIA,QAAQ,CAACC,QAA5B;AACH;AACD;;;;;;;;;AAgCA;;;;;;0CAMkBtF,G,EAAK;AACnB,eAAKuF,gBAAL,GAAwBvF,GAAG,CAACwF,IAAJ,CAAS,GAAT,CAAxB;AACH;AACD;;;;;;;;2CAKmB;AACf;AACA;AACA;AACA,cAAI,CAAC,KAAKpD,OAAV,EAAmB;AACf,iBAAK/c,KAAL;AACH;AACJ;;;4BAxQc;AACX,cAAI,KAAKsZ,SAAL,IAAkB,KAAKA,SAAL,CAAehI,QAAf,KAA4B,IAAlD,EAAwD;AACpD,mBAAO,KAAKgI,SAAL,CAAehI,QAAtB;AACH;;AACD,iBAAO,KAAKT,SAAZ;AACH;AACD;;;;;0BAIahxB,K,EAAO;AAChB,eAAKgxB,SAAL,GAAiB,oFAAsBhxB,KAAtB,CAAjB,CADgB,CAEhB;AACA;;AACA,cAAI,KAAKk9B,OAAT,EAAkB;AACd,iBAAKA,OAAL,GAAe,KAAf;AACA,iBAAK5D,YAAL,CAAkB34B,IAAlB;AACH;AACJ;AACD;;;;;;;;4BAKS;AAAE,iBAAO,KAAK4/B,GAAZ;AAAkB;AAC7B;;;;;0BAIOvgC,K,EAAO;AAAE,eAAKugC,GAAL,GAAWvgC,KAAK,IAAI,KAAKg/B,IAAzB;AAAgC;AAChD;;;;;;;;4BAKe;AAAE,iBAAO,KAAKtM,SAAZ;AAAwB;AACzC;;;;;0BAIa1yB,K,EAAO;AAAE,eAAK0yB,SAAL,GAAiB,oFAAsB1yB,KAAtB,CAAjB;AAAgD;AACtE;;;;;;;4BAIW;AAAE,iBAAO,KAAKm/B,KAAZ;AAAoB;AACjC;;;;;0BAISn/B,K,EAAO;AACZ,eAAKm/B,KAAL,GAAan/B,KAAK,IAAI,MAAtB;;AACA,eAAKwgC,aAAL,GAFY,CAGZ;AACA;AACA;;;AACA,cAAI,CAAC,KAAKC,WAAL,EAAD,IAAuB,uFAAyBlB,GAAzB,CAA6B,KAAKJ,KAAlC,CAA3B,EAAqE;AAC/D;AAAkB,iBAAKjf,WAAL,CAAiBvP,aAArC,CAAsD9S,IAAtD,GAA6D,KAAKshC,KAAlE;AACH;AACJ;AACD;;;;;;;;4BAKY;AAAE,iBAAO,KAAKK,mBAAL,CAAyBx/B,KAAhC;AAAwC;AACtD;;;;;0BAIUA,K,EAAO;AACb,cAAIA,KAAK,KAAK,KAAKA,KAAnB,EAA0B;AACtB,iBAAKw/B,mBAAL,CAAyBx/B,KAAzB,GAAiCA,KAAjC;AACA,iBAAKs5B,YAAL,CAAkB34B,IAAlB;AACH;AACJ;AACD;;;;;;;4BAIe;AAAE,iBAAO,KAAKy+B,SAAZ;AAAwB;AACzC;;;;;0BAIap/B,K,EAAO;AAAE,eAAKo/B,SAAL,GAAiB,oFAAsBp/B,KAAtB,CAAjB;AAAgD;;;4BAmI1D;AACR,iBAAO,CAAC,KAAK0gC,aAAL,EAAD,IAAyB,CAAC,KAAKxgB,WAAL,CAAiBvP,aAAjB,CAA+B3Q,KAAzD,IAAkE,CAAC,KAAK2gC,WAAL,EAAnE,IACH,CAAC,KAAK1D,UADV;AAEH;AACD;;;;;;;;4BAKuB;AACnB,cAAI,KAAKiC,eAAT,EAA0B;AACtB;AACA;AACA;;AACA;AACA,gBAAM0B,aAAa;AAAI;AAAkB,iBAAK1gB,WAAL,CAAiBvP,aAA1D;AACA;;AACA,gBAAMkwB,WAAW,GAAGD,aAAa,CAACtO,OAAd,CAAsB,CAAtB,CAApB,CAPsB,CAQtB;AACA;;AACA,mBAAO,KAAK4K,OAAL,IAAgB0D,aAAa,CAACd,QAA9B,IAA0C,CAAC,KAAKxK,KAAhD,IACH,CAAC,EAAEsL,aAAa,CAACzb,aAAd,GAA8B,CAAC,CAA/B,IAAoC0b,WAApC,IAAmDA,WAAW,CAACtd,KAAjE,CADL;AAEH,WAZD,MAaK;AACD,mBAAO,KAAK2Z,OAAL,IAAgB,CAAC,KAAK5H,KAA7B;AACH;AACJ;;;;MA/VkBsJ,kB;;AAuXvBC,YAAQ,CAACphC,IAAT,GAAgB,SAASqjC,gBAAT,CAA0BnjC,CAA1B,EAA6B;AAAE,aAAO,KAAKA,CAAC,IAAIkhC,QAAV,EAAoB,gEAAyB,wDAAzB,CAApB,EAAiE,gEAAyB,8DAAzB,CAAjE,EAA4G,gEAAyB,wDAAzB,EAA2C,EAA3C,CAA5G,EAA4J,gEAAyB,qDAAzB,EAAwC,CAAxC,CAA5J,EAAwM,gEAAyB,iEAAzB,EAAoD,CAApD,CAAxM,EAAgQ,gEAAyB,wEAAzB,CAAhQ,EAAoT,gEAAyBP,wBAAzB,EAAmD,EAAnD,CAApT,EAA4W,gEAAyB,uEAAzB,CAA5W,EAA8Z,gEAAyB,oDAAzB,CAA9Z,CAAP;AAAgd,KAA/f;;AACAO,YAAQ,CAACzoB,IAAT,GAAgB,gEAAyB;AAAEvY,UAAI,EAAEghC,QAAR;AAAkBxoB,eAAS,EAAE,CAAC,CAAC,OAAD,EAAU,UAAV,EAAsB,EAAtB,CAAD,EAA4B,CAAC,UAAD,EAAa,UAAb,EAAyB,EAAzB,CAA5B,EAA0D,CAAC,QAAD,EAAW,kBAAX,EAA+B,EAA/B,CAA1D,EAA8F,CAAC,OAAD,EAAU,kBAAV,EAA8B,EAA9B,CAA9F,EAAiI,CAAC,UAAD,EAAa,kBAAb,EAAiC,EAAjC,CAAjI,CAA7B;AAAqMgK,eAAS,EAAE,CAAC,CAAD,EAAI,mBAAJ,EAAyB,iCAAzB,CAAhN;AAA6QmH,cAAQ,EAAE,EAAvR;AAA2RC,kBAAY,EAAE,SAASsZ,qBAAT,CAA+BjhB,EAA/B,EAAmCC,GAAnC,EAAwC;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAChY,mEAAkB,MAAlB,EAA0B,SAASkhB,gCAAT,GAA4C;AAAE,mBAAOjhB,GAAG,CAACkhB,aAAJ,CAAkB,KAAlB,CAAP;AAAkC,WAA1G,EAA4G,OAA5G,EAAqH,SAASC,iCAAT,GAA6C;AAAE,mBAAOnhB,GAAG,CAACkhB,aAAJ,CAAkB,IAAlB,CAAP;AAAiC,WAArM,EAAuM,OAAvM,EAAgN,SAASE,iCAAT,GAA6C;AAAE,mBAAOphB,GAAG,CAACqhB,QAAJ,EAAP;AAAwB,WAAvR;AACH;;AAAC,YAAIthB,EAAE,GAAG,CAAT,EAAY;AACV,uEAAsB,UAAtB,EAAkCC,GAAG,CAAC0R,QAAtC,EAAgD,UAAhD,EAA4D1R,GAAG,CAACkT,QAAhE;;AACA,oEAAmB,IAAnB,EAAyBlT,GAAG,CAACpK,EAA7B,EAAiC,aAAjC,EAAgDoK,GAAG,CAACqL,WAApD,EAAiE,UAAjE,EAA6ErL,GAAG,CAACmgB,QAAJ,IAAgB,CAACngB,GAAG,CAACmf,eAArB,IAAwC,IAArH,EAA2H,kBAA3H,EAA+Inf,GAAG,CAACsgB,gBAAJ,IAAwB,IAAvK,EAA6K,cAA7K,EAA6LtgB,GAAG,CAACwa,UAAjM,EAA6M,eAA7M,EAA8Nxa,GAAG,CAACkT,QAAJ,CAAaoO,QAAb,EAA9N;;AACA,oEAAmB,kBAAnB,EAAuCthB,GAAG,CAACkf,SAA3C;AACH;AAAE,OANkC;AAMhCnmB,YAAM,EAAE;AAAEnD,UAAE,EAAE,IAAN;AAAY8b,gBAAQ,EAAE,UAAtB;AAAkCwB,gBAAQ,EAAE,UAA5C;AAAwDp1B,YAAI,EAAE,MAA9D;AAAsEmC,aAAK,EAAE,OAA7E;AAAsFkgC,gBAAQ,EAAE,UAAhG;AAA4G9U,mBAAW,EAAE,aAAzH;AAAwIkW,yBAAiB,EAAE;AAA3J,OANwB;AAM0JhrB,cAAQ,EAAE,CAAC,UAAD,CANpK;AAMkL0C,cAAQ,EAAE,CAAC,iEAA0B,CAAC;AAAEzX,eAAO,EAAE,gFAAX;AAAgCid,mBAAW,EAAEqgB;AAA7C,OAAD,CAA1B,CAAD,EAAuF,wEAAvF,EAA0H,kEAA1H;AAN5L,KAAzB,CAAhB;AAOA;;AACAA,YAAQ,CAACjhC,cAAT,GAA0B;AAAA,aAAM,CAC5B;AAAEC,YAAI,EAAE;AAAR,OAD4B,EAE5B;AAAEA,YAAI,EAAE;AAAR,OAF4B,EAG5B;AAAEA,YAAI,EAAE,wDAAR;AAAmBE,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD,EAAqB;AAAEA,cAAI,EAAE;AAAR,SAArB;AAA/B,OAH4B,EAI5B;AAAEA,YAAI,EAAE,qDAAR;AAAgBE,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD;AAA5B,OAJ4B,EAK5B;AAAEA,YAAI,EAAE,iEAAR;AAA4BE,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD;AAAxC,OAL4B,EAM5B;AAAEA,YAAI,EAAE;AAAR,OAN4B,EAO5B;AAAEA,YAAI,EAAEC,SAAR;AAAmBC,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD,EAAqB;AAAEA,cAAI,EAAE;AAAR,SAArB,EAAqC;AAAEA,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAACsgC,wBAAD;AAAtB,SAArC;AAA/B,OAP4B,EAQ5B;AAAEzgC,YAAI,EAAE;AAAR,OAR4B,EAS5B;AAAEA,YAAI,EAAE;AAAR,OAT4B,CAAN;AAAA,KAA1B;;AAWAghC,YAAQ,CAAC5lB,cAAT,GAA0B;AACtBwY,cAAQ,EAAE,CAAC;AAAE5zB,YAAI,EAAE;AAAR,OAAD,CADY;AAEtB8X,QAAE,EAAE,CAAC;AAAE9X,YAAI,EAAE;AAAR,OAAD,CAFkB;AAGtButB,iBAAW,EAAE,CAAC;AAAEvtB,YAAI,EAAE;AAAR,OAAD,CAHS;AAItBo1B,cAAQ,EAAE,CAAC;AAAEp1B,YAAI,EAAE;AAAR,OAAD,CAJY;AAKtBA,UAAI,EAAE,CAAC;AAAEA,YAAI,EAAE;AAAR,OAAD,CALgB;AAMtByjC,uBAAiB,EAAE,CAAC;AAAEzjC,YAAI,EAAE;AAAR,OAAD,CANG;AAOtBmC,WAAK,EAAE,CAAC;AAAEnC,YAAI,EAAE;AAAR,OAAD,CAPe;AAQtBqiC,cAAQ,EAAE,CAAC;AAAEriC,YAAI,EAAE;AAAR,OAAD;AARY,KAA1B;AAUA;;AAAc,KAAC,YAAY;AAAE,sEAAyBghC,QAAzB,EAAmC,CAAC;AACzDhhC,YAAI,EAAE,uDADmD;AAEzDG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,6HADT;AAGCsK,kBAAQ,EAAE,UAHX;AAIClB,cAAI,EAAE;AACF;;;AAGA,qBAAS,mDAJP;AAKF,wCAA4B,WAL1B;AAMF;AACA;AACA,yBAAa,IARX;AASF,kCAAsB,aATpB;AAUF,0BAAc,UAVZ;AAWF,0BAAc,UAXZ;AAYF,+BAAmB,sCAZjB;AAaF,uCAA2B,0BAbzB;AAcF,mCAAuB,YAdrB;AAeF,oCAAwB,qBAftB;AAgBF,sBAAU,sBAhBR;AAiBF,uBAAW,qBAjBT;AAkBF,uBAAW;AAlBT,WAJP;AAwBCoE,mBAAS,EAAE,CAAC;AAAEjY,mBAAO,EAAE,gFAAX;AAAgCid,uBAAW,EAAEqgB;AAA7C,WAAD;AAxBZ,SAAD;AAFmD,OAAD,CAAnC,EA4BrB,YAAY;AAAE,eAAO,CAAC;AAAEhhC,cAAI,EAAE;AAAR,SAAD,EAA8B;AAAEA,cAAI,EAAE;AAAR,SAA9B,EAAyD;AAAEA,cAAI,EAAE,wDAAR;AAA0BE,oBAAU,EAAE,CAAC;AAC7GF,gBAAI,EAAE;AADuG,WAAD,EAE7G;AACCA,gBAAI,EAAE;AADP,WAF6G;AAAtC,SAAzD,EAIX;AAAEA,cAAI,EAAE,qDAAR;AAAuBE,oBAAU,EAAE,CAAC;AACtCF,gBAAI,EAAE;AADgC,WAAD;AAAnC,SAJW,EAMX;AAAEA,cAAI,EAAE,iEAAR;AAAmCE,oBAAU,EAAE,CAAC;AAClDF,gBAAI,EAAE;AAD4C,WAAD;AAA/C,SANW,EAQX;AAAEA,cAAI,EAAE;AAAR,SARW,EAQyB;AAAEA,cAAI,EAAEC,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AACtEF,gBAAI,EAAE;AADgE,WAAD,EAEtE;AACCA,gBAAI,EAAE;AADP,WAFsE,EAItE;AACCA,gBAAI,EAAE,oDADP;AAECG,gBAAI,EAAE,CAACsgC,wBAAD;AAFP,WAJsE;AAA/B,SARzB,EAeX;AAAEzgC,cAAI,EAAE;AAAR,SAfW,EAeuB;AAAEA,cAAI,EAAE;AAAR,SAfvB,CAAP;AAeyD,OA3ClD,EA2CoD;AAAE8X,UAAE,EAAE,CAAC;AAC5E9X,cAAI,EAAE;AADsE,SAAD,CAAN;AAErE4zB,gBAAQ,EAAE,CAAC;AACX5zB,cAAI,EAAE;AADK,SAAD,CAF2D;AAIrEo1B,gBAAQ,EAAE,CAAC;AACXp1B,cAAI,EAAE;AADK,SAAD,CAJ2D;AAMrEA,YAAI,EAAE,CAAC;AACPA,cAAI,EAAE;AADC,SAAD,CAN+D;AAQrEmC,aAAK,EAAE,CAAC;AACRnC,cAAI,EAAE;AADE,SAAD,CAR8D;AAUrEqiC,gBAAQ,EAAE,CAAC;AACXriC,cAAI,EAAE;AADK,SAAD,CAV2D;AAYrEutB,mBAAW,EAAE,CAAC;AACdvtB,cAAI,EAAE;AADQ,SAAD,CAZwD;AAcrEyjC,yBAAiB,EAAE,CAAC;AACpBzjC,cAAI,EAAE;AADc,SAAD;AAdkD,OA3CpD;AA2Db,KA3DF;;AA4Dd,QAAI,KAAJ,EAAW,CA4HV;AAED;;;;;;;QAKM0jC,c;;;;AAENA,kBAAc,CAACloB,IAAf,GAAsB,+DAAwB;AAAExb,UAAI,EAAE0jC;AAAR,KAAxB,CAAtB;AACAA,kBAAc,CAACjoB,IAAf,GAAsB,+DAAwB;AAAEpb,aAAO,EAAE,SAASsjC,sBAAT,CAAgC7jC,CAAhC,EAAmC;AAAE,eAAO,KAAKA,CAAC,IAAI4jC,cAAV,GAAP;AAAqC,OAArF;AAAuF/nB,eAAS,EAAE,CAAC,wEAAD,CAAlG;AAAuHC,aAAO,EAAE,CAAC,CACnK,uEADmK,EAEnK,+EAFmK,CAAD,EAItK,uEAJsK,EAKtK;AACA;AACA,qFAPsK;AAAhI,KAAxB,CAAtB;;AAQA,KAAC,YAAY;AAAE,OAAC,OAAOC,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,iEAA0B6nB,cAA1B,EAA0C;AAAE5nB,oBAAY,EAAE,wBAAY;AAAE,iBAAO,CAACklB,QAAD,EACzIjB,mBADyI,CAAP;AAC3G,SAD6E;AAC3EnkB,eAAO,EAAE,mBAAY;AAAE,iBAAO,CAAC,uEAAD,EACvD,+EADuD,CAAP;AAC1B,SAF8E;AAE5EG,eAAO,EAAE,mBAAY;AAAE,iBAAO,CAAC,uEAAD,EACtD;AACA;AACA,yFAHsD,EAItDilB,QAJsD,EAKtDjB,mBALsD,CAAP;AAKxB;AAP6E,OAA1C,CAAnD;AAOsB,KAPrC;AAQA;;;AAAc,KAAC,YAAY;AAAE,sEAAyB2D,cAAzB,EAAyC,CAAC;AAC/D1jC,YAAI,EAAE,sDADyD;AAE/DG,YAAI,EAAE,CAAC;AACC2b,sBAAY,EAAE,CAACklB,QAAD,EAAWjB,mBAAX,CADf;AAECnkB,iBAAO,EAAE,CACL,uEADK,EAEL,+EAFK,CAFV;AAMCG,iBAAO,EAAE,CACL,uEADK,EAEL;AACA;AACA,yFAJK,EAKLilB,QALK,EAMLjB,mBANK,CANV;AAcCpkB,mBAAS,EAAE,CAAC,wEAAD;AAdZ,SAAD;AAFyD,OAAD,CAAzC,EAkBrB,IAlBqB,EAkBf,IAlBe;AAkBP,KAlBR;AAoBd;;;;;;AAMA;;;AAMA;;;;;;;;;;;;;;;;;;ACjgBA;;;;;;AAKA;;;;;;;;;;AAkBA,QAAMwG,GAAG,GAAG,CAAC,SAAD,CAAZ;AACA,QAAMqM,GAAG,GAAG,CAAC,OAAD,CAAZ;;AACA,aAASoV,yBAAT,CAAmC3hB,EAAnC,EAAuCC,GAAvC,EAA4C;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AACtD,qEAAsB,CAAtB,EAAyB,MAAzB,EAAiC,CAAjC;;AACA,6DAAc,CAAd;;AACA;AACH;;AAAC,UAAIA,EAAE,GAAG,CAAT,EAAY;AACV,YAAM4hB,MAAM,GAAG,6DAAf;;AACA,gEAAiB,CAAjB;;AACA,wEAAyBA,MAAM,CAACtW,WAAP,IAAsB,MAA/C;AACH;AAAE;;AACH,aAASuW,gCAAT,CAA0C7hB,EAA1C,EAA8CC,GAA9C,EAAmD;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AAC7D,qEAAsB,CAAtB,EAAyB,MAAzB;;AACA,6DAAc,CAAd;;AACA;AACH;;AAAC,UAAIA,EAAE,GAAG,CAAT,EAAY;AACV,YAAM8hB,MAAM,GAAG,4DAAqB,CAArB,CAAf;;AACA,gEAAiB,CAAjB;;AACA,wEAAyBA,MAAM,CAACC,YAAP,IAAuB,MAAhD;AACH;AAAE;;AACH,aAASC,2BAAT,CAAqChiB,EAArC,EAAyCC,GAAzC,EAA8C;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AACxD,mEAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAAC,eAAD,EAAkB,MAAlB,CAA1B;AACH;AAAE;;AACH,aAASiiB,yBAAT,CAAmCjiB,EAAnC,EAAuCC,GAAvC,EAA4C;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AACtD,qEAAsB,CAAtB,EAAyB,MAAzB,EAAiC,CAAjC;;AACA,iEAAkB,CAAlB,EAAqB6hB,gCAArB,EAAuD,CAAvD,EAA0D,CAA1D,EAA6D,MAA7D,EAAqE,EAArE;;AACA,iEAAkB,CAAlB,EAAqBG,2BAArB,EAAkD,CAAlD,EAAqD,CAArD,EAAwDhkC,SAAxD,EAAmE,EAAnE;;AACA;AACH;;AAAC,UAAIgiB,EAAE,GAAG,CAAT,EAAY;AACV,YAAMkiB,MAAM,GAAG,6DAAf;;AACA,iEAAkB,UAAlB,EAA8B,CAAC,CAACA,MAAM,CAACC,aAAvC;;AACA,gEAAiB,CAAjB;;AACA,iEAAkB,cAAlB,EAAkC,IAAlC;AACH;AAAE;;AACH,aAASC,gCAAT,CAA0CpiB,EAA1C,EAA8CC,GAA9C,EAAmD;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AAC7D,YAAMqiB,GAAG,GAAG,gEAAZ;;AACA,qEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,EAAhC;;AACA,qEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,EAAhC,EAAoC,EAApC;;AACA,iEAAkB,sBAAlB,EAA0C,SAASC,6EAAT,CAAuFhP,MAAvF,EAA+F;AAAE,sEAAqB+O,GAArB;;AAA2B,cAAM5L,MAAM,GAAG,6DAAf;;AAAuC,iBAAOA,MAAM,CAAC8L,yBAAP,CAAiC1hC,IAAjC,CAAsCyyB,MAAM,CAACkP,OAA7C,CAAP;AAA+D,SAA5Q,EAA8Q,SAA9Q,EAAyR,SAASC,uDAAT,CAAiEnP,MAAjE,EAAyE;AAAE,sEAAqB+O,GAArB;;AAA2B,cAAMvN,OAAO,GAAG,6DAAhB;;AAAwC,iBAAOA,OAAO,CAAC4N,cAAR,CAAuBpP,MAAvB,CAAP;AAAwC,SAA/c;;AACA,mEAAoB,CAApB,EAAuB,CAAvB;;AACA;;AACA;AACH;;AAAC,UAAItT,EAAE,GAAG,CAAT,EAAY;AACV,YAAMuV,MAAM,GAAG,6DAAf;;AACA,iEAAkB,qBAAlB,EAAyCv3B,SAAzC;;AACA,gEAAiB,CAAjB;;AACA,6EAA8B,mBAA9B,EAAmDu3B,MAAM,CAACoN,cAAP,EAAnD,EAA4E,EAA5E;;AACA,kEAAmB,kBAAnB,EAAuCpN,MAAM,CAACqN,gBAA9C,EAAgE,WAAhE,EAA6ErN,MAAM,CAACsN,gBAApF,EAAsG,IAAtG;;AACA,iEAAkB,SAAlB,EAA6BtN,MAAM,CAAC92B,UAApC,EAAgD,iBAAhD,EAAmE82B,MAAM,CAACyK,QAAP,GAAkB,kBAAlB,GAAuC,SAA1G;AACH;AAAE;;AACH,QAAMxT,GAAG,GAAG,CAAC,CAAC,CAAC,oBAAD,CAAD,CAAD,EAA2B,GAA3B,CAAZ;AACA,QAAMC,GAAG,GAAG,CAAC,oBAAD,EAAuB,GAAvB,CAAZ;AACA,QAAMqW,mBAAmB,GAAG;AACxB;;;;;AAKAC,wBAAkB,EAAE,qEAAQ,oBAAR,EAA8B,CAC9C,wEAAW,WAAX,EAAwB,mEAAM,iBAAN,EAAyB,CAAC,2EAAD,CAAzB,EAA2C;AAAEzf,gBAAQ,EAAE;AAAZ,OAA3C,CAAxB,CAD8C,CAA9B,CANI;;AASxB;;;;;;;;;AASA0f,oBAAc,EAAE,qEAAQ,gBAAR,EAA0B,CACtC,mEAAM,MAAN,EAAc,mEAAM;AAChBxzB,iBAAS,EAAE,aADK;AAEhBtJ,gBAAQ,EAAE,MAFM;AAGhB6wB,eAAO,EAAE;AAHO,OAAN,CAAd,CADsC,EAMtC,mEAAM,SAAN,EAAiB,mEAAM;AACnBA,eAAO,EAAE,CADU;AAEnB7wB,gBAAQ,EAAE,mBAFS;AAGnB;AACAsJ,iBAAS,EAAE;AAJQ,OAAN,CAAjB,CANsC,EAYtC,mEAAM,kBAAN,EAA0B,mEAAM;AAC5BunB,eAAO,EAAE,CADmB;AAE5B7wB,gBAAQ,EAAE,mBAFkB;AAG5B;AACAsJ,iBAAS,EAAE;AAJiB,OAAN,CAA1B,CAZsC,EAkBtC,wEAAW,WAAX,EAAwB,qEAAQ,kCAAR,CAAxB,CAlBsC,EAmBtC,wEAAW,WAAX,EAAwB,qEAAQ,mBAAR,EAA6B,mEAAM;AAAEunB,eAAO,EAAE;AAAX,OAAN,CAA7B,CAAxB,CAnBsC,CAA1B;AAlBQ,KAA5B;AAyCA;;;;;;AAKA;;;;;;;;AAOA;;;;;;;AAMA,aAASkM,gCAAT,GAA4C;AACxC,aAAO/oC,KAAK,CAAC,+DAAD,CAAZ;AACH;AACD;;;;;;;;;AAOA,aAASgpC,8BAAT,GAA0C;AACtC,aAAOhpC,KAAK,CAAC,oDAAD,CAAZ;AACH;AACD;;;;;;;;AAMA,aAASipC,iCAAT,GAA6C;AACzC,aAAOjpC,KAAK,CAAC,mCAAD,CAAZ;AACH;AAED;;;;;;AAKA;;;AACA,QAAI6a,YAAY,GAAG,CAAnB;AACA;;;;;AAIA,QAAMquB,uBAAuB,GAAG,GAAhC;AACA;;;;;AAIA,QAAMC,sBAAsB,GAAG,EAA/B;AACA;;;;;AAIA,QAAMC,6BAA6B,GAAGD,sBAAsB,GAAG,CAA/D;AACA;;;;;AAIA,QAAME,qBAAqB,GAAG,CAA9B,C,CACA;;AACA;;;;;;;;;;;AAUA,QAAMC,+BAA+B,GAAGH,sBAAsB,GAAG,GAAzB,GAA+B,EAAvE;AACA;;;;;;AAKA,QAAMI,6BAA6B,GAAG,CAAtC;AACA;;;;;AAIA,QAAMC,0BAA0B,GAAG,IAAI,4DAAJ,CAAmB,4BAAnB,CAAnC;AACA;;;;;;AAKA,aAASC,2CAAT,CAAqDtkC,OAArD,EAA8D;AAC1D;AAAQ;;;AAGR;AAAA,iBAAMA,OAAO,CAAC4V,gBAAR,CAAyBvX,UAAzB,EAAN;AAAA;AAHA;AAIH;AACD;;;;;;AAIA,aAASkmC,eAAT,GAA2B,CAAG;;AAC9B,QAAI,KAAJ,EAAW,CAWV;AACD;;;;;;AAIA,QAAMC,iBAAiB,GAAG,IAAI,4DAAJ,CAAmB,mBAAnB,CAA1B;AACA;;;;;AAIA,QAAMC,mCAAmC,GAAG;AACxCriC,aAAO,EAAEiiC,0BAD+B;AAExChiC,UAAI,EAAE,CAAC,4DAAD,CAFkC;AAGxCC,gBAAU,EAAEgiC;AAH4B,KAA5C;AAKA;;;;QAGMI,e;AACF;;;;AAIA,6BAAY/xB,MAAZ,EAAoB9R,KAApB,EAA2B;AAAA;;AACvB,WAAK8R,MAAL,GAAcA,MAAd;AACA,WAAK9R,KAAL,GAAaA,KAAb;AACH,K;;AAEL,QAAI,KAAJ,EAAW,CAWV,C,CACD;;AACA;;;;;QAGM8jC,a;AACF;;;;;;;AAOA,2BAAY5jB,WAAZ,EAAyBue,yBAAzB,EAAoDC,WAApD,EAAiEC,gBAAjE,EAAmFlF,SAAnF,EAA8F;AAAA;;AAC1F,WAAKvZ,WAAL,GAAmBA,WAAnB;AACA,WAAKue,yBAAL,GAAiCA,yBAAjC;AACA,WAAKC,WAAL,GAAmBA,WAAnB;AACA,WAAKC,gBAAL,GAAwBA,gBAAxB;AACA,WAAKlF,SAAL,GAAiBA,SAAjB;AACH,K;;AAEL,QAAI,KAAJ,EAAW,CAWV;AACD;;;AACA,QAAMsK,mBAAmB,GAAG,kFAAmB,6EAAc,6EAAc,+EAAgBD,aAAhB,CAAd,CAAd,CAAnB,CAA5B;AACA;;;;;QAGME,gB;;;;AAENA,oBAAgB,CAACvmC,IAAjB,GAAwB,SAASwmC,wBAAT,CAAkCtmC,CAAlC,EAAqC;AAAE,aAAO,KAAKA,CAAC,IAAIqmC,gBAAV,GAAP;AAAuC,KAAtG;;AACAA,oBAAgB,CAAC5tB,IAAjB,GAAwB,gEAAyB;AAAEvY,UAAI,EAAEmmC,gBAAR;AAA0B3tB,eAAS,EAAE,CAAC,CAAC,oBAAD,CAAD;AAArC,KAAzB,CAAxB;AACA;;AAAc,KAAC,YAAY;AAAE,sEAAyB2tB,gBAAzB,EAA2C,CAAC;AACjEnmC,YAAI,EAAE,uDAD2D;AAEjEG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE;AADX,SAAD;AAF2D,OAAD,CAA3C,EAKrB,IALqB,EAKf,IALe;AAKP,KALR;;QAMRk4B,S;;;;;AACF;;;;;;;;;;;;;;;;AAgBA,yBAAYpsC,cAAZ,EAA4BssB,kBAA5B,EAAgDhqB,OAAhD,EAAyDqkC,yBAAzD,EAAoF9pB,UAApF,EAAgGiC,IAAhG,EAAsG8nB,WAAtG,EAAmHC,gBAAnH,EAAqIwF,gBAArI,EAAuJ1K,SAAvJ,EAAkKrJ,QAAlK,EAA4KzZ,qBAA5K,EAAmMytB,cAAnM,EAAmNC,QAAnN,EAA6N;AAAA;;AAAA;;AACzN,sCAAM1vB,UAAN,EAAkB8pB,yBAAlB,EAA6CC,WAA7C,EAA0DC,gBAA1D,EAA4ElF,SAA5E;AACA,gBAAK3hC,cAAL,GAAsBA,cAAtB;AACA,gBAAKssB,kBAAL,GAA0BA,kBAA1B;AACA,gBAAKhqB,OAAL,GAAeA,OAAf;AACA,gBAAKwc,IAAL,GAAYA,IAAZ;AACA,gBAAKutB,gBAAL,GAAwBA,gBAAxB;AACA,gBAAK1K,SAAL,GAAiBA,SAAjB;AACA,gBAAK2K,cAAL,GAAsBA,cAAtB;AACA;;;;AAGA,gBAAKE,UAAL,GAAkB,KAAlB;AACA;;;;AAGA,gBAAK5R,SAAL,GAAiB,KAAjB;AACA;;;;AAGA,gBAAK6R,UAAL,GAAkB,CAAlB;AACA;;;;AAGA,gBAAKC,SAAL,GAAiB,KAAjB;AACA;;;;AAGA,gBAAKC,YAAL;AAAqB;;;;;AAKrB,kBAACC,EAAD,EAAKC,EAAL;AAAA,iBAAYD,EAAE,KAAKC,EAAnB;AAAA,SALA;AAMA;;;;;AAGA,gBAAK3F,IAAL,wBAA0BnqB,YAAY,EAAtC;AACA;;;;AAGA,gBAAK+vB,QAAL,GAAgB,IAAI,6CAAJ,EAAhB;AACA;;;;AAGA,gBAAKjC,gBAAL,GAAwB,CAAxB;AACA;;;;AAGA,gBAAKkC,SAAL;AAAkB;;;AAGlB,oBAAM,CAAG,CAHT;AAIA;;;;;AAGA,gBAAKlU,UAAL;AAAmB;;;AAGnB,oBAAM,CAAG,CAHT;AAIA;;;;;AAGA,gBAAKmU,UAAL,GAAkB,EAAlB;AACA;;;;AAGA,gBAAKpC,gBAAL,GAAwB,KAAxB;AACA;;;;AAGA,gBAAKL,yBAAL,GAAiC,IAAI,6CAAJ,EAAjC;AACA;;;;;;AAKA,gBAAK95B,QAAL,GAAgB,CAAhB;AACA;;;;;;;AAMA,gBAAKw8B,UAAL,GAAkB,CACd;AACIzlC,iBAAO,EAAE,OADb;AAEIC,iBAAO,EAAE,KAFb;AAGIC,kBAAQ,EAAE,OAHd;AAIIC,kBAAQ,EAAE;AAJd,SADc,EAOd;AACIH,iBAAO,EAAE,OADb;AAEIC,iBAAO,EAAE,QAFb;AAGIC,kBAAQ,EAAE,OAHd;AAIIC,kBAAQ,EAAE;AAJd,SAPc,CAAlB;AAcA;;;;AAGA,gBAAKulC,uBAAL,GAA+B,KAA/B;AACA,gBAAKC,QAAL,GAAgB,KAAhB;AACA;;;;AAGA,gBAAK5L,WAAL,GAAmB,YAAnB;AACA;;;;AAGA,gBAAK5V,SAAL,GAAiB,EAAjB;AACA;;;;AAGA,gBAAKyhB,sBAAL;AAA+B;AAAkB;AAAO;;;AAGxD,oBAAM;AACF;AACA,cAAM5S,OAAO,GAAG,QAAKA,OAArB;;AACA,cAAIA,OAAJ,EAAa;AACT,mBAAOA,OAAO,CAAC7a,OAAR,CAAgB5S,IAAhB,CAAqB,kEAAUytB,OAAV,CAArB,EAAyC;AAAW;;;AAG3D;AAAA,qBAAM,qFAASA,OAAO,CAAC9hB,GAAR;AAAa;;;;AAI5B,wBAAA20B,MAAM;AAAA,uBAAIA,MAAM,CAACC,iBAAX;AAAA,eAJS,CAAT,EAAN;AAAA,aAHgD,CAAzC,CAAP;AAQH;;AACD,iBAAO,QAAKhrC,OAAL,CAAauK,QAAb,CACFC,YADE,GAEFC,IAFE,CAEG,6DAAK,CAAL,CAFH,EAEY;AAAW;;;AAG9B;AAAA,mBAAM,QAAKqgC,sBAAX;AAAA,WAHmB,CAFZ,CAAP;AAMH,SAtBgD,CAAjD;AAuBA;;;;AAGA,gBAAKG,YAAL,GAAoB,IAAI,0DAAJ,EAApB;AACA;;;;AAGA,gBAAKC,aAAL,GAAqB,QAAKD,YAAL,CAAkBxgC,IAAlB,CAAuB;AAAQ;;;;AAIpD,kBAAA0gC,CAAC;AAAA,iBAAIA,CAAJ;AAAA,SAJ2C,CAAvB,EAIX;AAAK;;;AAGf,oBAAM,CAAG,CAHC,CAJW,CAArB;AAQA;;;;AAGA,gBAAKC,aAAL,GAAqB,QAAKH,YAAL,CAAkBxgC,IAAlB,CAAuB;AAAQ;;;;AAIpD,kBAAA0gC,CAAC;AAAA,iBAAI,CAACA,CAAL;AAAA,SAJ2C,CAAvB,EAIV;AAAK;;;AAGhB,oBAAM,CAAG,CAHE,CAJU,CAArB;AAQA;;;;AAGA,gBAAK/gB,eAAL,GAAuB,IAAI,0DAAJ,EAAvB;AACA;;;;;;AAKA,gBAAKihB,WAAL,GAAmB,IAAI,0DAAJ,EAAnB;;AACA,YAAI,QAAKhM,SAAT,EAAoB;AAChB;AACA;AACA,kBAAKA,SAAL,CAAeiM,aAAf;AACH;;AACD,gBAAKluB,sBAAL,GAA8Bb,qBAA9B;AACA,gBAAK5S,eAAL,GAAuB,QAAKyT,sBAAL,EAAvB;AACA,gBAAK4Y,QAAL,GAAgBc,QAAQ,CAACd,QAAD,CAAR,IAAsB,CAAtC,CApLyN,CAqLzN;;AACA,gBAAKza,EAAL,GAAU,QAAKA,EAAf;;AACA,YAAI0uB,QAAJ,EAAc;AACV,cAAIA,QAAQ,CAACsB,sBAAT,IAAmC,IAAvC,EAA6C;AACzC,oBAAKA,sBAAL,GAA8BtB,QAAQ,CAACsB,sBAAvC;AACH;;AACD,cAAItB,QAAQ,CAACuB,yBAAT,IAAsC,IAA1C,EAAgD;AAC5C,oBAAKA,yBAAL,GAAiCvB,QAAQ,CAACuB,yBAA1C;AACH;AACJ;;AA9LwN;AA+L5N;AACD;;;;;;;;;AAyHA;;;mCAGW;AAAA;;AACP,eAAKC,eAAL,GAAuB,IAAI,uEAAJ,CAAmB,KAAK/F,QAAxB,CAAvB;AACA,eAAKxG,YAAL,CAAkB34B,IAAlB,GAFO,CAGP;AACA;AACA;;AACA,eAAK0hC,yBAAL,CACKx9B,IADL,CACU,8EADV,EACkC,kEAAU,KAAK+/B,QAAf,CADlC,EAEK1pC,SAFL;AAEgB;;;AAGhB,sBAAM;AACF,gBAAI,OAAI,CAAC4qC,SAAT,EAAoB;AAChB,qBAAI,CAACvB,UAAL,GAAkB,CAAlB;;AACA,qBAAI,CAACc,YAAL,CAAkB1sB,IAAlB,CAAuB,IAAvB;AACH,aAHD,MAIK;AACD,qBAAI,CAAC0sB,YAAL,CAAkB1sB,IAAlB,CAAuB,KAAvB;;AACA,qBAAI,CAACotB,UAAL,CAAgB3mC,OAAhB,GAA0B,CAA1B;;AACA,qBAAI,CAACglB,kBAAL,CAAwBkB,YAAxB;AACH;AACJ,WAfD;;AAgBA,eAAKxtB,cAAL,CAAoBmR,MAApB,GACKpE,IADL,CACU,kEAAU,KAAK+/B,QAAf,CADV,EAEK1pC,SAFL;AAEgB;;;AAGhB,sBAAM;AACF,gBAAI,OAAI,CAACopC,UAAT,EAAqB;AACjB,qBAAI,CAAC0B,YAAL,GAAoB,OAAI,CAACC,OAAL,CAAat1B,aAAb,CAA2B1T,qBAA3B,EAApB;;AACA,qBAAI,CAACmnB,kBAAL,CAAwBkB,YAAxB;AACH;AACJ,WAVD;AAWH;AACD;;;;;;6CAGqB;AAAA;;AACjB,eAAK4gB,eAAL;;AACA,eAAKL,eAAL,CAAqBjT,OAArB,CAA6B/tB,IAA7B,CAAkC,kEAAU,KAAK+/B,QAAf,CAAlC,EAA4D1pC,SAA5D;AAAuE;;;;AAIvE,oBAAAmF,KAAK,EAAI;AACLA,iBAAK,CAAC8lC,KAAN,CAAYj/B,OAAZ;AAAqB;;;;AAIrB,sBAAAi+B,MAAM;AAAA,qBAAIA,MAAM,CAACiB,MAAP,EAAJ;AAAA,aAJN;AAKA/lC,iBAAK,CAACgmC,OAAN,CAAcn/B,OAAd;AAAuB;;;;AAIvB,sBAAAi+B,MAAM;AAAA,qBAAIA,MAAM,CAACmB,QAAP,EAAJ;AAAA,aAJN;AAKH,WAfD;;AAgBA,eAAKhU,OAAL,CAAa7a,OAAb,CAAqB5S,IAArB,CAA0B,kEAAU,IAAV,CAA1B,EAA2C,kEAAU,KAAK+/B,QAAf,CAA3C,EAAqE1pC,SAArE;AAAgF;;;AAGhF,sBAAM;AACF,mBAAI,CAACqrC,aAAL;;AACA,mBAAI,CAACC,oBAAL;AACH,WAND;AAOH;AACD;;;;;;oCAGY;AACR,cAAI,KAAK/M,SAAT,EAAoB;AAChB,iBAAKsG,gBAAL;AACH;AACJ;AACD;;;;;;;oCAIYtoB,O,EAAS;AACjB;AACA;AACA,cAAIA,OAAO,CAAC,UAAD,CAAX,EAAyB;AACrB,iBAAK6hB,YAAL,CAAkB34B,IAAlB;AACH;;AACD,cAAI8W,OAAO,CAAC,2BAAD,CAAP,IAAwC,KAAKkN,WAAjD,EAA8D;AAC1D,iBAAKA,WAAL,CAAiB8hB,aAAjB,CAA+B,KAAKC,0BAApC;AACH;AACJ;AACD;;;;;;sCAGc;AACV,eAAK9B,QAAL,CAAcjkC,IAAd;;AACA,eAAKikC,QAAL,CAAcr/B,QAAd;;AACA,eAAK+zB,YAAL,CAAkB/zB,QAAlB;AACH;AACD;;;;;;;iCAIS;AACL,eAAKugC,SAAL,GAAiB,KAAKzoC,KAAL,EAAjB,GAAgC,KAAK8Z,IAAL,EAAhC;AACH;AACD;;;;;;;+BAIO;AAAA;;AACH,cAAI,KAAKsa,QAAL,IAAiB,CAAC,KAAKa,OAAvB,IAAkC,CAAC,KAAKA,OAAL,CAAa9xB,MAAhD,IAA0D,KAAK8jC,UAAnE,EAA+E;AAC3E;AACH;;AACD,eAAK0B,YAAL,GAAoB,KAAKC,OAAL,CAAat1B,aAAb,CAA2B1T,qBAA3B,EAApB,CAJG,CAKH;AACA;;AACA,eAAK0lC,gBAAL,GAAwBzR,QAAQ,CAACyV,gBAAgB,CAAC,KAAKV,OAAL,CAAat1B,aAAd,CAAhB,CAA6Ci2B,QAA7C,IAAyD,GAA1D,CAAhC;AACA,eAAKtC,UAAL,GAAkB,IAAlB;;AACA,eAAK3f,WAAL,CAAiBK,yBAAjB,CAA2C,IAA3C;;AACA,eAAK6hB,yBAAL;;AACA,eAAKC,uBAAL;;AACA,eAAK1iB,kBAAL,CAAwBkB,YAAxB,GAZG,CAaH;;;AACA,eAAKlrB,OAAL,CAAauK,QAAb,CAAsBC,YAAtB,GAAqCC,IAArC,CAA0C,6DAAK,CAAL,CAA1C,EAAmD3J,SAAnD;AAA8D;;;AAG9D,sBAAM;AACF,gBAAI,OAAI,CAACynC,gBAAL,IAAyB,OAAI,CAACoD,UAAL,CAAgBlrC,UAAzC,IACA,OAAI,CAACkrC,UAAL,CAAgBlrC,UAAhB,CAA2BmC,cAD/B,EAC+C;AAC3C,qBAAI,CAAC+oC,UAAL,CAAgBlrC,UAAhB,CAA2BmC,cAA3B,CAA0CtE,KAA1C,CAAgDkuC,QAAhD,aAA8D,OAAI,CAACjE,gBAAnE;AACH;AACJ,WARD;AASH;AACD;;;;;;;gCAIQ;AACJ,cAAI,KAAK2B,UAAT,EAAqB;AACjB,iBAAKA,UAAL,GAAkB,KAAlB;;AACA,iBAAK3f,WAAL,CAAiBK,yBAAjB,CAA2C,KAAK5Y,MAAL,KAAgB,KAAhB,GAAwB,KAAnE;;AACA,iBAAKgY,kBAAL,CAAwBkB,YAAxB;;AACA,iBAAKqL,UAAL;AACH;AACJ;AACD;;;;;;;;;;mCAOW3wB,K,EAAO;AACd,cAAI,KAAKsyB,OAAT,EAAkB;AACd,iBAAKyU,oBAAL,CAA0B/mC,KAA1B;AACH;AACJ;AACD;;;;;;;;;;;yCAQiBqa,E,EAAI;AACjB,eAAKwqB,SAAL,GAAiBxqB,EAAjB;AACH;AACD;;;;;;;;;;;0CAQkBA,E,EAAI;AAClB,eAAKsW,UAAL,GAAkBtW,EAAlB;AACH;AACD;;;;;;;;;;yCAOiBsX,U,EAAY;AACzB,eAAKF,QAAL,GAAgBE,UAAhB;;AACA,eAAKvN,kBAAL,CAAwBkB,YAAxB;;AACA,eAAKgU,YAAL,CAAkB34B,IAAlB;AACH;AACD;;;;;;;;AAqCA;;;;iCAIS;AACL,iBAAO,KAAKiW,IAAL,GAAY,KAAKA,IAAL,CAAU5W,KAAV,KAAoB,KAAhC,GAAwC,KAA/C;AACH;AACD;;;;;;;;uCAKeK,K,EAAO;AAClB,cAAI,CAAC,KAAKoxB,QAAV,EAAoB;AAChB,iBAAKqU,SAAL,GAAiB,KAAKkB,kBAAL,CAAwB3mC,KAAxB,CAAjB,GAAkD,KAAK4mC,oBAAL,CAA0B5mC,KAA1B,CAAlD;AACH;AACJ;AACD;;;;;;;;;6CAMqBA,K,EAAO;AACxB;AACA,cAAM4X,OAAO,GAAG5X,KAAK,CAAC4X,OAAtB;AACA;;AACA,cAAMivB,UAAU,GAAGjvB,OAAO,KAAK,gEAAZ,IAA0BA,OAAO,KAAK,8DAAtC,IACfA,OAAO,KAAK,gEADG,IACWA,OAAO,KAAK,iEAD1C;AAEA;;AACA,cAAMkvB,SAAS,GAAGlvB,OAAO,KAAK,2DAAZ,IAAqBA,OAAO,KAAK,2DAAnD;AACA;;AACA,cAAMoO,OAAO,GAAG,KAAK1B,WAArB,CATwB,CAUxB;;AACA,cAAI,CAAC0B,OAAO,CAAC+gB,QAAR,EAAD,IAAwBD,SAAS,IAAI,CAAC,6EAAe9mC,KAAf,CAAtC,IACC,CAAC,KAAKy/B,QAAL,IAAiBz/B,KAAK,CAACgnC,MAAxB,KAAmCH,UADxC,EACqD;AACjD7mC,iBAAK,CAAC6X,cAAN,GADiD,CACzB;;AACxB,iBAAKf,IAAL;AACH,WAJD,MAKK,IAAI,CAAC,KAAK2oB,QAAV,EAAoB;AACrB;AACA,gBAAMwH,wBAAwB,GAAG,KAAKplB,QAAtC;;AACA,gBAAIjK,OAAO,KAAK,0DAAZ,IAAoBA,OAAO,KAAK,yDAApC,EAAyC;AACrCA,qBAAO,KAAK,0DAAZ,GAAmBoO,OAAO,CAACC,kBAAR,EAAnB,GAAkDD,OAAO,CAACE,iBAAR,EAAlD;AACAlmB,mBAAK,CAAC6X,cAAN;AACH,aAHD,MAIK;AACDmO,qBAAO,CAACG,SAAR,CAAkBnmB,KAAlB;AACH;AACD;;;AACA,gBAAMknC,cAAc,GAAG,KAAKrlB,QAA5B,CAXqB,CAYrB;;AACA,gBAAIqlB,cAAc,IAAID,wBAAwB,KAAKC,cAAnD,EAAmE;AAC/D;AACA;AACA,mBAAKnD,cAAL,CAAoBoD,QAApB;AAA+B;AAAkBD,4BAApB,CAAsCE,SAAnE,EAA8E,KAA9E;AACH;AACJ;AACJ;AACD;;;;;;;;;2CAMmBpnC,K,EAAO;AACtB;AACA,cAAMgmB,OAAO,GAAG,KAAK1B,WAArB;AACA;;AACA,cAAM1M,OAAO,GAAG5X,KAAK,CAAC4X,OAAtB;AACA;;AACA,cAAMivB,UAAU,GAAGjvB,OAAO,KAAK,gEAAZ,IAA0BA,OAAO,KAAK,8DAAzD;AACA;;AACA,cAAMmvB,QAAQ,GAAG/gB,OAAO,CAAC+gB,QAAR,EAAjB;;AACA,cAAInvB,OAAO,KAAK,0DAAZ,IAAoBA,OAAO,KAAK,yDAApC,EAAyC;AACrC5X,iBAAK,CAAC6X,cAAN;AACAD,mBAAO,KAAK,0DAAZ,GAAmBoO,OAAO,CAACC,kBAAR,EAAnB,GAAkDD,OAAO,CAACE,iBAAR,EAAlD;AACH,WAHD,MAIK,IAAI2gB,UAAU,IAAI7mC,KAAK,CAACgnC,MAAxB,EAAgC;AACjC;AACAhnC,iBAAK,CAAC6X,cAAN;AACA,iBAAK7a,KAAL,GAHiC,CAIjC;AACA;AACH,WANI,MAOA,IAAI,CAAC+pC,QAAD,KAAcnvB,OAAO,KAAK,2DAAZ,IAAqBA,OAAO,KAAK,2DAA/C,KAAyDoO,OAAO,CAACqhB,UAAjE,IACL,CAAC,6EAAernC,KAAf,CADA,EACuB;AACxBA,iBAAK,CAAC6X,cAAN;;AACAmO,mBAAO,CAACqhB,UAAR,CAAmBC,qBAAnB;AACH,WAJI,MAKA,IAAI,CAACP,QAAD,IAAa,KAAK5C,SAAlB,IAA+BvsB,OAAO,KAAK,uDAA3C,IAAgD5X,KAAK,CAACunC,OAA1D,EAAmE;AACpEvnC,iBAAK,CAAC6X,cAAN;AACA;;AACA,gBAAM2vB,oBAAoB,GAAG,KAAKvV,OAAL,CAAa12B,IAAb;AAAmB;;;;AAIhD,sBAAAksC,GAAG;AAAA,qBAAI,CAACA,GAAG,CAACrW,QAAL,IAAiB,CAACqW,GAAG,CAAC5lB,QAA1B;AAAA,aAJ0B,CAA7B;AAKA,iBAAKoQ,OAAL,CAAaprB,OAAb;AAAsB;;;;AAItB,sBAAAi+B,MAAM,EAAI;AACN,kBAAI,CAACA,MAAM,CAAC1T,QAAZ,EAAsB;AAClBoW,oCAAoB,GAAG1C,MAAM,CAACiB,MAAP,EAAH,GAAqBjB,MAAM,CAACmB,QAAP,EAAzC;AACH;AACJ,aARD;AASH,WAjBI,MAkBA;AACD;AACA,gBAAMyB,sBAAsB,GAAG1hB,OAAO,CAACT,eAAvC;AACAS,mBAAO,CAACG,SAAR,CAAkBnmB,KAAlB;;AACA,gBAAI,KAAKmkC,SAAL,IAAkB0C,UAAlB,IAAgC7mC,KAAK,CAAC2nC,QAAtC,IAAkD3hB,OAAO,CAACqhB,UAA1D,IACArhB,OAAO,CAACT,eAAR,KAA4BmiB,sBADhC,EACwD;AACpD1hB,qBAAO,CAACqhB,UAAR,CAAmBC,qBAAnB;AACH;AACJ;AACJ;AACD;;;;;;mCAGW;AACP,cAAI,CAAC,KAAKlW,QAAV,EAAoB;AAChB,iBAAKwT,QAAL,GAAgB,IAAhB;AACA,iBAAK3L,YAAL,CAAkB34B,IAAlB;AACH;AACJ;AACD;;;;;;;;kCAKU;AACN,eAAKskC,QAAL,GAAgB,KAAhB;;AACA,cAAI,CAAC,KAAKxT,QAAN,IAAkB,CAAC,KAAKqU,SAA5B,EAAuC;AACnC,iBAAKnV,UAAL;;AACA,iBAAKvM,kBAAL,CAAwBkB,YAAxB;;AACA,iBAAKgU,YAAL,CAAkB34B,IAAlB;AACH;AACJ;AACD;;;;;;;sCAIc;AAAA;;AACV,eAAKolC,UAAL,CAAgB1uB,cAAhB,CAA+BxS,IAA/B,CAAoC,6DAAK,CAAL,CAApC,EAA6C3J,SAA7C;AAAwD;;;AAGxD,sBAAM;AACF,mBAAI,CAACkpB,kBAAL,CAAwBrG,aAAxB;;AACA,mBAAI,CAACkqB,wBAAL;;AACA,mBAAI,CAACC,KAAL,CAAWv3B,aAAX,CAAyBw3B,SAAzB,GAAqC,OAAI,CAAC5D,UAA1C;AACH,WAPD;AAQH;AACD;;;;;;;yCAIiB;AACb,iBAAO,KAAKJ,gBAAL,iBAA+B,KAAKA,gBAAL,CAAsB9U,KAArD,IAA+D,EAAtE;AACH;AACD;;;;;;;;AAOA;;;;+CAIuB;AAAA;;AACnB;AACA;AACA+B,iBAAO,CAACC,OAAR,GAAkBC,IAAlB;AAAwB;;;AAGxB,sBAAM;AACF,mBAAI,CAACyV,oBAAL,CAA0B,OAAI,CAACtN,SAAL,GAAiB,OAAI,CAACA,SAAL,CAAez5B,KAAhC,GAAwC,OAAI,CAACooC,MAAvE;;AACA,mBAAI,CAAC9O,YAAL,CAAkB34B,IAAlB;AACH,WAND;AAOH;AACD;;;;;;;;;;6CAOqBX,K,EAAO;AAAA;;AACxB,cAAI,KAAK8/B,QAAL,IAAiB9/B,KAArB,EAA4B;AACxB,gBAAI,CAACqoC,KAAK,CAACC,OAAN,CAActoC,KAAd,CAAL,EAA2B;AACvB,oBAAMgjC,8BAA8B,EAApC;AACH;;AACD,iBAAK6C,eAAL,CAAqB7mB,KAArB;;AACAhf,iBAAK,CAACkH,OAAN;AAAe;;;;AAIf,sBAACgK,YAAD;AAAA,qBAAkB,OAAI,CAACq3B,YAAL,CAAkBr3B,YAAlB,CAAlB;AAAA,aAJA;;AAKA,iBAAKs3B,WAAL;AACH,WAXD,MAYK;AACD,iBAAK3C,eAAL,CAAqB7mB,KAArB;AACA;;;AACA,gBAAMypB,mBAAmB,GAAG,KAAKF,YAAL,CAAkBvoC,KAAlB,CAA5B,CAHC,CAID;AACA;;;AACA,gBAAIyoC,mBAAJ,EAAyB;AACrB,mBAAK9jB,WAAL,CAAiBwB,aAAjB,CAA+BsiB,mBAA/B;AACH,aAFD,MAGK,IAAI,CAAC,KAAK3C,SAAV,EAAqB;AACtB;AACA;AACA,mBAAKnhB,WAAL,CAAiBwB,aAAjB,CAA+B,CAAC,CAAhC;AACH;AACJ;;AACD,eAAK/B,kBAAL,CAAwBkB,YAAxB;AACH;AACD;;;;;;;;;qCAMatlB,K,EAAO;AAAA;;AAChB;AACA,cAAMyoC,mBAAmB,GAAG,KAAKnW,OAAL,CAAa0I,IAAb;AAAmB;;;;AAI/C,oBAACmK,MAAD,EAAY;AACR,gBAAI;AACA;AACA,qBAAOA,MAAM,CAACnlC,KAAP,IAAgB,IAAhB,IAAwB,OAAI,CAACykC,YAAL,CAAkBU,MAAM,CAACnlC,KAAzB,EAAgCA,KAAhC,CAA/B;AACH,aAHD,CAIA,OAAOi7B,KAAP,EAAc;AACV,kBAAI,iEAAJ,EAAiB;AACb;AACAyN,uBAAO,CAACC,IAAR,CAAa1N,KAAb;AACH;;AACD,qBAAO,KAAP;AACH;AACJ,WAhB2B,CAA5B;;AAiBA,cAAIwN,mBAAJ,EAAyB;AACrB,iBAAK5C,eAAL,CAAqBO,MAArB,CAA4BqC,mBAA5B;AACH;;AACD,iBAAOA,mBAAP;AACH;AACD;;;;;;;;0CAKkB;AAAA;;AACd,eAAK9jB,WAAL,GAAmB,IAAI,4EAAJ,CAA+B,KAAK2N,OAApC,EACdmU,aADc,CACA,KAAKC,0BADL,EAEd5hB,uBAFc,GAGdE,yBAHc,CAGY,KAAK5Y,MAAL,KAAgB,KAAhB,GAAwB,KAHpC,EAIdw8B,uBAJc,CAIU,CAAC,UAAD,CAJV,CAAnB;;AAKA,eAAKjkB,WAAL,CAAiBkkB,MAAjB,CAAwBhkC,IAAxB,CAA6B,kEAAU,KAAK+/B,QAAf,CAA7B,EAAuD1pC,SAAvD;AAAkE;;;AAGlE,sBAAM;AACF;AACA;AACA,gBAAI,CAAC,OAAI,CAAC4kC,QAAN,IAAkB,OAAI,CAACnb,WAAL,CAAiB+iB,UAAvC,EAAmD;AAC/C,qBAAI,CAAC/iB,WAAL,CAAiB+iB,UAAjB,CAA4BC,qBAA5B;AACH,aALC,CAMF;AACA;;;AACA,mBAAI,CAACxnB,KAAL;;AACA,mBAAI,CAAC9iB,KAAL;AACH,WAbD;;AAcA,eAAKsnB,WAAL,CAAiB1b,MAAjB,CAAwBpE,IAAxB,CAA6B,kEAAU,KAAK+/B,QAAf,CAA7B,EAAuD1pC,SAAvD;AAAkE;;;AAGlE,sBAAM;AACF,gBAAI,OAAI,CAACopC,UAAL,IAAmB,OAAI,CAAC4D,KAA5B,EAAmC;AAC/B,qBAAI,CAACY,2BAAL;AACH,aAFD,MAGK,IAAI,CAAC,OAAI,CAACxE,UAAN,IAAoB,CAAC,OAAI,CAACxE,QAA1B,IAAsC,OAAI,CAACnb,WAAL,CAAiB+iB,UAA3D,EAAuE;AACxE,qBAAI,CAAC/iB,WAAL,CAAiB+iB,UAAjB,CAA4BC,qBAA5B;AACH;AACJ,WAVD;AAWH;AACD;;;;;;;;wCAKgB;AAAA;;AACZ;AACA,cAAMoB,kBAAkB,GAAG,oDAAM,KAAKzW,OAAL,CAAa7a,OAAnB,EAA4B,KAAKmtB,QAAjC,CAA3B;AACA,eAAKM,sBAAL,CAA4BrgC,IAA5B,CAAiC,kEAAUkkC,kBAAV,CAAjC,EAAgE7tC,SAAhE;AAA2E;;;;AAI3E,oBAAAmF,KAAK,EAAI;AACL,mBAAI,CAAC2oC,SAAL,CAAe3oC,KAAK,CAACyR,MAArB,EAA6BzR,KAAK,CAAC4oC,WAAnC;;AACA,gBAAI5oC,KAAK,CAAC4oC,WAAN,IAAqB,CAAC,OAAI,CAACnJ,QAA3B,IAAuC,OAAI,CAACwE,UAAhD,EAA4D;AACxD,qBAAI,CAACjnC,KAAL;;AACA,qBAAI,CAAC8iB,KAAL;AACH;AACJ,WAVD,EAHY,CAcZ;AACA;;AACA,+FAAS,KAAKmS,OAAL,CAAa9hB,GAAb;AAAkB;;;;AAI3B,oBAAA20B,MAAM;AAAA,mBAAIA,MAAM,CAAC+D,aAAX;AAAA,WAJG,CAAT,GAKKrkC,IALL,CAKU,kEAAUkkC,kBAAV,CALV,EAMK7tC,SANL;AAMgB;;;AAGhB,sBAAM;AACF,mBAAI,CAACkpB,kBAAL,CAAwBkB,YAAxB;;AACA,mBAAI,CAACgU,YAAL,CAAkB34B,IAAlB;AACH,WAZD;;AAaA,eAAKwoC,aAAL;AACH;AACD;;;;;;;;;;kCAOUhE,M,EAAQ8D,W,EAAa;AAC3B;AACA,cAAMG,WAAW,GAAG,KAAKvD,eAAL,CAAqBwD,UAArB,CAAgClE,MAAhC,CAApB;;AACA,cAAIA,MAAM,CAACnlC,KAAP,IAAgB,IAAhB,IAAwB,CAAC,KAAKwkC,SAAlC,EAA6C;AACzCW,kBAAM,CAACmB,QAAP;;AACA,iBAAKT,eAAL,CAAqB7mB,KAArB;;AACA,iBAAKsqB,iBAAL,CAAuBnE,MAAM,CAACnlC,KAA9B;AACH,WAJD,MAKK;AACD,gBAAIopC,WAAW,KAAKjE,MAAM,CAACjjB,QAA3B,EAAqC;AACjCijB,oBAAM,CAACjjB,QAAP,GAAkB,KAAK2jB,eAAL,CAAqBO,MAArB,CAA4BjB,MAA5B,CAAlB,GACI,KAAKU,eAAL,CAAqBS,QAArB,CAA8BnB,MAA9B,CADJ;AAEH;;AACD,gBAAI8D,WAAJ,EAAiB;AACb,mBAAKtkB,WAAL,CAAiBwB,aAAjB,CAA+Bgf,MAA/B;AACH;;AACD,gBAAI,KAAKrF,QAAT,EAAmB;AACf,mBAAK0I,WAAL;;AACA,kBAAIS,WAAJ,EAAiB;AACb;AACA;AACA;AACA;AACA,qBAAK9oB,KAAL;AACH;AACJ;AACJ;;AACD,cAAIipB,WAAW,KAAK,KAAKvD,eAAL,CAAqBwD,UAArB,CAAgClE,MAAhC,CAApB,EAA6D;AACzD,iBAAKmE,iBAAL;AACH;;AACD,eAAKhQ,YAAL,CAAkB34B,IAAlB;AACH;AACD;;;;;;;;sCAKc;AAAA;;AACV,cAAI,KAAKm/B,QAAT,EAAmB;AACf;AACA,gBAAMxN,OAAO,GAAG,KAAKA,OAAL,CAAa/M,OAAb,EAAhB;;AACA,iBAAKsgB,eAAL,CAAqB0D,IAArB;AAA2B;;;;;AAK3B,sBAACC,CAAD,EAAIC,CAAJ,EAAU;AACN,qBAAO,OAAI,CAACC,cAAL,GAAsB,OAAI,CAACA,cAAL,CAAoBF,CAApB,EAAuBC,CAAvB,EAA0BnX,OAA1B,CAAtB,GACHA,OAAO,CAACtxB,OAAR,CAAgBwoC,CAAhB,IAAqBlX,OAAO,CAACtxB,OAAR,CAAgByoC,CAAhB,CADzB;AAEH,aARD;;AASA,iBAAKnQ,YAAL,CAAkB34B,IAAlB;AACH;AACJ;AACD;;;;;;;;;0CAMkBgpC,a,EAAe;AAC7B;AACA,cAAIC,WAAW,GAAG,IAAlB;;AACA,cAAI,KAAK9J,QAAT,EAAmB;AACf8J,uBAAW;AAAK;AAAkB,iBAAK1nB,QAAzB,CAAqC1R,GAArC;AAA0C;;;;AAIxD,sBAAA20B,MAAM;AAAA,qBAAIA,MAAM,CAACnlC,KAAX;AAAA,aAJQ,CAAd;AAKH,WAND,MAOK;AACD4pC,uBAAW,GAAG,KAAK1nB,QAAL;AAAkB;AAAkB,iBAAKA,QAAzB,CAAqCliB,KAArD,GAA6D2pC,aAA3E;AACH;;AACD,eAAKvB,MAAL,GAAcwB,WAAd;AACA,eAAKnE,WAAL,CAAiB9sB,IAAjB,CAAsBixB,WAAtB;;AACA,eAAK/E,SAAL,CAAe+E,WAAf;;AACA,eAAKplB,eAAL,CAAqB7L,IAArB,CAA0B,IAAIkrB,eAAJ,CAAoB,IAApB,EAA0B+F,WAA1B,CAA1B;;AACA,eAAKxlB,kBAAL,CAAwBkB,YAAxB;AACH;AACD;;;;;;;;wCAKgB;AACZ,eAAKwf,UAAL,GAAkB,KAAKxS,OAAL,CAAa9hB,GAAb;AAAkB;;;;AAIpC,oBAAA20B,MAAM;AAAA,mBAAIA,MAAM,CAACxvB,EAAX;AAAA,WAJY,EAII2qB,IAJJ,CAIS,GAJT,CAAlB;AAKH;AACD;;;;;;;;;kDAM0B;AACtB,cAAI,KAAK3b,WAAT,EAAsB;AAClB,gBAAI,KAAK2Q,KAAT,EAAgB;AACZ,mBAAK3Q,WAAL,CAAiB2B,kBAAjB;AACH,aAFD,MAGK;AACD,mBAAK3B,WAAL,CAAiBwB,aAAjB,CAA+B,KAAK0f,eAAL,CAAqB3jB,QAArB,CAA8B,CAA9B,CAA/B;AACH;AACJ;AACJ;AACD;;;;;;;;sDAK8B;AAC1B;AACA,cAAM2nB,iBAAiB,GAAG,KAAKllB,WAAL,CAAiBiB,eAAjB,IAAoC,CAA9D;AACA;;AACA,cAAMkkB,UAAU,GAAG,6FAA8BD,iBAA9B,EAAiD,KAAKvX,OAAtD,EAA+D,KAAKyX,YAApE,CAAnB;AACA,eAAK7B,KAAL,CAAWv3B,aAAX,CAAyBw3B,SAAzB,GAAqC,wFAAyB0B,iBAAiB,GAAGC,UAA7C,EAAyD,KAAKE,cAAL,EAAzD,EAAgF,KAAK9B,KAAL,CAAWv3B,aAAX,CAAyBw3B,SAAzG,EAAoHjF,uBAApH,CAArC;AACH;AACD;;;;;;;;8BAKM5Q,O,EAAS;AACX,eAAKpS,WAAL,CAAiBvP,aAAjB,CAA+BwP,KAA/B,CAAqCmS,OAArC;AACH;AACD;;;;;;;;;wCAMgB6S,M,EAAQ;AACpB,iBAAO,KAAK7S,OAAL,CAAarhB,MAAb;AAAqB;;;;;;AAM5B,oBAAC2X,MAAD,EAASqhB,OAAT,EAAkBlpC,KAAlB,EAA4B;AACxB,gBAAI6nB,MAAM,KAAK9qB,SAAf,EAA0B;AACtB,qBAAO8qB,MAAP;AACH;;AACD,mBAAOuc,MAAM,KAAK8E,OAAX,GAAqBlpC,KAArB,GAA6BjD,SAApC;AACH,WAXM,EAWHA,SAXG,CAAP;AAYH;AACD;;;;;;;;oDAK4B;AACxB;AACA,cAAMosC,UAAU,GAAG,KAAKF,cAAL,EAAnB;AACA;;;AACA,cAAMG,KAAK,GAAG,KAAKC,aAAL,EAAd;AACA;;;AACA,cAAMC,WAAW,GAAGjvC,IAAI,CAAC2T,GAAL,CAASo7B,KAAK,GAAGD,UAAjB,EAA6BhH,uBAA7B,CAApB;AACA;;AACA,cAAMoH,qBAAqB,GAAGH,KAAK,GAAGD,UAAtC,CARwB,CASxB;;AACA;;AACA,cAAMK,SAAS,GAAGD,qBAAqB,GAAGD,WAA1C,CAXwB,CAYxB;;AACA;;AACA,cAAIG,oBAAoB,GAAG,KAAKlV,KAAL,GAAa,CAAb;AAAkB;AAAkB,eAAKmV,eAAL,CAAqB,KAAK5E,eAAL,CAAqB3jB,QAArB,CAA8B,CAA9B,CAArB,CAA/D;AACAsoB,8BAAoB,IAAI,6FAA8BA,oBAA9B,EAAoD,KAAKlY,OAAzD,EAAkE,KAAKyX,YAAvE,CAAxB,CAfwB,CAgBxB;AACA;;AACA;;AACA,cAAMW,YAAY,GAAGL,WAAW,GAAG,CAAnC;AACA,eAAK9F,UAAL,GAAkB,KAAKoG,uBAAL,CAA6BH,oBAA7B,EAAmDE,YAAnD,EAAiEH,SAAjE,CAAlB;AACA,eAAKhiC,QAAL,GAAgB,KAAKqiC,wBAAL,CAA8BJ,oBAA9B,EAAoDE,YAApD,EAAkEH,SAAlE,CAAhB;;AACA,eAAKM,2BAAL,CAAiCN,SAAjC;AACH;AACD;;;;;;;;;;;;;;gDAWwBplB,a,EAAeulB,Y,EAAcH,S,EAAW;AAC5D;AACA,cAAML,UAAU,GAAG,KAAKF,cAAL,EAAnB;AACA;;;AACA,cAAMc,yBAAyB,GAAGZ,UAAU,GAAG/kB,aAA/C;AACA;;AACA,cAAM4lB,gBAAgB,GAAGb,UAAU,GAAG,CAAtC,CAN4D,CAO5D;AACA;AACA;AACA;;AACA;;AACA,cAAMc,qBAAqB,GAAGF,yBAAyB,GAAGJ,YAA5B,GAA2CK,gBAAzE;AACA,iBAAO3vC,IAAI,CAAC2T,GAAL,CAAS3T,IAAI,CAACwS,GAAL,CAAS,CAAT,EAAYo9B,qBAAZ,CAAT,EAA6CT,SAA7C,CAAP;AACH;AACD;;;;;;;wCAIgB;AACZ;AACA;AACA,iBAAO,KAAK7mB,cAAL,GAAsB,IAAtB,GAA6B,KAAKD,SAAL,IAAkB,KAAK2H,WAA3D;AACH;AACD;;;;;;;6CAIqB;AACjB,cAAI,KAAK1H,cAAT,EAAyB;AACrB,mBAAO,KAAKA,cAAZ;AACH,WAHgB,CAIjB;AACA;;;AACA,cAAI,CAAC,KAAKygB,gBAAN,IAA0B,CAAC,KAAKA,gBAAL,CAAsB3J,iBAAtB,EAA3B,IACA,KAAKyQ,aAAL,EADJ,EAC0B;AACtB,mBAAO,IAAP;AACH;;AACD,iBAAO,KAAK9G,gBAAL,CAAsB1O,QAAtB,IAAkC,IAAzC;AACH;AACD;;;;;;;mDAI2B;AACvB,cAAI,KAAKqQ,SAAL,IAAkB,KAAKnhB,WAAvB,IAAsC,KAAKA,WAAL,CAAiB+iB,UAA3D,EAAuE;AACnE,mBAAO,KAAK/iB,WAAL,CAAiB+iB,UAAjB,CAA4B/xB,EAAnC;AACH;;AACD,iBAAO,IAAP;AACH;AACD;;;;;;;;;;;;mDAS2B;AACvB;AACA,cAAM5Y,WAAW,GAAG,KAAKgpC,UAAL,CAAgBlrC,UAAhB,CAA2BmC,cAA3B,CAA0CC,qBAA1C,EAApB;AACA;;AACA,cAAMiuC,YAAY,GAAG,KAAKpzC,cAAL,CAAoB2B,eAApB,EAArB;AACA;;;AACA,cAAMoV,KAAK,GAAG,KAAKzC,MAAL,EAAd;AACA;;;AACA,cAAM++B,YAAY,GAAG,KAAKrL,QAAL,GAAgBwD,+BAA+B,GAAGH,sBAAlD,GACjBA,sBAAsB,GAAG,CAD7B;AAEA;;AACA,cAAI/jC,OAAJ,CAXuB,CAYvB;;AACA,cAAI,KAAK0gC,QAAT,EAAmB;AACf1gC,mBAAO,GAAGkkC,+BAAV;AACH,WAFD,MAGK;AACD;AACA,gBAAIphB,QAAQ,GAAG,KAAK2jB,eAAL,CAAqB3jB,QAArB,CAA8B,CAA9B,KAAoC,KAAKoQ,OAAL,CAAavP,KAAhE;AACA3jB,mBAAO,GAAG8iB,QAAQ,IAAIA,QAAQ,CAACkpB,KAArB,GAA6BhI,6BAA7B,GAA6DD,sBAAvE;AACH,WApBsB,CAqBvB;;;AACA,cAAI,CAACt0B,KAAL,EAAY;AACRzP,mBAAO,IAAI,CAAC,CAAZ;AACH,WAxBsB,CAyBvB;;AACA;;;AACA,cAAMuN,YAAY,GAAG,KAAK5P,WAAW,CAAC7E,IAAZ,GAAmBkH,OAAnB,IAA8ByP,KAAK,GAAGs8B,YAAH,GAAkB,CAArD,CAAL,CAArB;AACA;;AACA,cAAMv+B,aAAa,GAAG7P,WAAW,CAACb,KAAZ,GAAoBkD,OAApB,GAA8B8rC,YAAY,CAACrxC,KAA3C,IACfgV,KAAK,GAAG,CAAH,GAAOs8B,YADG,CAAtB,CA7BuB,CA+BvB;;AACA,cAAIx+B,YAAY,GAAG,CAAnB,EAAsB;AAClBvN,mBAAO,IAAIuN,YAAY,GAAG42B,6BAA1B;AACH,WAFD,MAGK,IAAI32B,aAAa,GAAG,CAApB,EAAuB;AACxBxN,mBAAO,IAAIwN,aAAa,GAAG22B,6BAA3B;AACH,WArCsB,CAsCvB;AACA;AACA;;;AACA,eAAKwC,UAAL,CAAgB3mC,OAAhB,GAA0BhE,IAAI,CAACiwC,KAAL,CAAWjsC,OAAX,CAA1B;AACA,eAAK2mC,UAAL,CAAgBlrC,UAAhB,CAA2BS,cAA3B;AACH;AACD;;;;;;;;;;;;;iDAUyB6pB,a,EAAeulB,Y,EAAcH,S,EAAW;AAC7D;AACA,cAAML,UAAU,GAAG,KAAKF,cAAL,EAAnB;AACA;;;AACA,cAAMsB,sBAAsB,GAAG,CAACpB,UAAU,GAAG,KAAKlE,YAAL,CAAkBrsC,MAAhC,IAA0C,CAAzE;AACA;;AACA,cAAM4xC,mBAAmB,GAAGnwC,IAAI,CAACowC,KAAL,CAAWtI,uBAAuB,GAAGgH,UAArC,CAA5B;AACA;;AACA,cAAIuB,wBAAJ,CAR6D,CAS7D;;AACA,cAAI,KAAKzG,uBAAT,EAAkC;AAC9B,mBAAO,CAAP;AACH;;AACD,cAAI,KAAKT,UAAL,KAAoB,CAAxB,EAA2B;AACvBkH,oCAAwB,GAAGtmB,aAAa,GAAG+kB,UAA3C;AACH,WAFD,MAGK,IAAI,KAAK3F,UAAL,KAAoBgG,SAAxB,EAAmC;AACpC;AACA,gBAAMmB,mBAAmB,GAAG,KAAKtB,aAAL,KAAuBmB,mBAAnD;AACA;;AACA,gBAAMI,oBAAoB,GAAGxmB,aAAa,GAAGumB,mBAA7C,CAJoC,CAKpC;AACA;;AACA;;AACA,gBAAIE,iBAAiB,GAAG1B,UAAU,GAAG,CAAC,KAAKE,aAAL,KAAuBF,UAAvB,GAAoChH,uBAArC,IAAgEgH,UAArG,CARoC,CASpC;AACA;AACA;AACA;;AACAuB,oCAAwB,GAAGE,oBAAoB,GAAGzB,UAAvB,GAAoC0B,iBAA/D;AACH,WAdI,MAeA;AACD;AACA;AACA;AACAH,oCAAwB,GAAGf,YAAY,GAAGR,UAAU,GAAG,CAAvD;AACH,WApC4D,CAqC7D;AACA;AACA;;;AACA,iBAAO9uC,IAAI,CAACiwC,KAAL,CAAWI,wBAAwB,GAAG,CAAC,CAA5B,GAAgCH,sBAA3C,CAAP;AACH;AACD;;;;;;;;;;;;oDAS4Bf,S,EAAW;AACnC;AACA,cAAML,UAAU,GAAG,KAAKF,cAAL,EAAnB;AACA;;;AACA,cAAMkB,YAAY,GAAG,KAAKpzC,cAAL,CAAoB2B,eAApB,EAArB;AACA;;;AACA,cAAMoyC,iBAAiB,GAAG,KAAK7F,YAAL,CAAkB/tC,GAAlB,GAAwBsrC,6BAAlD;AACA;;AACA,cAAMuI,oBAAoB,GAAGZ,YAAY,CAACvxC,MAAb,GAAsB,KAAKqsC,YAAL,CAAkBjqC,MAAxC,GAAiDwnC,6BAA9E;AACA;;AACA,cAAMwI,cAAc,GAAG3wC,IAAI,CAACC,GAAL,CAAS,KAAKkN,QAAd,CAAvB;AACA;;AACA,cAAMyjC,gBAAgB,GAAG5wC,IAAI,CAAC2T,GAAL,CAAS,KAAKq7B,aAAL,KAAuBF,UAAhC,EAA4ChH,uBAA5C,CAAzB;AACA;;AACA,cAAM+I,iBAAiB,GAAGD,gBAAgB,GAAGD,cAAnB,GAAoC,KAAK/F,YAAL,CAAkBrsC,MAAhF;;AACA,cAAIsyC,iBAAiB,GAAGH,oBAAxB,EAA8C;AAC1C,iBAAKI,cAAL,CAAoBD,iBAApB,EAAuCH,oBAAvC;AACH,WAFD,MAGK,IAAIC,cAAc,GAAGF,iBAArB,EAAwC;AACzC,iBAAKM,gBAAL,CAAsBJ,cAAtB,EAAsCF,iBAAtC,EAAyDtB,SAAzD;AACH,WAFI,MAGA;AACD,iBAAK7H,gBAAL,GAAwB,KAAK0J,uBAAL,EAAxB;AACH;AACJ;AACD;;;;;;;;;;uCAOeH,iB,EAAmBH,oB,EAAsB;AACpD;;AACA;AACA,cAAMO,qBAAqB,GAAGjxC,IAAI,CAACiwC,KAAL,CAAWY,iBAAiB,GAAGH,oBAA/B,CAA9B,CAHoD,CAIpD;AACA;;AACA,eAAKvH,UAAL,IAAmB8H,qBAAnB;AACA,eAAK9jC,QAAL,IAAiB8jC,qBAAjB;AACA,eAAK3J,gBAAL,GAAwB,KAAK0J,uBAAL,EAAxB,CARoD,CASpD;AACA;AACA;;AACA,cAAI,KAAK7H,UAAL,IAAmB,CAAvB,EAA0B;AACtB,iBAAKA,UAAL,GAAkB,CAAlB;AACA,iBAAKh8B,QAAL,GAAgB,CAAhB;AACA,iBAAKm6B,gBAAL;AACH;AACJ;AACD;;;;;;;;;;;yCAQiBqJ,c,EAAgBF,iB,EAAmBtB,S,EAAW;AAC3D;;AACA;AACA,cAAM+B,qBAAqB,GAAGlxC,IAAI,CAACiwC,KAAL,CAAWU,cAAc,GAAGF,iBAA5B,CAA9B,CAH2D,CAI3D;AACA;;AACA,eAAKtH,UAAL,IAAmB+H,qBAAnB;AACA,eAAK/jC,QAAL,IAAiB+jC,qBAAjB;AACA,eAAK5J,gBAAL,GAAwB,KAAK0J,uBAAL,EAAxB,CAR2D,CAS3D;AACA;AACA;;AACA,cAAI,KAAK7H,UAAL,IAAmBgG,SAAvB,EAAkC;AAC9B,iBAAKhG,UAAL,GAAkBgG,SAAlB;AACA,iBAAKhiC,QAAL,GAAgB,CAAhB;AACA,iBAAKm6B,gBAAL;AACA;AACH;AACJ;AACD;;;;;;;;kDAK0B;AACtB;AACA,cAAMwH,UAAU,GAAG,KAAKF,cAAL,EAAnB;AACA;;;AACA,cAAMsB,sBAAsB,GAAG,CAACpB,UAAU,GAAG,KAAKlE,YAAL,CAAkBrsC,MAAhC,IAA0C,CAAzE;AACA;;AACA,cAAM4F,OAAO,GAAGnE,IAAI,CAACC,GAAL,CAAS,KAAKkN,QAAd,IAA0B+iC,sBAA1B,GAAmDpB,UAAU,GAAG,CAAhF;AACA,+BAAc3qC,OAAd;AACH;AACD;;;;;;;;wCAKgB;AACZ,iBAAO,KAAK+yB,OAAL,CAAa9xB,MAAb,GAAsB,KAAKupC,YAAL,CAAkBvpC,MAA/C;AACH;AACD;;;;;;;;yCAKiB;AACb,iBAAO,KAAKmiC,gBAAL,GAAwBU,qBAA/B;AACH;AACD;;;;;;;;;0CAMkBvI,G,EAAK;AACnB,eAAKuF,gBAAL,GAAwBvF,GAAG,CAACwF,IAAJ,CAAS,GAAT,CAAxB;AACH;AACD;;;;;;;;2CAKmB;AACf,eAAKngB,KAAL;AACA,eAAKhJ,IAAL;AACH;AACD;;;;;;;;4BA5nCc;AACV,iBAAO,KAAK8tB,QAAL,IAAiB,KAAKX,UAA7B;AACH;AACD;;;;;;;4BAIkB;AAAE,iBAAO,KAAKiI,YAAZ;AAA2B;AAC/C;;;;;0BAIgBvsC,K,EAAO;AACnB,eAAKusC,YAAL,GAAoBvsC,KAApB;AACA,eAAKs5B,YAAL,CAAkB34B,IAAlB;AACH;AACD;;;;;;;4BAIe;AAAE,iBAAO,KAAK+xB,SAAZ;AAAwB;AACzC;;;;;0BAIa1yB,K,EAAO;AAChB,eAAK0yB,SAAL,GAAiB,oFAAsB1yB,KAAtB,CAAjB;AACA,eAAKs5B,YAAL,CAAkB34B,IAAlB;AACH;AACD;;;;;;;4BAIe;AAAE,iBAAO,KAAK6jC,SAAZ;AAAwB;AACzC;;;;;0BAIaxkC,K,EAAO;AAChB,cAAI,KAAK6lC,eAAT,EAA0B;AACtB,kBAAM9C,gCAAgC,EAAtC;AACH;;AACD,eAAKyB,SAAL,GAAiB,oFAAsBxkC,KAAtB,CAAjB;AACH;AACD;;;;;;;4BAI6B;AAAE,iBAAO,KAAKglC,uBAAZ;AAAsC;AACrE;;;;;0BAI2BhlC,K,EAAO;AAC9B,eAAKglC,uBAAL,GAA+B,oFAAsBhlC,KAAtB,CAA/B;AACH;AACD;;;;;;;;;4BAMkB;AAAE,iBAAO,KAAKykC,YAAZ;AAA2B;AAC/C;;;;;0BAIgBpqB,E,EAAI;AAChB,cAAI,OAAOA,EAAP,KAAc,UAAlB,EAA8B;AAC1B,kBAAM4oB,iCAAiC,EAAvC;AACH;;AACD,eAAKwB,YAAL,GAAoBpqB,EAApB;;AACA,cAAI,KAAKwrB,eAAT,EAA0B;AACtB;AACA,iBAAKW,oBAAL;AACH;AACJ;AACD;;;;;;;4BAIY;AAAE,iBAAO,KAAK4B,MAAZ;AAAqB;AACnC;;;;;0BAIUzV,Q,EAAU;AAChB,cAAIA,QAAQ,KAAK,KAAKyV,MAAtB,EAA8B;AAC1B,iBAAKoE,UAAL,CAAgB7Z,QAAhB;AACA,iBAAKyV,MAAL,GAAczV,QAAd;AACH;AACJ;AACD;;;;;;;4BAIgC;AAAE,iBAAO,KAAK+T,0BAAZ;AAAyC;AAC3E;;;;;0BAI8B1mC,K,EAAO;AACjC,eAAK0mC,0BAAL,GAAkC,mFAAqB1mC,KAArB,CAAlC;AACH;AACD;;;;;;;4BAIS;AAAE,iBAAO,KAAKugC,GAAZ;AAAkB;AAC7B;;;;;0BAIOvgC,K,EAAO;AACV,eAAKugC,GAAL,GAAWvgC,KAAK,IAAI,KAAKg/B,IAAzB;AACA,eAAK1F,YAAL,CAAkB34B,IAAlB;AACH;;;4BAkMe;AACZ,iBAAO,KAAK2jC,UAAZ;AACH;AACD;;;;;;;4BAIe;AACX,iBAAO,KAAKxE,QAAL,GAAgB,KAAK+F,eAAL,CAAqB3jB,QAArC,GAAgD,KAAK2jB,eAAL,CAAqB3jB,QAArB,CAA8B,CAA9B,CAAvD;AACH;AACD;;;;;;;4BAImB;AACf,cAAI,KAAKoT,KAAT,EAAgB;AACZ,mBAAO,EAAP;AACH;;AACD,cAAI,KAAKkP,SAAT,EAAoB;AAChB;AACA,gBAAMiI,eAAe,GAAG,KAAK5G,eAAL,CAAqB3jB,QAArB,CAA8B1R,GAA9B;AAAmC;;;;AAI3D,sBAAA20B,MAAM;AAAA,qBAAIA,MAAM,CAACsC,SAAX;AAAA,aAJkB,CAAxB;;AAKA,gBAAI,KAAKr7B,MAAL,EAAJ,EAAmB;AACfqgC,6BAAe,CAACC,OAAhB;AACH,aATe,CAUhB;;;AACA,mBAAOD,eAAe,CAACnM,IAAhB,CAAqB,IAArB,CAAP;AACH;;AACD,iBAAO,KAAKuF,eAAL,CAAqB3jB,QAArB,CAA8B,CAA9B,EAAiCulB,SAAxC;AACH;;;4BAsKW;AACR,iBAAO,CAAC,KAAK5B,eAAN,IAAyB,KAAKA,eAAL,CAAqB8G,OAArB,EAAhC;AACH;;;4BAmoBsB;AACnB,iBAAO,KAAKrI,UAAL,IAAmB,CAAC,KAAKhP,KAAhC;AACH;;;;MAx1CmByO,mB;;AA01CxBG,aAAS,CAACzmC,IAAV,GAAiB,SAASmvC,iBAAT,CAA2BjvC,CAA3B,EAA8B;AAAE,aAAO,KAAKA,CAAC,IAAIumC,SAAV,EAAqB,gEAAyB,qEAAzB,CAArB,EAAqE,gEAAyB,+DAAzB,CAArE,EAAyH,gEAAyB,oDAAzB,CAAzH,EAAkK,gEAAyB,wEAAzB,CAAlK,EAAsN,gEAAyB,wDAAzB,CAAtN,EAAmQ,gEAAyB,gEAAzB,EAAgD,CAAhD,CAAnQ,EAAuT,gEAAyB,sDAAzB,EAAwC,CAAxC,CAAvT,EAAmW,gEAAyB,kEAAzB,EAAoD,CAApD,CAAnW,EAA2Z,gEAAyB,2EAAzB,EAAyC,CAAzC,CAA3Z,EAAwc,gEAAyB,yDAAzB,EAA2C,EAA3C,CAAxc,EAAwf,gEAAyB,UAAzB,CAAxf,EAA8hB,gEAAyBV,0BAAzB,CAA9hB,EAAolB,gEAAyB,+DAAzB,CAAplB,EAAooB,gEAAyBG,iBAAzB,EAA4C,CAA5C,CAApoB,CAAP;AAA6rB,KAA9uB;;AACAO,aAAS,CAACzhB,IAAV,GAAiB,gEAAyB;AAAE5kB,UAAI,EAAEqmC,SAAR;AAAmB7tB,eAAS,EAAE,CAAC,CAAC,YAAD,CAAD,CAA9B;AAAgDqM,oBAAc,EAAE,SAASmqB,wBAAT,CAAkC/sB,EAAlC,EAAsCC,GAAtC,EAA2C6C,QAA3C,EAAqD;AAAE,YAAI9C,EAAE,GAAG,CAAT,EAAY;AACrK,uEAAsB8C,QAAtB,EAAgCohB,gBAAhC,EAAkD,IAAlD;;AACA,uEAAsBphB,QAAtB,EAAgC,gEAAhC,EAA2C,IAA3C;;AACA,uEAAsBA,QAAtB,EAAgC,kEAAhC,EAA6C,IAA7C;AACH;;AAAC,YAAI9C,EAAE,GAAG,CAAT,EAAY;AACV,cAAI+C,EAAJ;;AACA,uEAAsBA,EAAE,GAAG,2DAA3B,MAAqD9C,GAAG,CAACkiB,aAAJ,GAAoBpf,EAAE,CAACE,KAA5E;AACA,uEAAsBF,EAAE,GAAG,2DAA3B,MAAqD9C,GAAG,CAACuS,OAAJ,GAAczP,EAAnE;AACA,uEAAsBA,EAAE,GAAG,2DAA3B,MAAqD9C,GAAG,CAACgqB,YAAJ,GAAmBlnB,EAAxE;AACH;AAAE,OATmC;AASjCG,eAAS,EAAE,SAAS8pB,eAAT,CAAyBhtB,EAAzB,EAA6BC,GAA7B,EAAkC;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAC5D,oEAAmBE,GAAnB,EAAwB,IAAxB;;AACA,oEAAmBqM,GAAnB,EAAwB,IAAxB;;AACA,oEAAmB,wEAAnB,EAAwC,IAAxC;AACH;;AAAC,YAAIvM,EAAE,GAAG,CAAT,EAAY;AACV,cAAI+C,EAAJ;;AACA,uEAAsBA,EAAE,GAAG,2DAA3B,MAAqD9C,GAAG,CAACkmB,OAAJ,GAAcpjB,EAAE,CAACE,KAAtE;AACA,uEAAsBF,EAAE,GAAG,2DAA3B,MAAqD9C,GAAG,CAACmoB,KAAJ,GAAYrlB,EAAE,CAACE,KAApE;AACA,uEAAsBF,EAAE,GAAG,2DAA3B,MAAqD9C,GAAG,CAACgmB,UAAJ,GAAiBljB,EAAE,CAACE,KAAzE;AACH;AAAE,OAlBmC;AAkBjC1C,eAAS,EAAE,CAAC,MAAD,EAAS,SAAT,EAAoB,CAApB,EAAuB,YAAvB,CAlBsB;AAkBgBmH,cAAQ,EAAE,EAlB1B;AAkB8BC,kBAAY,EAAE,SAASslB,sBAAT,CAAgCjtB,EAAhC,EAAoCC,GAApC,EAAyC;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACrI,mEAAkB,SAAlB,EAA6B,SAASktB,oCAAT,CAA8C5Z,MAA9C,EAAsD;AAAE,mBAAOrT,GAAG,CAACyiB,cAAJ,CAAmBpP,MAAnB,CAAP;AAAoC,WAAzH,EAA2H,OAA3H,EAAoI,SAAS6Z,kCAAT,GAA8C;AAAE,mBAAOltB,GAAG,CAACmtB,QAAJ,EAAP;AAAwB,WAA5M,EAA8M,MAA9M,EAAsN,SAASC,iCAAT,GAA6C;AAAE,mBAAOptB,GAAG,CAACqtB,OAAJ,EAAP;AAAuB,WAA5R;AACH;;AAAC,YAAIttB,EAAE,GAAG,CAAT,EAAY;AACV,oEAAmB,IAAnB,EAAyBC,GAAG,CAACpK,EAA7B,EAAiC,UAAjC,EAA6CoK,GAAG,CAACqQ,QAAjD,EAA2D,YAA3D,EAAyErQ,GAAG,CAACkrB,aAAJ,EAAzE,EAA8F,iBAA9F,EAAiHlrB,GAAG,CAACstB,kBAAJ,EAAjH,EAA2I,eAA3I,EAA4JttB,GAAG,CAACkT,QAAJ,CAAaoO,QAAb,EAA5J,EAAqL,eAArL,EAAsMthB,GAAG,CAAC0R,QAAJ,CAAa4P,QAAb,EAAtM,EAA+N,cAA/N,EAA+OthB,GAAG,CAACwa,UAAnP,EAA+P,WAA/P,EAA4Qxa,GAAG,CAAC+lB,SAAJ,GAAgB/lB,GAAG,CAAC+kB,UAApB,GAAiC,IAA7S,EAAmT,sBAAnT,EAA2U/kB,GAAG,CAAC+f,QAA/U,EAAyV,kBAAzV,EAA6W/f,GAAG,CAACsgB,gBAAJ,IAAwB,IAArY,EAA2Y,uBAA3Y,EAAoatgB,GAAG,CAACutB,wBAAJ,EAApa;;AACA,oEAAmB,qBAAnB,EAA0CvtB,GAAG,CAAC0R,QAA9C,EAAwD,oBAAxD,EAA8E1R,GAAG,CAACwa,UAAlF,EAA8F,qBAA9F,EAAqHxa,GAAG,CAACkT,QAAzH,EAAmI,kBAAnI,EAAuJlT,GAAG,CAACuV,KAA3J;AACH;AAAE,OAvBmC;AAuBjCxc,YAAM,EAAE;AAAE2Y,gBAAQ,EAAE,UAAZ;AAAwBD,qBAAa,EAAE,eAAvC;AAAwDpB,gBAAQ,EAAE,UAAlE;AAA8E3M,iBAAS,EAAE,CAAC,YAAD,EAAe,WAAf,CAAzF;AAAsH9N,UAAE,EAAE,IAA1H;AAAgIgwB,8BAAsB,EAAE,wBAAxJ;AAAkLC,iCAAyB,EAAE,2BAA7M;AAA0Oxa,mBAAW,EAAE,aAAvP;AAAsQ6H,gBAAQ,EAAE,UAAhR;AAA4R6M,gBAAQ,EAAE,UAAtS;AAAkTyN,mBAAW,EAAE,aAA/T;AAA8UvtC,aAAK,EAAE,OAArV;AAA8VzB,kBAAU,EAAE,YAA1W;AAAwXmlB,sBAAc,EAAE,CAAC,iBAAD,EAAoB,gBAApB,CAAxY;AAA+a4d,yBAAiB,EAAE,mBAAlc;AAAudoI,sBAAc,EAAE;AAAve,OAvByB;AAuBke3wB,aAAO,EAAE;AAAEssB,oBAAY,EAAE,cAAhB;AAAgCC,qBAAa,EAAE,QAA/C;AAAyDE,qBAAa,EAAE,QAAxE;AAAkFhhB,uBAAe,EAAE,iBAAnG;AAAsHihB,mBAAW,EAAE;AAAnI,OAvB3e;AAuB+nBnvB,cAAQ,EAAE,CAAC,WAAD,CAvBzoB;AAuBwpB0C,cAAQ,EAAE,CAAC,iEAA0B,CAC3tB;AAAEzX,eAAO,EAAE,gFAAX;AAAgCid,mBAAW,EAAE0lB;AAA7C,OAD2tB,EAE3tB;AAAE3iC,eAAO,EAAE,kFAAX;AAAwCid,mBAAW,EAAE0lB;AAArD,OAF2tB,CAA1B,CAAD,EAGhsB,wEAHgsB,EAG7pB,kEAH6pB,CAvBlqB;AA0BmCtgB,wBAAkB,EAAE2I,GA1BvD;AA0B4D1I,WAAK,EAAE,CA1BnE;AA0BsEC,UAAI,EAAE,CA1B5E;AA0B+E4K,YAAM,EAAE,CAAC,CAAC,oBAAD,EAAuB,EAAvB,EAA2B,aAA3B,EAA0C,MAA1C,EAAkD,CAAlD,EAAqD,oBAArD,EAA2E,CAA3E,EAA8E,OAA9E,CAAD,EAAyF,CAAC,QAAD,EAAW,kBAAX,EAA+B,SAA/B,EAA0C,EAA1C,CAAzF,EAAwI,CAAC,CAAD,EAAI,kBAAJ,EAAwB,CAAxB,EAA2B,UAA3B,CAAxI,EAAgL,CAAC,OAAD,EAAU,wBAAV,EAAoC,CAApC,EAAuC,cAAvC,CAAhL,EAAwO,CAAC,OAAD,EAAU,uBAAV,EAAmC,CAAnC,EAAsC,UAAtC,EAAkD,CAAlD,EAAqD,cAArD,CAAxO,EAA8S,CAAC,CAAD,EAAI,0BAAJ,CAA9S,EAA+U,CAAC,CAAD,EAAI,kBAAJ,CAA/U,EAAwW,CAAC,uBAAD,EAA0B,EAA1B,EAA8B,iCAA9B,EAAiE,EAAjE,EAAqE,gCAArE,EAAuG,EAAvG,EAA2G,kCAA3G,EAA+I,kCAA/I,EAAmL,CAAnL,EAAsL,mCAAtL,EAA2N,2BAA3N,EAAwP,yBAAxP,EAAmR,8BAAnR,EAAmT,6BAAnT,EAAkV,4BAAlV,EAAgX,eAAhX,EAAiY,QAAjY,EAA2Y,QAA3Y,CAAxW,EAA8vB,CAAC,CAAD,EAAI,wBAAJ,CAA9vB,EAA6xB,CAAC,CAAD,EAAI,uBAAJ,EAA6B,CAA7B,EAAgC,UAAhC,CAA7xB,EAA00B,CAAC,CAAD,EAAI,iBAAJ,CAA10B,EAAk2B,CAAC,CAAD,EAAI,cAAJ,CAAl2B,EAAu3B,CAAC,CAAD,EAAI,uBAAJ,CAAv3B,EAAq5B,CAAC,CAAD,EAAI,SAAJ,EAAe,SAAf,CAAr5B,EAAg7B,CAAC,OAAD,EAAU,EAAV,CAAh7B,CA1BvF;AA0BuhC5S,cAAQ,EAAE,SAAS0xB,kBAAT,CAA4B1tB,EAA5B,EAAgCC,GAAhC,EAAqC;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACtnC,wEAAuBwM,GAAvB;;AACA,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC,EAAmC,CAAnC;;AACA,mEAAkB,OAAlB,EAA2B,SAASmhB,uCAAT,GAAmD;AAAE,mBAAO1tB,GAAG,CAACmS,MAAJ,EAAP;AAAsB,WAAtG;;AACA,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;;AACA,mEAAkB,CAAlB,EAAqBuP,yBAArB,EAAgD,CAAhD,EAAmD,CAAnD,EAAsD,MAAtD,EAA8D,CAA9D;;AACA,mEAAkB,CAAlB,EAAqBM,yBAArB,EAAgD,CAAhD,EAAmD,CAAnD,EAAsD,MAAtD,EAA8D,CAA9D;;AACA;;AACA,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;;AACA,kEAAiB,CAAjB,EAAoB,KAApB,EAA2B,CAA3B;;AACA;;AACA;;AACA,mEAAkB,CAAlB,EAAqBG,gCAArB,EAAuD,CAAvD,EAA0D,EAA1D,EAA8D,aAA9D,EAA6E,CAA7E;;AACA,mEAAkB,eAAlB,EAAmC,SAASwL,uDAAT,GAAmE;AAAE,mBAAO3tB,GAAG,CAAC1iB,KAAJ,EAAP;AAAqB,WAA7H,EAA+H,QAA/H,EAAyI,SAASswC,gDAAT,GAA4D;AAAE,mBAAO5tB,GAAG,CAAC6tB,WAAJ,EAAP;AAA2B,WAAlO,EAAoO,QAApO,EAA8O,SAASC,gDAAT,GAA4D;AAAE,mBAAO9tB,GAAG,CAAC1iB,KAAJ,EAAP;AAAqB,WAAjU;AACH;;AAAC,YAAIyiB,EAAE,GAAG,CAAT,EAAY;AACV,cAAM4T,GAAG,GAAG,0DAAmB,CAAnB,CAAZ;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,UAAlB,EAA8B3T,GAAG,CAACuV,KAAlC;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,cAAlB,EAAkC,IAAlC;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,cAAlB,EAAkC,KAAlC;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,mCAAlB,EAAuDvV,GAAG,CAAChc,eAA3D,EAA4E,2BAA5E,EAAyG2vB,GAAzG,EAA8G,yBAA9G,EAAyI3T,GAAG,CAAC+lB,SAA7I,EAAwJ,8BAAxJ,EAAwL/lB,GAAG,CAACglB,UAA5L,EAAwM,6BAAxM,EAAuOhlB,GAAG,CAACimB,YAAJ,IAAoB,IAApB,GAA2B,IAA3B,GAAkCjmB,GAAG,CAACimB,YAAJ,CAAiBnsC,KAA1R,EAAiS,4BAAjS,EAA+TkmB,GAAG,CAACxX,QAAnU;AACH;AAAE,OAlDmC;AAkDjCyrB,gBAAU,EAAE,CAAC,qEAAD,EAA0B,wDAA1B,EAA2C,4DAA3C,EAAgE,wEAAhE,EAA4F,+DAA5F,EAAoH,uDAApH,CAlDqB;AAkDgH5kB,YAAM,EAAE,CAAC,ioEAAD,CAlDxH;AAkD6vE4U,mBAAa,EAAE,CAlD5wE;AAkD+wEuZ,UAAI,EAAE;AAAEC,iBAAS,EAAE,CACh0EoF,mBAAmB,CAACC,kBAD4yE,EAEh0ED,mBAAmB,CAACE,cAF4yE;AAAb,OAlDrxE;AAqD7B7e,qBAAe,EAAE;AArDY,KAAzB,CAAjB;AAsDA;;AACAigB,aAAS,CAACtmC,cAAV,GAA2B;AAAA,aAAM,CAC7B;AAAEC,YAAI,EAAE;AAAR,OAD6B,EAE7B;AAAEA,YAAI,EAAE;AAAR,OAF6B,EAG7B;AAAEA,YAAI,EAAE;AAAR,OAH6B,EAI7B;AAAEA,YAAI,EAAE;AAAR,OAJ6B,EAK7B;AAAEA,YAAI,EAAE;AAAR,OAL6B,EAM7B;AAAEA,YAAI,EAAE,gEAAR;AAAwBE,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD;AAApC,OAN6B,EAO7B;AAAEA,YAAI,EAAE,sDAAR;AAAgBE,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD;AAA5B,OAP6B,EAQ7B;AAAEA,YAAI,EAAE,kEAAR;AAA4BE,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD;AAAxC,OAR6B,EAS7B;AAAEA,YAAI,EAAE,yEAAR;AAAsBE,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD,EAAqB;AAAEA,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAAC,2EAAD;AAAtB,SAArB;AAAlC,OAT6B,EAU7B;AAAEH,YAAI,EAAE,yDAAR;AAAmBE,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD,EAAiB;AAAEA,cAAI,EAAE;AAAR,SAAjB;AAA/B,OAV6B,EAW7B;AAAEA,YAAI,EAAE0wB,MAAR;AAAgBxwB,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE,uDAAR;AAAmBG,cAAI,EAAE,CAAC,UAAD;AAAzB,SAAD;AAA5B,OAX6B,EAY7B;AAAEH,YAAI,EAAEC,SAAR;AAAmBC,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAACwlC,0BAAD;AAAtB,SAAD;AAA/B,OAZ6B,EAa7B;AAAE3lC,YAAI,EAAE;AAAR,OAb6B,EAc7B;AAAEA,YAAI,EAAEC,SAAR;AAAmBC,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD,EAAqB;AAAEA,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAAC2lC,iBAAD;AAAtB,SAArB;AAA/B,OAd6B,CAAN;AAAA,KAA3B;;AAgBAO,aAAS,CAACjrB,cAAV,GAA2B;AACvBgtB,aAAO,EAAE,CAAC;AAAEpoC,YAAI,EAAE,uDAAR;AAAmBG,YAAI,EAAE,CAAC,SAAD;AAAzB,OAAD,CADc;AAEvBkqC,WAAK,EAAE,CAAC;AAAErqC,YAAI,EAAE,uDAAR;AAAmBG,YAAI,EAAE,CAAC,OAAD;AAAzB,OAAD,CAFgB;AAGvB+nC,gBAAU,EAAE,CAAC;AAAEloC,YAAI,EAAE,uDAAR;AAAmBG,YAAI,EAAE,CAAC,wEAAD;AAAzB,OAAD,CAHW;AAIvBs0B,aAAO,EAAE,CAAC;AAAEz0B,YAAI,EAAE,6DAAR;AAAyBG,YAAI,EAAE,CAAC,gEAAD,EAAY;AAAEopB,qBAAW,EAAE;AAAf,SAAZ;AAA/B,OAAD,CAJc;AAKvB2iB,kBAAY,EAAE,CAAC;AAAElsC,YAAI,EAAE,6DAAR;AAAyBG,YAAI,EAAE,CAAC,kEAAD,EAAc;AAAEopB,qBAAW,EAAE;AAAf,SAAd;AAA/B,OAAD,CALS;AAMvB7oB,gBAAU,EAAE,CAAC;AAAEV,YAAI,EAAE;AAAR,OAAD,CANW;AAOvBokC,mBAAa,EAAE,CAAC;AAAEpkC,YAAI,EAAE,0DAAR;AAAsBG,YAAI,EAAE,CAACgmC,gBAAD;AAA5B,OAAD,CAPQ;AAQvB5Y,iBAAW,EAAE,CAAC;AAAEvtB,YAAI,EAAE;AAAR,OAAD,CARU;AASvBo1B,cAAQ,EAAE,CAAC;AAAEp1B,YAAI,EAAE;AAAR,OAAD,CATa;AAUvBiiC,cAAQ,EAAE,CAAC;AAAEjiC,YAAI,EAAE;AAAR,OAAD,CAVa;AAWvB8nC,4BAAsB,EAAE,CAAC;AAAE9nC,YAAI,EAAE;AAAR,OAAD,CAXD;AAYvB0vC,iBAAW,EAAE,CAAC;AAAE1vC,YAAI,EAAE;AAAR,OAAD,CAZU;AAavBmC,WAAK,EAAE,CAAC;AAAEnC,YAAI,EAAE;AAAR,OAAD,CAbgB;AAcvB4lB,eAAS,EAAE,CAAC;AAAE5lB,YAAI,EAAE,mDAAR;AAAeG,YAAI,EAAE,CAAC,YAAD;AAArB,OAAD,CAdY;AAevB0lB,oBAAc,EAAE,CAAC;AAAE7lB,YAAI,EAAE,mDAAR;AAAeG,YAAI,EAAE,CAAC,iBAAD;AAArB,OAAD,CAfO;AAgBvBsjC,uBAAiB,EAAE,CAAC;AAAEzjC,YAAI,EAAE;AAAR,OAAD,CAhBI;AAiBvB+nC,+BAAyB,EAAE,CAAC;AAAE/nC,YAAI,EAAE;AAAR,OAAD,CAjBJ;AAkBvB6rC,oBAAc,EAAE,CAAC;AAAE7rC,YAAI,EAAE;AAAR,OAAD,CAlBO;AAmBvB8X,QAAE,EAAE,CAAC;AAAE9X,YAAI,EAAE;AAAR,OAAD,CAnBmB;AAoBvBwnC,kBAAY,EAAE,CAAC;AAAExnC,YAAI,EAAE;AAAR,OAAD,CApBS;AAqBvBynC,mBAAa,EAAE,CAAC;AAAEznC,YAAI,EAAE,oDAAR;AAAgBG,YAAI,EAAE,CAAC,QAAD;AAAtB,OAAD,CArBQ;AAsBvBwnC,mBAAa,EAAE,CAAC;AAAE3nC,YAAI,EAAE,oDAAR;AAAgBG,YAAI,EAAE,CAAC,QAAD;AAAtB,OAAD,CAtBQ;AAuBvBwmB,qBAAe,EAAE,CAAC;AAAE3mB,YAAI,EAAE;AAAR,OAAD,CAvBM;AAwBvB4nC,iBAAW,EAAE,CAAC;AAAE5nC,YAAI,EAAE;AAAR,OAAD;AAxBU,KAA3B;AA0BA;;AAAc,KAAC,YAAY;AAAE,sEAAyBqmC,SAAzB,EAAoC,CAAC;AAC1DrmC,YAAI,EAAE,uDADoD;AAE1DG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,YADX;AAECsK,kBAAQ,EAAE,WAFX;AAGCwF,kBAAQ,EAAE,ixDAHX;AAIChD,gBAAM,EAAE,CAAC,UAAD,EAAa,eAAb,EAA8B,UAA9B,CAJT;AAKCkL,uBAAa,EAAE,gEAAkBE,IALlC;AAMCD,yBAAe,EAAE,sEAAwBE,MAN1C;AAOC/O,cAAI,EAAE;AACF,oBAAQ,SADN;AAEF,yBAAa,IAFX;AAGF,+BAAmB,UAHjB;AAIF,iCAAqB,iBAJnB;AAKF,sCAA0B,sBALxB;AAMF,oCAAwB,qBANtB;AAOF,oCAAwB,qBAPtB;AAQF,mCAAuB,YARrB;AASF,gCAAoB,+BATlB;AAUF,2CAA+B,UAV7B;AAWF,uCAA2B,0BAXzB;AAYF,4CAAgC,4BAZ9B;AAaF,2CAA+B,UAb7B;AAcF,0CAA8B,YAd5B;AAeF,2CAA+B,UAf7B;AAgBF,wCAA4B,OAhB1B;AAiBF,qBAAS,YAjBP;AAkBF,yBAAa,wBAlBX;AAmBF,uBAAW,YAnBT;AAoBF,sBAAU;AApBR,WAPP;AA6BCqoB,oBAAU,EAAE,CACRmF,mBAAmB,CAACC,kBADZ,EAERD,mBAAmB,CAACE,cAFZ,CA7Bb;AAiCCtpB,mBAAS,EAAE,CACP;AAAEjY,mBAAO,EAAE,gFAAX;AAAgCid,uBAAW,EAAE0lB;AAA7C,WADO,EAEP;AAAE3iC,mBAAO,EAAE,kFAAX;AAAwCid,uBAAW,EAAE0lB;AAArD,WAFO,CAjCZ;AAqCC90B,gBAAM,EAAE,CAAC,ioEAAD;AArCT,SAAD;AAFoD,OAAD,CAApC,EAyCrB,YAAY;AAAE,eAAO,CAAC;AAAEvR,cAAI,EAAE;AAAR,SAAD,EAAiC;AAAEA,cAAI,EAAE;AAAR,SAAjC,EAAqE;AAAEA,cAAI,EAAE;AAAR,SAArE,EAA8F;AAAEA,cAAI,EAAE;AAAR,SAA9F,EAAkI;AAAEA,cAAI,EAAE;AAAR,SAAlI,EAA+J;AAAEA,cAAI,EAAE,gEAAR;AAA+BE,oBAAU,EAAE,CAAC;AACxNF,gBAAI,EAAE;AADkN,WAAD;AAA3C,SAA/J,EAEX;AAAEA,cAAI,EAAE,sDAAR;AAAuBE,oBAAU,EAAE,CAAC;AACtCF,gBAAI,EAAE;AADgC,WAAD;AAAnC,SAFW,EAIX;AAAEA,cAAI,EAAE,kEAAR;AAAmCE,oBAAU,EAAE,CAAC;AAClDF,gBAAI,EAAE;AAD4C,WAAD;AAA/C,SAJW,EAMX;AAAEA,cAAI,EAAE,yEAAR;AAA6BE,oBAAU,EAAE,CAAC;AAC5CF,gBAAI,EAAE;AADsC,WAAD,EAE5C;AACCA,gBAAI,EAAE,oDADP;AAECG,gBAAI,EAAE,CAAC,2EAAD;AAFP,WAF4C;AAAzC,SANW,EAWX;AAAEH,cAAI,EAAE,yDAAR;AAA0BE,oBAAU,EAAE,CAAC;AACzCF,gBAAI,EAAE;AADmC,WAAD,EAEzC;AACCA,gBAAI,EAAE;AADP,WAFyC;AAAtC,SAXW,EAeX;AAAEA,cAAI,EAAE0wB,MAAR;AAAgBxwB,oBAAU,EAAE,CAAC;AAC/BF,gBAAI,EAAE,uDADyB;AAE/BG,gBAAI,EAAE,CAAC,UAAD;AAFyB,WAAD;AAA5B,SAfW,EAkBX;AAAEH,cAAI,EAAEC,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAClCF,gBAAI,EAAE,oDAD4B;AAElCG,gBAAI,EAAE,CAACwlC,0BAAD;AAF4B,WAAD;AAA/B,SAlBW,EAqBX;AAAE3lC,cAAI,EAAE;AAAR,SArBW,EAqBqB;AAAEA,cAAI,EAAEC,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAClEF,gBAAI,EAAE;AAD4D,WAAD,EAElE;AACCA,gBAAI,EAAE,oDADP;AAECG,gBAAI,EAAE,CAAC2lC,iBAAD;AAFP,WAFkE;AAA/B,SArBrB,CAAP;AA0BF,OAnES,EAmEP;AAAElgB,iBAAS,EAAE,CAAC;AACxB5lB,cAAI,EAAE,mDADkB;AAExBG,cAAI,EAAE,CAAC,YAAD;AAFkB,SAAD,CAAb;AAGVqnC,oBAAY,EAAE,CAAC;AACfxnC,cAAI,EAAE;AADS,SAAD,CAHJ;AAKVynC,qBAAa,EAAE,CAAC;AAChBznC,cAAI,EAAE,oDADU;AAEhBG,cAAI,EAAE,CAAC,QAAD;AAFU,SAAD,CALL;AAQVwnC,qBAAa,EAAE,CAAC;AAChB3nC,cAAI,EAAE,oDADU;AAEhBG,cAAI,EAAE,CAAC,QAAD;AAFU,SAAD,CARL;AAWVwmB,uBAAe,EAAE,CAAC;AAClB3mB,cAAI,EAAE;AADY,SAAD,CAXP;AAaV4nC,mBAAW,EAAE,CAAC;AACd5nC,cAAI,EAAE;AADQ,SAAD,CAbH;AAeV8X,UAAE,EAAE,CAAC;AACL9X,cAAI,EAAE;AADD,SAAD,CAfM;AAiBV8nC,8BAAsB,EAAE,CAAC;AACzB9nC,cAAI,EAAE;AADmB,SAAD,CAjBd;AAmBV+nC,iCAAyB,EAAE,CAAC;AAC5B/nC,cAAI,EAAE;AADsB,SAAD,CAnBjB;AAqBVutB,mBAAW,EAAE,CAAC;AACdvtB,cAAI,EAAE;AADQ,SAAD,CArBH;AAuBVo1B,gBAAQ,EAAE,CAAC;AACXp1B,cAAI,EAAE;AADK,SAAD,CAvBA;AAyBViiC,gBAAQ,EAAE,CAAC;AACXjiC,cAAI,EAAE;AADK,SAAD,CAzBA;AA2BV0vC,mBAAW,EAAE,CAAC;AACd1vC,cAAI,EAAE;AADQ,SAAD,CA3BH;AA6BVmC,aAAK,EAAE,CAAC;AACRnC,cAAI,EAAE;AADE,SAAD,CA7BG;AA+BVooC,eAAO,EAAE,CAAC;AACVpoC,cAAI,EAAE,uDADI;AAEVG,cAAI,EAAE,CAAC,SAAD;AAFI,SAAD,CA/BC;AAkCVkqC,aAAK,EAAE,CAAC;AACRrqC,cAAI,EAAE,uDADE;AAERG,cAAI,EAAE,CAAC,OAAD;AAFE,SAAD,CAlCG;AAqCV+nC,kBAAU,EAAE,CAAC;AACbloC,cAAI,EAAE,uDADO;AAEbG,cAAI,EAAE,CAAC,wEAAD;AAFO,SAAD,CArCF;AAwCVs0B,eAAO,EAAE,CAAC;AACVz0B,cAAI,EAAE,6DADI;AAEVG,cAAI,EAAE,CAAC,gEAAD,EAAY;AAAEopB,uBAAW,EAAE;AAAf,WAAZ;AAFI,SAAD,CAxCC;AA2CV2iB,oBAAY,EAAE,CAAC;AACflsC,cAAI,EAAE,6DADS;AAEfG,cAAI,EAAE,CAAC,kEAAD,EAAc;AAAEopB,uBAAW,EAAE;AAAf,WAAd;AAFS,SAAD,CA3CJ;AA8CV7oB,kBAAU,EAAE,CAAC;AACbV,cAAI,EAAE;AADO,SAAD,CA9CF;AAgDVokC,qBAAa,EAAE,CAAC;AAChBpkC,cAAI,EAAE,0DADU;AAEhBG,cAAI,EAAE,CAACgmC,gBAAD;AAFU,SAAD,CAhDL;AAmDVtgB,sBAAc,EAAE,CAAC;AACjB7lB,cAAI,EAAE,mDADW;AAEjBG,cAAI,EAAE,CAAC,iBAAD;AAFW,SAAD,CAnDN;AAsDVsjC,yBAAiB,EAAE,CAAC;AACpBzjC,cAAI,EAAE;AADc,SAAD,CAtDT;AAwDV6rC,sBAAc,EAAE,CAAC;AACjB7rC,cAAI,EAAE;AADW,SAAD;AAxDN,OAnEO;AA6Hb,KA7HF;;AA8Hd,QAAI,KAAJ,EAAW,CAkSV;AAED;;;;;;;QAKMiwC,e;;;;AAENA,mBAAe,CAACz0B,IAAhB,GAAuB,+DAAwB;AAAExb,UAAI,EAAEiwC;AAAR,KAAxB,CAAvB;AACAA,mBAAe,CAACx0B,IAAhB,GAAuB,+DAAwB;AAAEpb,aAAO,EAAE,SAAS6vC,uBAAT,CAAiCpwC,CAAjC,EAAoC;AAAE,eAAO,KAAKA,CAAC,IAAImwC,eAAV,GAAP;AAAsC,OAAvF;AAAyFt0B,eAAS,EAAE,CAACoqB,mCAAD,CAApG;AAA2InqB,aAAO,EAAE,CAAC,CACxL,4DADwL,EAExL,kEAFwL,EAGxL,sEAHwL,EAIxL,sEAJwL,CAAD,EAM3L,+EAN2L,EAMvK,sEANuK,EAMtJ,sEANsJ;AAApJ,KAAxB,CAAvB;;AAOA,KAAC,YAAY;AAAE,OAAC,OAAOC,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,iEAA0Bo0B,eAA1B,EAA2C;AAAEn0B,oBAAY,EAAE,wBAAY;AAAE,iBAAO,CAACuqB,SAAD,EAC1IF,gBAD0I,CAAP;AAC/G,SADiF;AAC/EvqB,eAAO,EAAE,mBAAY;AAAE,iBAAO,CAAC,4DAAD,EACpD,kEADoD,EAEpD,sEAFoD,EAGpD,sEAHoD,CAAP;AAG1B,SAJkF;AAIhFG,eAAO,EAAE,mBAAY;AAAE,iBAAO,CAAC,+EAAD,EACnDsqB,SADmD,EAEnDF,gBAFmD,EAGnD,sEAHmD,EAGlC,sEAHkC,CAAP;AAGR;AAPiE,OAA3C,CAAnD;AAOmC,KAPlD;AAQA;;;AAAc,KAAC,YAAY;AAAE,sEAAyB8J,eAAzB,EAA0C,CAAC;AAChEjwC,YAAI,EAAE,sDAD0D;AAEhEG,YAAI,EAAE,CAAC;AACCyb,iBAAO,EAAE,CACL,4DADK,EAEL,kEAFK,EAGL,sEAHK,EAIL,sEAJK,CADV;AAOCG,iBAAO,EAAE,CAAC,+EAAD,EAAqBsqB,SAArB,EAAgCF,gBAAhC,EAAkD,sEAAlD,EAAmE,sEAAnE,CAPV;AAQCrqB,sBAAY,EAAE,CAACuqB,SAAD,EAAYF,gBAAZ,CARf;AASCxqB,mBAAS,EAAE,CAACoqB,mCAAD;AATZ,SAAD;AAF0D,OAAD,CAA1C,EAarB,IAbqB,EAaf,IAbe;AAaP,KAbR;AAed;;;;;;AAMA;;;AAMA;;;;;;;;;;;;;;;;;;ACjuaA;;;;;;;AAYA,aAASoK,qCAAT,CAA+CluB,EAA/C,EAAmDC,GAAnD,EAAwD;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AAClE,yEAA0B,CAA1B,EAA6B,CAA7B;AACH;;AAAC,UAAIA,EAAE,GAAG,CAAT,EAAY;AACV,YAAMmuB,MAAM,GAAG,6DAAf;;AACA,iEAAkB,kBAAlB,EAAsCA,MAAM,CAACC,aAAP,CAAqBD,MAAM,CAACtqB,KAA5B,CAAtC,EAA0E,yBAA1E,EAAqGsqB,MAAM,CAACE,eAAP,EAArG;AACH;AAAE;;AACH,aAASC,4CAAT,CAAsDtuB,EAAtD,EAA0DC,GAA1D,EAA+D;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AACzE,qEAAsB,CAAtB,EAAyB,MAAzB;;AACA,6DAAc,CAAd;;AACA;AACH;;AAAC,UAAIA,EAAE,GAAG,CAAT,EAAY;AACV,YAAMgW,MAAM,GAAG,4DAAqB,CAArB,CAAf;;AACA,gEAAiB,CAAjB;;AACA,wEAAyBA,MAAM,CAACuY,uBAAP,CAA+BvY,MAAM,CAACnS,KAAtC,CAAzB;AACH;AAAE;;AACH,aAAS2qB,gDAAT,CAA0DxuB,EAA1D,EAA8DC,GAA9D,EAAmE;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AAC7E,qEAAsB,CAAtB,EAAyB,UAAzB;;AACA,6DAAc,CAAd;;AACA;AACH;;AAAC,UAAIA,EAAE,GAAG,CAAT,EAAY;AACV,YAAMkW,MAAM,GAAG,4DAAqB,CAArB,CAAf;;AACA,gEAAiB,CAAjB;;AACA,wEAAyBA,MAAM,CAACqY,uBAAP,CAA+BrY,MAAM,CAACrS,KAAtC,CAAzB;AACH;AAAE;;AACH,aAAS4qB,qCAAT,CAA+CzuB,EAA/C,EAAmDC,GAAnD,EAAwD;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AAClE,8EAA+B,CAA/B,EAAkC,EAAlC;;AACA,iEAAkB,CAAlB,EAAqBsuB,4CAArB,EAAmE,CAAnE,EAAsE,CAAtE,EAAyE,MAAzE,EAAiF,EAAjF;;AACA,iEAAkB,CAAlB,EAAqBE,gDAArB,EAAuE,CAAvE,EAA0E,CAA1E,EAA6E,UAA7E,EAAyF,EAAzF;;AACA;AACH;;AAAC,UAAIxuB,EAAE,GAAG,CAAT,EAAY;AACV,YAAM0uB,MAAM,GAAG,6DAAf;;AACA,iEAAkB,UAAlB,EAA8BA,MAAM,CAAC7qB,KAArC;;AACA,gEAAiB,CAAjB;;AACA,iEAAkB,cAAlB,EAAkC,QAAlC;AACH;AAAE;;AACH,aAAS8qB,qCAAT,CAA+C3uB,EAA/C,EAAmDC,GAAnD,EAAwD;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AAClE,yEAA0B,CAA1B,EAA6B,EAA7B;AACH;;AAAC,UAAIA,EAAE,GAAG,CAAT,EAAY;AACV,YAAM4hB,MAAM,GAAG,6DAAf;;AACA,iEAAkB,kBAAlB,EAAsCA,MAAM,CAACgN,cAAP,GAAwB5yB,QAA9D;AACH;AAAE;;AACH,aAAS6yB,4BAAT,CAAsC7uB,EAAtC,EAA0CC,GAA1C,EAA+C;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AACzD,qEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,EAAhC;;AACA,6DAAc,CAAd;;AACA;AACH;;AAAC,UAAIA,EAAE,GAAG,CAAT,EAAY;AACV,YAAMkiB,MAAM,GAAG,6DAAf;;AACA,gEAAiB,CAAjB;;AACA,wEAAyBA,MAAM,CAACze,KAAhC;AACH;AAAE;;AACH,aAASqrB,4BAAT,CAAsC9uB,EAAtC,EAA0CC,GAA1C,EAA+C;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AACzD,qEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,EAAhC;;AACA,6DAAc,CAAd;;AACA;AACH;;AAAC,UAAIA,EAAE,GAAG,CAAT,EAAY;AACV,YAAMuV,MAAM,GAAG,6DAAf;;AACA,gEAAiB,CAAjB;;AACA,wEAAyBA,MAAM,CAACwZ,KAAP,CAAaC,aAAtC;AACH;AAAE;;AACH,aAASC,4BAAT,CAAsCjvB,EAAtC,EAA0CC,GAA1C,EAA+C;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AACzD,qEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,EAAhC;;AACA,6DAAc,CAAd;;AACA;AACH;;AAAC,UAAIA,EAAE,GAAG,CAAT,EAAY;AACV,YAAM8hB,MAAM,GAAG,6DAAf;;AACA,gEAAiB,CAAjB;;AACA,wEAAyBA,MAAM,CAACpe,YAAhC;AACH;AAAE;;AACH,aAASwrB,8BAAT,CAAwClvB,EAAxC,EAA4CC,GAA5C,EAAiD;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AAC3D,mEAAoB,CAApB;AACH;AAAE;;AACH,QAAME,GAAG,GAAG,CAAC,GAAD,CAAZ;;AACA,aAASivB,kDAAT,CAA4DnvB,EAA5D,EAAgEC,GAAhE,EAAqE;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AAC/E,gEAAiB,CAAjB,EAAoB,KAApB,EAA2B,CAA3B;AACH;AAAE;;AACH,aAASovB,4CAAT,CAAsDpvB,EAAtD,EAA0DC,GAA1D,EAA+D;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AACzE,YAAMqvB,GAAG,GAAG,gEAAZ;;AACA,8EAA+B,CAA/B;;AACA,qEAAsB,CAAtB,EAAyB,iBAAzB,EAA4C,CAA5C;;AACA,iEAAkB,OAAlB,EAA2B,SAASC,6EAAT,GAAyF;AAAE,cAAMC,OAAO,GAAGtvB,GAAG,CAACuvB,SAApB;AAA+B,iBAAOD,OAAO,CAACjJ,MAAR,EAAP;AAA0B,SAA/K,EAAiL,SAAjL,EAA4L,SAASmJ,+EAAT,CAAyFnc,MAAzF,EAAiG;AAAE,sEAAqB+b,GAArB;;AAA2B,cAAMnZ,MAAM,GAAG,6DAAf;;AAAuC,iBAAOA,MAAM,CAACwZ,UAAP,CAAkBpc,MAAlB,CAAP;AAAmC,SAApY;;AACA;;AACA,iEAAkB,CAAlB,EAAqB6b,kDAArB,EAAyE,CAAzE,EAA4E,CAA5E,EAA+E,KAA/E,EAAsF,CAAtF;;AACA;AACH;;AAAC,UAAInvB,EAAE,GAAG,CAAT,EAAY;AACV,YAAMuvB,OAAO,GAAGtvB,GAAG,CAACuvB,SAApB;AACA,YAAMG,IAAI,GAAG1vB,GAAG,CAAChf,KAAjB;AACA,YAAM2uC,SAAS,GAAG3vB,GAAG,CAAC4vB,IAAtB;;AACA,YAAM1B,MAAM,GAAG,6DAAf;;AACA,gEAAiB,CAAjB;;AACA,iEAAkB,UAAlB,EAA8BA,MAAM,CAAC2B,cAAP,OAA4BH,IAA5B,GAAmC,CAAnC,GAAuC,IAAI,CAAzE,EAA4E,IAA5E,EAAkFxB,MAAM,CAAC4B,eAAP,CAAuBJ,IAAvB,CAAlF,EAAgH,OAAhH,EAAyHA,IAAzH,EAA+H,OAA/H,EAAwIxB,MAAM,CAAC6B,iBAAP,CAAyBL,IAAzB,EAA+BJ,OAAO,CAAC1rB,KAAvC,CAAxI,EAAuL,OAAvL,EAAgM0rB,OAAO,CAACvsB,SAAR,IAAqBusB,OAAO,CAAC9rB,KAA7N,EAAoO,UAApO,EAAgP0qB,MAAM,CAAC9oB,aAAP,KAAyBsqB,IAAzQ,EAA+Q,QAA/Q,EAAyRJ,OAAO,CAAChsB,SAAR,IAAqB4qB,MAAM,CAAC9oB,aAAP,KAAyBsqB,IAA9C,IAAsD,CAACxB,MAAM,CAAC9mB,MAAvV,EAA+V,UAA/V,EAA2WkoB,OAAO,CAACjsB,QAAnX,EAA6X,cAA7X,EAA6YisB,OAAO,CAAC7rB,YAArZ,EAAma,eAAna,EAAobyqB,MAAM,CAAC8B,cAA3b,EAA2c,eAA3c,EAA4d9B,MAAM,CAACzc,aAAne;;AACA,kEAAmB,eAAnB,EAAoCie,IAAI,GAAG,CAA3C,EAA8C,cAA9C,EAA8DxB,MAAM,CAAC/oB,KAAP,CAAa1kB,MAA3E,EAAmF,eAAnF,EAAoGytC,MAAM,CAAC+B,iBAAP,CAAyBP,IAAzB,CAApG,EAAoI,eAApI,EAAqJxB,MAAM,CAAC9oB,aAAP,IAAwBsqB,IAA7K,EAAmL,YAAnL,EAAiMJ,OAAO,CAAC5rB,SAAR,IAAqB,IAAtN,EAA4N,iBAA5N,EAA+O,CAAC4rB,OAAO,CAAC5rB,SAAT,IAAsB4rB,OAAO,CAAC3rB,cAA9B,GAA+C2rB,OAAO,CAAC3rB,cAAvD,GAAwE,IAAvT;;AACA,gEAAiB,CAAjB;;AACA,iEAAkB,MAAlB,EAA0B,CAACgsB,SAA3B;AACH;AAAE;;AACH,aAASO,mCAAT,CAA6CnwB,EAA7C,EAAiDC,GAAjD,EAAsD;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AAChE,YAAMowB,IAAI,GAAG,gEAAb;;AACA,qEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;;AACA,iEAAkB,sBAAlB,EAA0C,SAASC,gFAAT,CAA0F/c,MAA1F,EAAkG;AAAE,sEAAqB8c,IAArB;;AAA4B,cAAME,OAAO,GAAG,6DAAhB;;AAAwC,iBAAOA,OAAO,CAACC,cAAR,CAAuB1vC,IAAvB,CAA4ByyB,MAA5B,CAAP;AAA6C,SAA/P;;AACA,yEAA0B,CAA1B,EAA6B,CAA7B;;AACA;AACH;;AAAC,UAAItT,EAAE,GAAG,CAAT,EAAY;AACV,YAAMwwB,OAAO,GAAGvwB,GAAG,CAACuvB,SAApB;AACA,YAAMiB,KAAK,GAAGxwB,GAAG,CAAChf,KAAlB;;AACA,YAAMytC,MAAM,GAAG,6DAAf;;AACA,iEAAkB,iBAAlB,EAAqCA,MAAM,CAACgC,sBAAP,CAA8BD,KAA9B,CAArC,EAA2E,IAA3E,EAAiF/B,MAAM,CAACwB,iBAAP,CAAyBO,KAAzB,CAAjF;;AACA,kEAAmB,UAAnB,EAA+B/B,MAAM,CAACrpB,aAAP,KAAyBorB,KAAzB,GAAiC,CAAjC,GAAqC,IAApE,EAA0E,iBAA1E,EAA6F/B,MAAM,CAACqB,eAAP,CAAuBU,KAAvB,CAA7F,EAA4H,eAA5H,EAA6I/B,MAAM,CAACrpB,aAAP,KAAyBorB,KAAtK;;AACA,gEAAiB,CAAjB;;AACA,iEAAkB,kBAAlB,EAAsCD,OAAO,CAACptB,OAA9C;AACH;AAAE;;AACH,aAASutB,iCAAT,CAA2C3wB,EAA3C,EAA+CC,GAA/C,EAAoD;AAAE,UAAID,EAAE,GAAG,CAAT,EAAY;AAC9D,YAAM4wB,GAAG,GAAG,gEAAZ;;AACA,qEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;;AACA,qEAAsB,CAAtB,EAAyB,iBAAzB,EAA4C,CAA5C;;AACA,iEAAkB,OAAlB,EAA2B,SAASC,kEAAT,GAA8E;AAAE,cAAMC,OAAO,GAAG7wB,GAAG,CAACuvB,SAApB;AAA+B,iBAAOsB,OAAO,CAACxK,MAAR,EAAP;AAA0B,SAApK,EAAsK,SAAtK,EAAiL,SAASyK,oEAAT,CAA8Ezd,MAA9E,EAAsF;AAAE,sEAAqBsd,GAArB;;AAA2B,cAAM9O,MAAM,GAAG,6DAAf;;AAAuC,iBAAOA,MAAM,CAAC4N,UAAP,CAAkBpc,MAAlB,CAAP;AAAmC,SAA9W;;AACA;;AACA,qEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;;AACA,qEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;;AACA,iEAAkB,sBAAlB,EAA0C,SAAS0d,8EAAT,CAAwF1d,MAAxF,EAAgG;AAAE,sEAAqBsd,GAArB;;AAA2B,cAAM1a,MAAM,GAAG,6DAAf;;AAAuC,iBAAOA,MAAM,CAACqa,cAAP,CAAsB1vC,IAAtB,CAA2ByyB,MAA3B,CAAP;AAA4C,SAA1P;;AACA,qEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;;AACA,yEAA0B,CAA1B,EAA6B,CAA7B;;AACA;;AACA;;AACA;;AACA;AACH;;AAAC,UAAItT,EAAE,GAAG,CAAT,EAAY;AACV,YAAM8wB,OAAO,GAAG7wB,GAAG,CAACuvB,SAApB;AACA,YAAMyB,IAAI,GAAGhxB,GAAG,CAAChf,KAAjB;AACA,YAAMiwC,SAAS,GAAGjxB,GAAG,CAAC4vB,IAAtB;;AACA,YAAM1B,MAAM,GAAG,6DAAf;;AACA,gEAAiB,CAAjB;;AACA,iEAAkB,UAAlB,EAA8BA,MAAM,CAAC2B,cAAP,MAA2BmB,IAA3B,GAAkC,CAAlC,GAAsC,IAAI,CAAxE,EAA2E,IAA3E,EAAiF9C,MAAM,CAAC4B,eAAP,CAAuBkB,IAAvB,CAAjF,EAA+G,OAA/G,EAAwHA,IAAxH,EAA8H,OAA9H,EAAuI9C,MAAM,CAAC6B,iBAAP,CAAyBiB,IAAzB,EAA+BH,OAAO,CAACjtB,KAAvC,CAAvI,EAAsL,OAAtL,EAA+LitB,OAAO,CAAC9tB,SAAR,IAAqB8tB,OAAO,CAACrtB,KAA5N,EAAmO,UAAnO,EAA+O0qB,MAAM,CAAC9oB,aAAP,KAAyB4rB,IAAxQ,EAA8Q,QAA9Q,EAAwRH,OAAO,CAACvtB,SAAR,IAAqB4qB,MAAM,CAAC9oB,aAAP,KAAyB4rB,IAA9C,IAAsD,CAAC9C,MAAM,CAAC9mB,MAAtV,EAA8V,UAA9V,EAA0WypB,OAAO,CAACxtB,QAAlX,EAA4X,cAA5X,EAA4YwtB,OAAO,CAACptB,YAApZ,EAAka,eAAla,EAAmbyqB,MAAM,CAAC8B,cAA1b,EAA0c,eAA1c,EAA2d9B,MAAM,CAACzc,aAAle;;AACA,kEAAmB,eAAnB,EAAoCuf,IAAI,GAAG,CAA3C,EAA8C,cAA9C,EAA8D9C,MAAM,CAAC/oB,KAAP,CAAa1kB,MAA3E,EAAmF,eAAnF,EAAoGytC,MAAM,CAAC+B,iBAAP,CAAyBe,IAAzB,CAApG,EAAoI,eAApI,EAAqJ9C,MAAM,CAAC9oB,aAAP,KAAyB4rB,IAA9K,EAAoL,YAApL,EAAkMH,OAAO,CAACntB,SAAR,IAAqB,IAAvN,EAA6N,iBAA7N,EAAgP,CAACmtB,OAAO,CAACntB,SAAT,IAAsBmtB,OAAO,CAACltB,cAA9B,GAA+CktB,OAAO,CAACltB,cAAvD,GAAwE,IAAxT;;AACA,gEAAiB,CAAjB;;AACA,kEAAmB,2BAAnB,EAAgD,CAACstB,SAAjD;;AACA,gEAAiB,CAAjB;;AACA,iEAAkB,iBAAlB,EAAqC/C,MAAM,CAACuC,sBAAP,CAA8BO,IAA9B,CAArC,EAA0E,IAA1E,EAAgF9C,MAAM,CAAC+B,iBAAP,CAAyBe,IAAzB,CAAhF;;AACA,kEAAmB,UAAnB,EAA+B9C,MAAM,CAAC9oB,aAAP,KAAyB4rB,IAAzB,GAAgC,CAAhC,GAAoC,IAAnE,EAAyE,iBAAzE,EAA4F9C,MAAM,CAAC4B,eAAP,CAAuBkB,IAAvB,CAA5F,EAA0H,eAA1H,EAA2I9C,MAAM,CAAC9oB,aAAP,KAAyB4rB,IAApK;;AACA,gEAAiB,CAAjB;;AACA,iEAAkB,kBAAlB,EAAsCH,OAAO,CAAC1tB,OAA9C;AACH;AAAE;;QACG+tB,Y;;;;;;;;;;;;MAAqB,iE;;AAE3BA,gBAAY,CAACxzC,IAAb,GAAoB,SAASyzC,oBAAT,CAA8BvzC,CAA9B,EAAiC;AAAE,aAAOwzC,yBAAyB,CAACxzC,CAAC,IAAIszC,YAAN,CAAhC;AAAsD,KAA7G;;AACAA,gBAAY,CAAC76B,IAAb,GAAoB,gEAAyB;AAAEvY,UAAI,EAAEozC,YAAR;AAAsB56B,eAAS,EAAE,CAAC,CAAC,EAAD,EAAK,cAAL,EAAqB,EAArB,CAAD,CAAjC;AAA6D2C,cAAQ,EAAE,CAAC,wEAAD;AAAvE,KAAzB,CAApB;;AACA,QAAMm4B,yBAAyB,GAAG,oEAA6BF,YAA7B,CAAlC;AACA;;;AAAc,KAAC,YAAY;AAAE,sEAAyBA,YAAzB,EAAuC,CAAC;AAC7DpzC,YAAI,EAAE,uDADuD;AAE7DG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE;AADX,SAAD;AAFuD,OAAD,CAAvC,EAKrB,IALqB,EAKf,IALe;AAKP,KALR;AAOd;;;;;;AAKA;;;;;QAGMolC,c,GACF,0BAAc;AAAA;;AACV;;;;AAIA,WAAK35B,OAAL,GAAe,IAAI,4CAAJ,EAAf;AACA;;;;AAGA,WAAKq3B,aAAL,GAAqB,UAArB;AACH,K;;AAELsC,kBAAc,CAAC3zC,IAAf,GAAsB,SAAS4zC,sBAAT,CAAgC1zC,CAAhC,EAAmC;AAAE,aAAO,KAAKA,CAAC,IAAIyzC,cAAV,GAAP;AAAqC,KAAhG;AACA;;;AAAmBA,kBAAc,CAACnzC,KAAf,GAAuB,yEAAmB;AAAEC,aAAO,EAAE,SAASmzC,sBAAT,GAAkC;AAAE,eAAO,IAAID,cAAJ,EAAP;AAA8B,OAA7E;AAA+EjzC,WAAK,EAAEizC,cAAtF;AAAsGhzC,gBAAU,EAAE;AAAlH,KAAnB,CAAvB;AACnB;;AAAc,KAAC,YAAY;AAAE,sEAAyBgzC,cAAzB,EAAyC,CAAC;AAC/DvzC,YAAI,EAAE,wDADyD;AAE/DG,YAAI,EAAE,CAAC;AAAEI,oBAAU,EAAE;AAAd,SAAD;AAFyD,OAAD,CAAzC,EAGrB,YAAY;AAAE,eAAO,EAAP;AAAY,OAHL,EAGO,IAHP;AAGe,KAH9B;;AAId,QAAI,KAAJ,EAAW,CAYV;AACD;;;;;;;AAKA,aAASkzC,iCAAT,CAA2CC,UAA3C,EAAuD;AACnD,aAAOA,UAAU,IAAI,IAAIH,cAAJ,EAArB;AACH;AACD;;;;;;AAIA,QAAMI,yBAAyB,GAAG;AAC9BjwC,aAAO,EAAE6vC,cADqB;AAE9B5vC,UAAI,EAAE,CAAC,CAAC,IAAI,sDAAJ,EAAD,EAAiB,IAAI,sDAAJ,EAAjB,EAAiC4vC,cAAjC,CAAD,CAFwB;AAG9B3vC,gBAAU,EAAE6vC;AAHkB,KAAlC;AAMA;;;;;;QAKMG,a;;;;;AACF;;;;;;AAMA,6BAAY5C,KAAZ,EAAmB1e,aAAnB,EAAkCjQ,WAAlC,EAA+CwxB,iBAA/C,EAAkE;AAAA;;AAAA;;AAC9D,sCAAMxxB,WAAN;AACA,gBAAK2uB,KAAL,GAAaA,KAAb;AACA,gBAAK1e,aAAL,GAAqBA,aAArB;;AACAA,qBAAa,CAAC1G,OAAd,CAAsBvJ,WAAtB,EAAmC,IAAnC;;AACA,gBAAKyxB,iBAAL,GAAyB9C,KAAK,CAACp3B,OAAN,CAAcvc,SAAd;AAAyB;;;AAGlD;AAAA,iBAAMw2C,iBAAiB,CAACpsB,YAAlB,EAAN;AAAA,SAHyB,CAAzB;AAL8D;AASjE;AACD;;;;;;;sCAGc;AACV,eAAKqsB,iBAAL,CAAuBp2C,WAAvB;;AACA,eAAK40B,aAAL,CAAmB/G,cAAnB,CAAkC,KAAKlJ,WAAvC;AACH;AACD;;;;;;;gCAIQ;AACJ,eAAKiQ,aAAL,CAAmBoC,QAAnB,CAA4B,KAAKrS,WAAjC,EAA8C,SAA9C;AACH;AACD;;;;;;;uCAIe;AACX,iBAAO,KAAKqD,KAAL,YAAsB0tB,YAAtB,GAAqC,IAArC,GAA4C,KAAK1tB,KAAxD;AACH;AACD;;;;;;;yCAIiB;AACb,iBAAO,KAAKA,KAAL,YAAsB0tB,YAAtB,GAAqC,KAAK1tB,KAA1C,GAAkD,IAAzD;AACH;AACD;;;;;;;0CAIkB;AACd,iBAAO,KAAKrD,WAAL,CAAiBvP,aAAxB;AACH;AACD;;;;;;;0CAIkB;AACd,iBAAO;AACH5P,iBAAK,EAAE,KAAKA,KADT;AAEH6wC,kBAAM,EAAE,KAAKA,MAFV;AAGHxuB,oBAAQ,EAAE,KAAKA;AAHZ,WAAP;AAKH;AACD;;;;;;;gDAIwBO,K,EAAO;AAC3B,cAAIA,KAAK,IAAI,QAAb,EAAuB;AACnB,6BAAU,KAAK5iB,KAAL,GAAa,CAAvB;AACH;;AACD,cAAI4iB,KAAK,IAAI,MAAb,EAAqB;AACjB,mBAAO,QAAP;AACH;;AACD,cAAIA,KAAK,IAAI,OAAb,EAAsB;AAClB,mBAAO,SAAP;AACH;;AACD,iBAAOA,KAAP;AACH;;;;MA9EuB,kE;;AAgF5B8tB,iBAAa,CAACh0C,IAAd,GAAqB,SAASo0C,qBAAT,CAA+Bl0C,CAA/B,EAAkC;AAAE,aAAO,KAAKA,CAAC,IAAI8zC,aAAV,EAAyB,gEAAyBL,cAAzB,CAAzB,EAAmE,gEAAyB,8DAAzB,CAAnE,EAAkH,gEAAyB,wDAAzB,CAAlH,EAA+J,gEAAyB,+DAAzB,CAA/J,CAAP;AAA4N,KAArR;;AACAK,iBAAa,CAAChvB,IAAd,GAAqB,gEAAyB;AAAE5kB,UAAI,EAAE4zC,aAAR;AAAuBp7B,eAAS,EAAE,CAAC,CAAC,iBAAD,CAAD,CAAlC;AAAyDgK,eAAS,EAAE,CAAC,MAAD,EAAS,KAAT,EAAgB,CAAhB,EAAmB,iBAAnB,EAAsC,qBAAtC,CAApE;AAAkIvH,YAAM,EAAE;AAAE6K,aAAK,EAAE,OAAT;AAAkBJ,aAAK,EAAE,OAAzB;AAAkCC,oBAAY,EAAE,cAAhD;AAAgE0qB,qBAAa,EAAE,eAA/E;AAAgGntC,aAAK,EAAE,OAAvG;AAAgHmhB,gBAAQ,EAAE,UAA1H;AAAsI0vB,cAAM,EAAE,QAA9I;AAAwJxuB,gBAAQ,EAAE,UAAlK;AAA8KoO,qBAAa,EAAE;AAA7L,OAA1I;AAA0VxY,cAAQ,EAAE,CAAC,wEAAD,CAApW;AAAyY6K,WAAK,EAAE,EAAhZ;AAAoZC,UAAI,EAAE,EAA1Z;AAA8Z4K,YAAM,EAAE,CAAC,CAAC,WAAD,EAAc,EAAd,EAAkB,CAAlB,EAAqB,wBAArB,EAA+C,CAA/C,EAAkD,kBAAlD,EAAsE,mBAAtE,CAAD,EAA6F,CAAC,CAAD,EAAI,uBAAJ,EAA6B,CAA7B,EAAgC,UAAhC,CAA7F,EAA0I,CAAC,CAAD,EAAI,kBAAJ,EAAwB,yBAAxB,EAAmD,CAAnD,EAAsD,cAAtD,CAA1I,EAAiN,CAAC,CAAD,EAAI,UAAJ,EAAgB,CAAhB,EAAmB,iBAAnB,CAAjN,EAAwP,CAAC,CAAD,EAAI,gBAAJ,CAAxP,EAA+Q,CAAC,CAAD,EAAI,kBAAJ,EAAwB,CAAxB,EAA2B,MAA3B,CAA/Q,EAAmT,CAAC,OAAD,EAAU,qBAAV,EAAiC,CAAjC,EAAoC,MAApC,CAAnT,EAAgW,CAAC,OAAD,EAAU,mBAAV,EAA+B,CAA/B,EAAkC,MAAlC,CAAhW,EAA2Y,CAAC,OAAD,EAAU,0BAAV,EAAsC,CAAtC,EAAyC,MAAzC,CAA3Y,EAA6b,CAAC,CAAD,EAAI,kBAAJ,EAAwB,yBAAxB,CAA7b,EAAif,CAAC,CAAD,EAAI,UAAJ,CAAjf,EAAkgB,CAAC,CAAD,EAAI,cAAJ,CAAlgB,EAAuhB,CAAC,CAAD,EAAI,iBAAJ,CAAvhB,EAA+iB,CAAC,CAAD,EAAI,kBAAJ,CAA/iB,EAAwkB,CAAC,CAAD,EAAI,qBAAJ,CAAxkB,EAAomB,CAAC,CAAD,EAAI,mBAAJ,CAApmB,EAA8nB,CAAC,CAAD,EAAI,0BAAJ,CAA9nB,CAAta;AAAskC5S,cAAQ,EAAE,SAASg2B,sBAAT,CAAgChyB,EAAhC,EAAoCC,GAApC,EAAyC;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAC7qC,kEAAiB,CAAjB,EAAoB,KAApB,EAA2B,CAA3B;;AACA,uEAAsB,CAAtB,EAAyB,KAAzB;;AACA,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;;AACA,mEAAkB,CAAlB,EAAqBkuB,qCAArB,EAA4D,CAA5D,EAA+D,CAA/D,EAAkE,cAAlE,EAAkF,CAAlF;;AACA,mEAAkB,CAAlB,EAAqBO,qCAArB,EAA4D,CAA5D,EAA+D,CAA/D,EAAkE,cAAlE,EAAkF,CAAlF;;AACA;;AACA;;AACA,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;;AACA,mEAAkB,CAAlB,EAAqBE,qCAArB,EAA4D,CAA5D,EAA+D,CAA/D,EAAkE,cAAlE,EAAkF,CAAlF;;AACA,mEAAkB,CAAlB,EAAqBE,4BAArB,EAAmD,CAAnD,EAAsD,CAAtD,EAAyD,KAAzD,EAAgE,CAAhE;;AACA,mEAAkB,CAAlB,EAAqBC,4BAArB,EAAmD,CAAnD,EAAsD,CAAtD,EAAyD,KAAzD,EAAgE,CAAhE;;AACA,mEAAkB,CAAlB,EAAqBG,4BAArB,EAAmD,CAAnD,EAAsD,CAAtD,EAAyD,KAAzD,EAAgE,CAAhE;;AACA;AACH;;AAAC,YAAIjvB,EAAE,GAAG,CAAT,EAAY;AACV,mEAAkB,kBAAlB,EAAsCC,GAAG,CAACgyB,eAAJ,EAAtC,EAA6D,mBAA7D,EAAkFhyB,GAAG,CAACyR,aAAtF;;AACA,kEAAiB,CAAjB;;AACA,+EAA8B,sBAA9B,EAAsDzR,GAAG,CAAC4D,KAA1D,EAAiE,gBAAjE;;AACA,oEAAmB,wBAAnB,EAA6C5D,GAAG,CAACmC,QAAjD;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,UAAlB,EAA8B,CAAC,EAAEnC,GAAG,CAACmuB,aAAJ,IAAqBnuB,GAAG,CAACmuB,aAAJ,CAAkBnuB,GAAG,CAAC4D,KAAtB,CAAvB,CAA/B;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,cAAlB,EAAkC,IAAlC;;AACA,kEAAiB,CAAjB;;AACA,oEAAmB,uBAAnB,EAA4C5D,GAAG,CAAC6xB,MAAhD,EAAwD,yBAAxD,EAAmF7xB,GAAG,CAACmC,QAAvF,EAAiG,sBAAjG,EAAyHnC,GAAG,CAAC4D,KAAJ,IAAa,OAAtI;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,MAAlB,EAA0B5D,GAAG,CAAC2uB,cAAJ,EAA1B;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,MAAlB,EAA0B3uB,GAAG,CAACiyB,YAAJ,EAA1B;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,MAAlB,EAA0BjyB,GAAG,CAACqD,QAAJ,IAAgBrD,GAAG,CAAC4D,KAAJ,IAAa,OAAvD;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,MAAlB,EAA0B5D,GAAG,CAAC4D,KAAJ,IAAa,OAAvC;AACH;AAAE,OAjCuC;AAiCrCqQ,gBAAU,EAAE,CAAC,gEAAD,EAAmB,wDAAnB,EAAoC,4DAApC,EAAyD,+DAAzD,EAAiF,oDAAjF,EAA8F,gEAA9F,EAAuH,8DAAvH,CAjCyB;AAiC+G5kB,YAAM,EAAE,CAAC,g1BAAD,CAjCvH;AAiC28B4U,mBAAa,EAAE,CAjC19B;AAiC69BC,qBAAe,EAAE;AAjC9+B,KAAzB,CAArB;AAkCA;;AACAwtB,iBAAa,CAAC7zC,cAAd,GAA+B;AAAA,aAAM,CACjC;AAAEC,YAAI,EAAEuzC;AAAR,OADiC,EAEjC;AAAEvzC,YAAI,EAAE;AAAR,OAFiC,EAGjC;AAAEA,YAAI,EAAE;AAAR,OAHiC,EAIjC;AAAEA,YAAI,EAAE;AAAR,OAJiC,CAAN;AAAA,KAA/B;;AAMA4zC,iBAAa,CAACx4B,cAAd,GAA+B;AAC3B0K,WAAK,EAAE,CAAC;AAAE9lB,YAAI,EAAE;AAAR,OAAD,CADoB;AAE3B0lB,WAAK,EAAE,CAAC;AAAE1lB,YAAI,EAAE;AAAR,OAAD,CAFoB;AAG3B2lB,kBAAY,EAAE,CAAC;AAAE3lB,YAAI,EAAE;AAAR,OAAD,CAHa;AAI3BqwC,mBAAa,EAAE,CAAC;AAAErwC,YAAI,EAAE;AAAR,OAAD,CAJY;AAK3BkD,WAAK,EAAE,CAAC;AAAElD,YAAI,EAAE;AAAR,OAAD,CALoB;AAM3BqkB,cAAQ,EAAE,CAAC;AAAErkB,YAAI,EAAE;AAAR,OAAD,CANiB;AAO3B+zC,YAAM,EAAE,CAAC;AAAE/zC,YAAI,EAAE;AAAR,OAAD,CAPmB;AAQ3BulB,cAAQ,EAAE,CAAC;AAAEvlB,YAAI,EAAE;AAAR,OAAD,CARiB;AAS3B2zB,mBAAa,EAAE,CAAC;AAAE3zB,YAAI,EAAE;AAAR,OAAD;AATY,KAA/B;AAWA;;AAAc,KAAC,YAAY;AAAE,sEAAyB4zC,aAAzB,EAAwC,CAAC;AAC9D5zC,YAAI,EAAE,uDADwD;AAE9DG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,iBADX;AAEC8P,kBAAQ,EAAE,u9CAFX;AAGC1G,cAAI,EAAE;AACF,qBAAS,qCADP;AAEF,oBAAQ;AAFN,WAHP;AAOC4O,uBAAa,EAAE,gEAAkBE,IAPlC;AAQCD,yBAAe,EAAE,sEAAwBE,MAR1C;AASC/U,gBAAM,EAAE,CAAC,g1BAAD;AATT,SAAD;AAFwD,OAAD,CAAxC,EAarB,YAAY;AAAE,eAAO,CAAC;AAAEvR,cAAI,EAAEuzC;AAAR,SAAD,EAA2B;AAAEvzC,cAAI,EAAE;AAAR,SAA3B,EAA0D;AAAEA,cAAI,EAAE;AAAR,SAA1D,EAAuF;AAAEA,cAAI,EAAE;AAAR,SAAvF,CAAP;AAAoI,OAb7H,EAa+H;AAAE8lB,aAAK,EAAE,CAAC;AAC1J9lB,cAAI,EAAE;AADoJ,SAAD,CAAT;AAEhJ0lB,aAAK,EAAE,CAAC;AACR1lB,cAAI,EAAE;AADE,SAAD,CAFyI;AAIhJ2lB,oBAAY,EAAE,CAAC;AACf3lB,cAAI,EAAE;AADS,SAAD,CAJkI;AAMhJqwC,qBAAa,EAAE,CAAC;AAChBrwC,cAAI,EAAE;AADU,SAAD,CANiI;AAQhJkD,aAAK,EAAE,CAAC;AACRlD,cAAI,EAAE;AADE,SAAD,CARyI;AAUhJqkB,gBAAQ,EAAE,CAAC;AACXrkB,cAAI,EAAE;AADK,SAAD,CAVsI;AAYhJ+zC,cAAM,EAAE,CAAC;AACT/zC,cAAI,EAAE;AADG,SAAD,CAZwI;AAchJulB,gBAAQ,EAAE,CAAC;AACXvlB,cAAI,EAAE;AADK,SAAD,CAdsI;AAgBhJ2zB,qBAAa,EAAE,CAAC;AAChB3zB,cAAI,EAAE;AADU,SAAD;AAhBiI,OAb/H;AA+Bb,KA/BF;;AAgCd,QAAI,KAAJ,EAAW,CA0DV;AAED;;;;;;AAKA;;;;;;;AAKA,QAAMo0C,oBAAoB,GAAG;AACzB;;;AAGAC,8BAAwB,EAAE,qEAAQ,gBAAR,EAA0B,CAChD,mEAAM,UAAN,EAAkB,mEAAM;AAAE5iC,iBAAS,EAAE,0BAAb;AAAyCkb,kBAAU,EAAE;AAArD,OAAN,CAAlB,CADgD,EAEhD,mEAAM,SAAN,EAAiB,mEAAM;AAAElb,iBAAS,EAAE,MAAb;AAAqBkb,kBAAU,EAAE;AAAjC,OAAN,CAAjB,CAFgD,EAGhD,mEAAM,MAAN,EAAc,mEAAM;AAAElb,iBAAS,EAAE,yBAAb;AAAwCkb,kBAAU,EAAE;AAApD,OAAN,CAAd,CAHgD,EAIhD,wEAAW,QAAX,EAAqB,qEAAQ,sCAAR,CAArB,CAJgD,CAA1B,CAJD;;AAUzB;;;AAGA2nB,4BAAsB,EAAE,qEAAQ,gBAAR,EAA0B,CAC9C,mEAAM,UAAN,EAAkB,mEAAM;AAAEx4C,cAAM,EAAE,KAAV;AAAiB6wB,kBAAU,EAAE;AAA7B,OAAN,CAAlB,CAD8C,EAE9C,mEAAM,MAAN,EAAc,mEAAM;AAAE7wB,cAAM,EAAE,KAAV;AAAiB6wB,kBAAU,EAAE;AAA7B,OAAN,CAAd,CAF8C,EAG9C,mEAAM,SAAN,EAAiB,mEAAM;AAAE7wB,cAAM,EAAE,GAAV;AAAe6wB,kBAAU,EAAE;AAA3B,OAAN,CAAjB,CAH8C,EAI9C,wEAAW,eAAX,EAA4B,qEAAQ,sCAAR,CAA5B,CAJ8C,CAA1B;AAbC,KAA7B;AAqBA;;;;;;AAKA;;;;;AAIA,aAAS4nB,qBAAT,GAAiC,CAAG;;AACpC,QAAI,KAAJ,EAAW,CAgBV;AACD;;;;;QAGMC,c;AACF;;;AAGA,4BAAY57B,WAAZ,EAAyB;AAAA;;AACrB,WAAKA,WAAL,GAAmBA,WAAnB;AACH,K;;AAEL47B,kBAAc,CAAC50C,IAAf,GAAsB,SAAS60C,sBAAT,CAAgC30C,CAAhC,EAAmC;AAAE,aAAO,KAAKA,CAAC,IAAI00C,cAAV,EAA0B,gEAAyB,yDAAzB,CAA1B,CAAP;AAAiF,KAA5I;;AACAA,kBAAc,CAACj8B,IAAf,GAAsB,gEAAyB;AAAEvY,UAAI,EAAEw0C,cAAR;AAAwBh8B,eAAS,EAAE,CAAC,CAAC,aAAD,EAAgB,gBAAhB,EAAkC,EAAlC,CAAD,CAAnC;AAA4EyC,YAAM,EAAE;AAAE2X,YAAI,EAAE,CAAC,gBAAD,EAAmB,MAAnB;AAAR;AAApF,KAAzB,CAAtB;AACA;;AACA4hB,kBAAc,CAACz0C,cAAf,GAAgC;AAAA,aAAM,CAClC;AAAEC,YAAI,EAAE;AAAR,OADkC,CAAN;AAAA,KAAhC;;AAGAw0C,kBAAc,CAACp5B,cAAf,GAAgC;AAC5BwX,UAAI,EAAE,CAAC;AAAE5yB,YAAI,EAAE,mDAAR;AAAeG,YAAI,EAAE,CAAC,gBAAD;AAArB,OAAD;AADsB,KAAhC;AAGA;;AAAc,KAAC,YAAY;AAAE,sEAAyBq0C,cAAzB,EAAyC,CAAC;AAC/Dx0C,YAAI,EAAE,uDADyD;AAE/DG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE;AADX,SAAD;AAFyD,OAAD,CAAzC,EAKrB,YAAY;AAAE,eAAO,CAAC;AAAEnO,cAAI,EAAE;AAAR,SAAD,CAAP;AAAwC,OALjC,EAKmC;AAAE4yB,YAAI,EAAE,CAAC;AAC7D5yB,cAAI,EAAE,mDADuD;AAE7DG,cAAI,EAAE,CAAC,gBAAD;AAFuD,SAAD;AAAR,OALnC;AAQb,KARF;;AASd,QAAI,KAAJ,EAAW,CAQV;AAED;;;;;;;QAKMu0C,O;;;;;AACF;;;;;;AAMA,uBAAYC,OAAZ,EAAqBC,kBAArB,EAAyCrxB,cAAzC,EAAyD;AAAA;;AAAA;;AACrD,sCAAMoxB,OAAN,EAAepxB,cAAf;AACA,gBAAKqxB,kBAAL,GAA0BA,kBAA1B;AAFqD;AAGxD;AACD;;;;;;;;;;qCAMahsB,O,EAASisB,I,EAAM;AACxB;AACA,cAAMC,kBAAkB,GAAG,KAAKF,kBAAL,CAAwBG,YAAxB,CAAqCnsB,OAArC,EAA8CisB,IAA9C,CAA3B,CAFwB,CAGxB;AACA;AACA;;AACA;;;AACA,cAAMG,gBAAgB,GAAG,CAAC,EAAEpsB,OAAO,IAAIA,OAAO,CAACxE,OAAnB,IAA8B,KAAKZ,UAArC,CAA1B;AACA,iBAAOsxB,kBAAkB,IAAIE,gBAA7B;AACH;;;;MA1BiB,4D;;AA4BtBN,WAAO,CAAC90C,IAAR,GAAe,SAASq1C,eAAT,CAAyBn1C,CAAzB,EAA4B;AAAE,aAAO,KAAKA,CAAC,IAAI40C,OAAV,EAAmB,gEAAyB;AAAa;;;AAE1F;AAAA,eAAMQ,UAAN;AAAA,OAF6E,CAAzB,CAAnB,EAEZ,gEAAyB,wEAAzB,EAAmD,CAAnD,CAFY,EAE2C,gEAAyB,2EAAzB,EAAiD,CAAjD,CAF3C,CAAP;AAEyG,KAFtJ;;AAGAR,WAAO,CAAC9vB,IAAR,GAAe,gEAAyB;AAAE5kB,UAAI,EAAE00C,OAAR;AAAiBl8B,eAAS,EAAE,CAAC,CAAC,UAAD,CAAD,CAA5B;AAA4CqM,oBAAc,EAAE,SAASswB,sBAAT,CAAgClzB,EAAhC,EAAoCC,GAApC,EAAyC6C,QAAzC,EAAmD;AAAE,YAAI9C,EAAE,GAAG,CAAT,EAAY;AAC7J,uEAAsB8C,QAAtB,EAAgCquB,YAAhC,EAA8C,IAA9C;AACH;;AAAC,YAAInxB,EAAE,GAAG,CAAT,EAAY;AACV,cAAI+C,EAAJ;;AACA,uEAAsBA,EAAE,GAAG,2DAA3B,MAAqD9C,GAAG,CAAC+C,SAAJ,GAAgBD,EAAE,CAACE,KAAxE;AACH;AAAE,OALiC;AAK/BzM,cAAQ,EAAE,CAAC,SAAD,CALqB;AAKR0C,cAAQ,EAAE,CAAC,iEAA0B,CACzD;AAAEzX,eAAO,EAAE,wEAAX;AAA8Bid,mBAAW,EAAE+zB;AAA3C,OADyD,EAEzD;AAAEhxC,eAAO,EAAE,4DAAX;AAAoBid,mBAAW,EAAE+zB;AAAjC,OAFyD,CAA1B,CAAD,EAG9B,wEAH8B,CALF;AAQQ3uB,wBAAkB,EAAE5D,GAR5B;AAQiC6D,WAAK,EAAE,CARxC;AAQ2CC,UAAI,EAAE,CARjD;AAQoDhI,cAAQ,EAAE,SAASm3B,gBAAT,CAA0BnzB,EAA1B,EAA8BC,GAA9B,EAAmC;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAC/I;;AACA,mEAAkB,CAAlB,EAAqBkvB,8BAArB,EAAqD,CAArD,EAAwD,CAAxD,EAA2D,aAA3D;AACH;AAAE,OAXiC;AAW/BhrB,mBAAa,EAAE,CAXgB;AAWbC,qBAAe,EAAE;AAXJ,KAAzB,CAAf;AAYA;;AACAsuB,WAAO,CAAC30C,cAAR,GAAyB;AAAA,aAAM,CAC3B;AAAEC,YAAI,EAAEk1C,UAAR;AAAoBh1C,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAAC;AAAY;;;AAGpD;AAAA,mBAAM+0C,UAAN;AAAA,WAHwC,CAAD;AAAtB,SAAD;AAAhC,OAD2B,EAK3B;AAAEl1C,YAAI,EAAE,wEAAR;AAA2BE,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD;AAAvC,OAL2B,EAM3B;AAAEA,YAAI,EAAEC,SAAR;AAAmBC,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD,EAAqB;AAAEA,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAAC,2EAAD;AAAtB,SAArB;AAA/B,OAN2B,CAAN;AAAA,KAAzB;;AAQAu0C,WAAO,CAACt5B,cAAR,GAAyB;AACrB6J,eAAS,EAAE,CAAC;AAAEjlB,YAAI,EAAE,0DAAR;AAAsBG,YAAI,EAAE,CAACizC,YAAD;AAA5B,OAAD;AADU,KAAzB;AAGA;;AAAc,KAAC,YAAY;AAAE,sEAAyBsB,OAAzB,EAAkC,CAAC;AACxD10C,YAAI,EAAE,uDADkD;AAExDG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,UADX;AAEC8P,kBAAQ,EAAE,wDAFX;AAGCtC,mBAAS,EAAE,CACP;AAAEjY,mBAAO,EAAE,wEAAX;AAA8Bid,uBAAW,EAAE+zB;AAA3C,WADO,EAEP;AAAEhxC,mBAAO,EAAE,4DAAX;AAAoBid,uBAAW,EAAE+zB;AAAjC,WAFO,CAHZ;AAOCvuB,uBAAa,EAAE,gEAAkBE,IAPlC;AAQC5N,kBAAQ,EAAE,SARX;AASC2N,yBAAe,EAAE,sEAAwBE;AAT1C,SAAD;AAFkD,OAAD,CAAlC,EAarB,YAAY;AAAE,eAAO,CAAC;AAAEtmB,cAAI,EAAEk1C,UAAR;AAAoBh1C,oBAAU,EAAE,CAAC;AAC/CF,gBAAI,EAAE,oDADyC;AAE/CG,gBAAI,EAAE,CAAC;AAAa;;;AAEG;AAAA,qBAAM+0C,UAAN;AAAA,aAFhB,CAAD;AAFyC,WAAD;AAAhC,SAAD,EAKX;AAAEl1C,cAAI,EAAE,wEAAR;AAAkCE,oBAAU,EAAE,CAAC;AACjDF,gBAAI,EAAE;AAD2C,WAAD;AAA9C,SALW,EAOX;AAAEA,cAAI,EAAEC,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAClCF,gBAAI,EAAE;AAD4B,WAAD,EAElC;AACCA,gBAAI,EAAE,oDADP;AAECG,gBAAI,EAAE,CAAC,2EAAD;AAFP,WAFkC;AAA/B,SAPW,CAAP;AAYF,OAzBS,EAyBP;AAAE8kB,iBAAS,EAAE,CAAC;AACxBjlB,cAAI,EAAE,0DADkB;AAExBG,cAAI,EAAE,CAACizC,YAAD;AAFkB,SAAD;AAAb,OAzBO;AA4Bb,KA5BF;;AA6Bd,QAAI,KAAJ,EAAW,CAWV;;QACK8B,U;;;;;AACF,4BAAc;AAAA;;AAAA;;AACV,uCAASG,SAAT;AACA;;;;AAGA,gBAAKC,aAAL,GAAqB,IAAI,0DAAJ,EAArB;AACA;;;;AAGA,gBAAKpD,cAAL,GAAsB,EAAtB;AACA;;;;AAGA,gBAAKM,cAAL,GAAsB,IAAI,4CAAJ,EAAtB;AAbU;AAcb;AACD;;;;;;;6CAGqB;AAAA;;AACjB,eAAK+C,MAAL,CAAYlsC,OAAZ;AAAqB;;;;AAIrB;AAAA,gBAAGupB,IAAH,QAAGA,IAAH;AAAA,gBAASha,WAAT,QAASA,WAAT;AAAA,mBAA2B,OAAI,CAACs5B,cAAL,CAAoBtf,IAApB,IAA4Bha,WAAvD;AAAA,WAJA,EADiB,CAMjB;;;AACA,eAAKsQ,MAAL,CAAYtP,OAAZ,CAAoB5S,IAApB,CAAyB,kEAAU,KAAKwf,UAAf,CAAzB,EAAqDnpB,SAArD;AAAgE;;;AAGhE,sBAAM;AACF,mBAAI,CAACknB,aAAL;AACH,WALD;;AAMA,eAAKiuB,cAAL,CAAoBxrC,IAApB,EACA;AACA;AACA;AACA;AAAsB;;;;;AAKtB,oBAACqH,CAAD,EAAII,CAAJ;AAAA,mBAAUJ,CAAC,CAACmnC,SAAF,KAAgB/mC,CAAC,CAAC+mC,SAAlB,IAA+BnnC,CAAC,CAACo2B,OAAF,KAAch2B,CAAC,CAACg2B,OAAzD;AAAA,WALA,CAJA,EASoE,kEAAU,KAAKje,UAAf,CATpE,EASgGnpB,SAThG;AAS2G;;;;AAI3G,oBAAAmF,KAAK,EAAI;AACL;AAAM;AAAkBA,iBAAK,CAACiiC,OAA1B,KAAyC,SAA7C,EAAwD;AACpD,qBAAI,CAAC6Q,aAAL,CAAmBx6B,IAAnB;AACH;AACJ,WAjBD;AAkBH;;;;MAlDoB,+D;;AAoDzBo6B,cAAU,CAACt1C,IAAX,GAAkB,SAAS61C,kBAAT,CAA4B31C,CAA5B,EAA+B;AAAE,aAAO41C,uBAAuB,CAAC51C,CAAC,IAAIo1C,UAAN,CAA9B;AAAkD,KAArG;;AACAA,cAAU,CAAC38B,IAAX,GAAkB,gEAAyB;AAAEvY,UAAI,EAAEk1C,UAAR;AAAoB18B,eAAS,EAAE,CAAC,CAAC,EAAD,EAAK,YAAL,EAAmB,EAAnB,CAAD,CAA/B;AAAyDqM,oBAAc,EAAE,SAAS8wB,yBAAT,CAAmC1zB,EAAnC,EAAuCC,GAAvC,EAA4C6C,QAA5C,EAAsD;AAAE,YAAI9C,EAAE,GAAG,CAAT,EAAY;AAChL,uEAAsB8C,QAAtB,EAAgC2vB,OAAhC,EAAyC,IAAzC;;AACA,uEAAsB3vB,QAAtB,EAAgCyvB,cAAhC,EAAgD,IAAhD;AACH;;AAAC,YAAIvyB,EAAE,GAAG,CAAT,EAAY;AACV,cAAI+C,EAAJ;;AACA,uEAAsBA,EAAE,GAAG,2DAA3B,MAAqD9C,GAAG,CAACgH,MAAJ,GAAalE,EAAlE;AACA,uEAAsBA,EAAE,GAAG,2DAA3B,MAAqD9C,GAAG,CAACqzB,MAAJ,GAAavwB,EAAlE;AACH;AAAE,OAPoC;AAOlCG,eAAS,EAAE,SAASywB,gBAAT,CAA0B3zB,EAA1B,EAA8BC,GAA9B,EAAmC;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAC7D,oEAAmB2xB,aAAnB,EAAkC,IAAlC;AACH;;AAAC,YAAI3xB,EAAE,GAAG,CAAT,EAAY;AACV,cAAI+C,EAAJ;;AACA,uEAAsBA,EAAE,GAAG,2DAA3B,MAAqD9C,GAAG,CAAC6E,WAAJ,GAAkB/B,EAAvE;AACH;AAAE,OAZoC;AAYlC/J,YAAM,EAAE;AAAE0Y,qBAAa,EAAE;AAAjB,OAZ0B;AAYUzY,aAAO,EAAE;AAAEo6B,qBAAa,EAAE;AAAjB,OAZnB;AAYuDn6B,cAAQ,EAAE,CAAC,iEAA0B,CAAC;AAAEzX,eAAO,EAAE,+DAAX;AAAuBid,mBAAW,EAAEu0B;AAApC,OAAD,CAA1B,CAAD,EAAgF,wEAAhF;AAZjE,KAAzB,CAAlB;AAaAA,cAAU,CAAC95B,cAAX,GAA4B;AACxB2L,iBAAW,EAAE,CAAC;AAAE/mB,YAAI,EAAE,0DAAR;AAAsBG,YAAI,EAAE,CAACyzC,aAAD;AAA5B,OAAD,CADW;AAExB1qB,YAAM,EAAE,CAAC;AAAElpB,YAAI,EAAE,6DAAR;AAAyBG,YAAI,EAAE,CAACu0C,OAAD,EAAU;AAAEnrB,qBAAW,EAAE;AAAf,SAAV;AAA/B,OAAD,CAFgB;AAGxBgsB,YAAM,EAAE,CAAC;AAAEv1C,YAAI,EAAE,6DAAR;AAAyBG,YAAI,EAAE,CAACq0C,cAAD,EAAiB;AAAEjrB,qBAAW,EAAE;AAAf,SAAjB;AAA/B,OAAD,CAHgB;AAIxB+rB,mBAAa,EAAE,CAAC;AAAEt1C,YAAI,EAAE;AAAR,OAAD,CAJS;AAKxB2zB,mBAAa,EAAE,CAAC;AAAE3zB,YAAI,EAAE;AAAR,OAAD;AALS,KAA5B;;AAOA,QAAM01C,uBAAuB,GAAG,oEAA6BR,UAA7B,CAAhC;AACA;;;AAAc,KAAC,YAAY;AAAE,sEAAyBA,UAAzB,EAAqC,CAAC;AAC3Dl1C,YAAI,EAAE,uDADqD;AAE3DG,YAAI,EAAE,CAAC;AAAEgO,kBAAQ,EAAE,cAAZ;AAA4BwN,mBAAS,EAAE,CAAC;AAAEjY,mBAAO,EAAE,+DAAX;AAAuBid,uBAAW,EAAEu0B;AAApC,WAAD;AAAvC,SAAD;AAFqD,OAAD,CAArC,EAGrB,IAHqB,EAGf;AAAEI,qBAAa,EAAE,CAAC;AACpBt1C,cAAI,EAAE;AADc,SAAD,CAAjB;AAEF+mB,mBAAW,EAAE,CAAC;AACd/mB,cAAI,EAAE,0DADQ;AAEdG,cAAI,EAAE,CAACyzC,aAAD;AAFQ,SAAD,CAFX;AAKF1qB,cAAM,EAAE,CAAC;AACTlpB,cAAI,EAAE,6DADG;AAETG,cAAI,EAAE,CAACu0C,OAAD,EAAU;AAAEnrB,uBAAW,EAAE;AAAf,WAAV;AAFG,SAAD,CALN;AAQFgsB,cAAM,EAAE,CAAC;AACTv1C,cAAI,EAAE,6DADG;AAETG,cAAI,EAAE,CAACq0C,cAAD,EAAiB;AAAEjrB,uBAAW,EAAE;AAAf,WAAjB;AAFG,SAAD,CARN;AAWFoK,qBAAa,EAAE,CAAC;AAChB3zB,cAAI,EAAE;AADU,SAAD;AAXb,OAHe;AAgBb,KAhBF;;AAiBd,QAAI,KAAJ,EAAW,CA4CV;;QACK61C,oB;;;;;AACF,sCAAc;AAAA;;AAAA;;AACV,uCAASR,SAAT;AACA;;;;AAGA,gBAAK1iB,aAAL,GAAqB,KAArB;AALU;AAMb;;;MAP8BuiB,U;;AASnCW,wBAAoB,CAACj2C,IAArB,GAA4B,SAASk2C,4BAAT,CAAsCh2C,CAAtC,EAAyC;AAAE,aAAOi2C,iCAAiC,CAACj2C,CAAC,IAAI+1C,oBAAN,CAAxC;AAAsE,KAA7I;;AACAA,wBAAoB,CAACjxB,IAArB,GAA4B,gEAAyB;AAAE5kB,UAAI,EAAE61C,oBAAR;AAA8Br9B,eAAS,EAAE,CAAC,CAAC,wBAAD,CAAD,CAAzC;AAAuEgK,eAAS,EAAE,CAAC,kBAAD,EAAqB,YAArB,EAAmC,MAAnC,EAA2C,SAA3C,EAAsD,CAAtD,EAAyD,wBAAzD,CAAlF;AAAsKmH,cAAQ,EAAE,CAAhL;AAAmLC,kBAAY,EAAE,SAASosB,iCAAT,CAA2C/zB,EAA3C,EAA+CC,GAA/C,EAAoD;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAChT,oEAAmB,gCAAnB,EAAqDC,GAAG,CAACyQ,aAAJ,IAAqB,KAA1E,EAAiF,mCAAjF,EAAsHzQ,GAAG,CAACyQ,aAAJ,IAAqB,QAA3I;AACH;AAAE,OAF8C;AAE5C1X,YAAM,EAAE;AAAEqM,qBAAa,EAAE,eAAjB;AAAkCqL,qBAAa,EAAE;AAAjD,OAFoC;AAEgCla,cAAQ,EAAE,CAAC,sBAAD,CAF1C;AAEoE0C,cAAQ,EAAE,CAAC,iEAA0B,CAClJ;AAAEzX,eAAO,EAAEwxC,UAAX;AAAuBv0B,mBAAW,EAAEk1B;AAApC,OADkJ,EAElJ;AAAEnyC,eAAO,EAAE,+DAAX;AAAuBid,mBAAW,EAAEk1B;AAApC,OAFkJ,CAA1B,CAAD,EAGvH,wEAHuH,CAF9E;AAKL7vB,WAAK,EAAE,CALF;AAKKC,UAAI,EAAE,CALX;AAKc4K,YAAM,EAAE,CAAC,CAAC,CAAD,EAAI,yCAAJ,CAAD,EAAiD,CAAC,CAAD,EAAI,OAAJ,EAAa,SAAb,CAAjD,EAA0E,CAAC,CAAD,EAAI,kCAAJ,CAA1E,EAAmH,CAAC,OAAD,EAAU,gCAAV,EAA4C,MAA5C,EAAoD,UAApD,EAAgE,CAAhE,EAAmE,IAAnE,EAAyE,CAAzE,EAA4E,OAA5E,EAAqF,SAArF,CAAnH,EAAoN,CAAC,CAAD,EAAI,+BAAJ,EAAqC,CAArC,EAAwC,UAAxC,EAAoD,IAApD,EAA0D,OAA1D,EAAmE,OAAnE,EAA4E,OAA5E,EAAqF,UAArF,EAAiG,QAAjG,EAA2G,UAA3G,EAAuH,cAAvH,EAAuI,eAAvI,EAAwJ,eAAxJ,EAAyK,OAAzK,EAAkL,SAAlL,CAApN,EAAkZ,CAAC,OAAD,EAAU,6BAAV,EAAyC,CAAzC,EAA4C,MAA5C,CAAlZ,EAAuc,CAAC,CAAD,EAAI,6BAAJ,CAAvc,EAA2e,CAAC,MAAD,EAAS,UAAT,EAAqB,CAArB,EAAwB,gCAAxB,EAA0D,CAA1D,EAA6D,IAA7D,CAA3e,EAA+iB,CAAC,CAAD,EAAI,kBAAJ,CAA/iB,CALtB;AAK+lB5S,cAAQ,EAAE,SAASg4B,6BAAT,CAAuCh0B,EAAvC,EAA2CC,GAA3C,EAAgD;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACptB,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;;AACA,mEAAkB,CAAlB,EAAqBovB,4CAArB,EAAmE,CAAnE,EAAsE,EAAtE,EAA0E,cAA1E,EAA0F,CAA1F;;AACA;;AACA,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;;AACA,mEAAkB,CAAlB,EAAqBe,mCAArB,EAA0D,CAA1D,EAA6D,CAA7D,EAAgE,KAAhE,EAAuE,CAAvE;;AACA;AACH;;AAAC,YAAInwB,EAAE,GAAG,CAAT,EAAY;AACV,kEAAiB,CAAjB;;AACA,mEAAkB,SAAlB,EAA6BC,GAAG,CAACmF,KAAjC;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,SAAlB,EAA6BnF,GAAG,CAACmF,KAAjC;AACH;AAAE,OAjB8C;AAiB5C8O,gBAAU,EAAE,CAAC,uDAAD,EAAiByd,aAAjB,EAAgC,oDAAhC,EAA6C,gEAA7C,CAjBgC;AAiBuCriC,YAAM,EAAE,CAAC,qoGAAD,CAjB/C;AAiBwrG4U,mBAAa,EAAE,CAjBvsG;AAiB0sGuZ,UAAI,EAAE;AAAEC,iBAAS,EAAE,CAACyU,oBAAoB,CAACC,wBAAtB;AAAb,OAjBhtG;AAiBgxGjuB,qBAAe,EAAE;AAjBjyG,KAAzB,CAA5B;AAkBAyvB,wBAAoB,CAACz6B,cAArB,GAAsC;AAClCuX,mBAAa,EAAE,CAAC;AAAE3yB,YAAI,EAAE;AAAR,OAAD;AADmB,KAAtC;;AAGA,QAAM+1C,iCAAiC,GAAG,oEAA6BF,oBAA7B,CAA1C;AACA;;;AAAc,KAAC,YAAY;AAAE,sEAAyBA,oBAAzB,EAA+C,CAAC;AACrE71C,YAAI,EAAE,uDAD+D;AAErEG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,wBADX;AAECsK,kBAAQ,EAAE,sBAFX;AAGCwF,kBAAQ,EAAE,+iEAHX;AAIChD,gBAAM,EAAE,CAAC,eAAD,CAJT;AAKC1D,cAAI,EAAE;AACF,qBAAS,wBADP;AAEF,sDAA0C,wBAFxC;AAGF,yDAA6C,2BAH3C;AAIF,gCAAoB,YAJlB;AAKF,oBAAQ;AALN,WALP;AAYCqoB,oBAAU,EAAE,CAACwU,oBAAoB,CAACC,wBAAtB,CAZb;AAaC14B,mBAAS,EAAE,CACP;AAAEjY,mBAAO,EAAEwxC,UAAX;AAAuBv0B,uBAAW,EAAEk1B;AAApC,WADO,EAEP;AAAEnyC,mBAAO,EAAE,+DAAX;AAAuBid,uBAAW,EAAEk1B;AAApC,WAFO,CAbZ;AAiBC1vB,uBAAa,EAAE,gEAAkBE,IAjBlC;AAkBCD,yBAAe,EAAE,sEAAwBE,MAlB1C;AAmBC/U,gBAAM,EAAE,CAAC,qoGAAD;AAnBT,SAAD;AAF+D,OAAD,CAA/C,EAuBrB,IAvBqB,EAuBf;AAAEohB,qBAAa,EAAE,CAAC;AACpB3yB,cAAI,EAAE;AADc,SAAD;AAAjB,OAvBe;AAyBb,KAzBF;;AA0Bd,QAAI,KAAJ,EAAW,CAcV;;QACKk2C,kB;;;;;AACF;;;;;;AAMA,kCAAYnuC,GAAZ,EAAiB8rC,iBAAjB,EACA;AACA/8B,gBAFA,EAEYvc,SAFZ,EAEuB;AAAA;;AAAA;;AACnB,sCAAMwN,GAAN,EAAW8rC,iBAAX,EAA8B/8B,UAA9B,EAA0Cvc,SAA1C;AACA,gBAAKqsB,YAAL,GAAoB,UAApB;AAFmB;AAGtB;;;MAZ4BsuB,U;;AAcjCgB,sBAAkB,CAACt2C,IAAnB,GAA0B,SAASu2C,0BAAT,CAAoCr2C,CAApC,EAAuC;AAAE,aAAO,KAAKA,CAAC,IAAIo2C,kBAAV,EAA8B,gEAAyB,gEAAzB,EAAgD,CAAhD,CAA9B,EAAkF,gEAAyB,+DAAzB,CAAlF,EAAsI,gEAAyB,wDAAzB,CAAtI,EAAmL,gEAAyB,wDAAzB,CAAnL,CAAP;AAAgO,KAAnS;;AACAA,sBAAkB,CAACtxB,IAAnB,GAA0B,gEAAyB;AAAE5kB,UAAI,EAAEk2C,kBAAR;AAA4B19B,eAAS,EAAE,CAAC,CAAC,sBAAD,CAAD,CAAvC;AAAmEgK,eAAS,EAAE,CAAC,kBAAD,EAAqB,UAArB,EAAiC,MAAjC,EAAyC,SAAzC,EAAoD,CAApD,EAAuD,sBAAvD,CAA9E;AAA8JvH,YAAM,EAAE;AAAEqM,qBAAa,EAAE;AAAjB,OAAtK;AAA0M7O,cAAQ,EAAE,CAAC,oBAAD,CAApN;AAA4O0C,cAAQ,EAAE,CAAC,iEAA0B,CACxT;AAAEzX,eAAO,EAAEwxC,UAAX;AAAuBv0B,mBAAW,EAAEu1B;AAApC,OADwT,EAExT;AAAExyC,eAAO,EAAE,+DAAX;AAAuBid,mBAAW,EAAEu1B;AAApC,OAFwT,CAA1B,CAAD,EAG7R,wEAH6R,CAAtP;AAGHlwB,WAAK,EAAE,CAHJ;AAGOC,UAAI,EAAE,CAHb;AAGgB4K,YAAM,EAAE,CAAC,CAAC,OAAD,EAAU,UAAV,EAAsB,CAAtB,EAAyB,OAAzB,EAAkC,SAAlC,CAAD,EAA+C,CAAC,CAAD,EAAI,UAAJ,CAA/C,EAAgE,CAAC,CAAD,EAAI,6BAAJ,EAAmC,CAAnC,EAAsC,UAAtC,EAAkD,IAAlD,EAAwD,OAAxD,EAAiE,OAAjE,EAA0E,OAA1E,EAAmF,UAAnF,EAA+F,QAA/F,EAAyG,UAAzG,EAAqH,cAArH,EAAqI,eAArI,EAAsJ,eAAtJ,EAAuK,OAAvK,EAAgL,SAAhL,CAAhE,EAA4P,CAAC,CAAD,EAAI,gCAAJ,CAA5P,EAAmS,CAAC,MAAD,EAAS,UAAT,EAAqB,CAArB,EAAwB,8BAAxB,EAAwD,CAAxD,EAA2D,IAA3D,CAAnS,EAAqW,CAAC,CAAD,EAAI,sBAAJ,CAArW,EAAkY,CAAC,CAAD,EAAI,kBAAJ,CAAlY,CAHxB;AAGob5S,cAAQ,EAAE,SAASm4B,2BAAT,CAAqCn0B,EAArC,EAAyCC,GAAzC,EAA8C;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACriB,mEAAkB,CAAlB,EAAqB2wB,iCAArB,EAAwD,CAAxD,EAA2D,EAA3D,EAA+D,KAA/D,EAAsE,CAAtE;AACH;;AAAC,YAAI3wB,EAAE,GAAG,CAAT,EAAY;AACV,mEAAkB,SAAlB,EAA6BC,GAAG,CAACmF,KAAjC;AACH;AAAE,OAP4C;AAO1C8O,gBAAU,EAAE,CAAC,uDAAD,EAAiByd,aAAjB,EAAgC,gEAAhC,CAP8B;AAO4BriC,YAAM,EAAE,CAAC,qoGAAD,CAPpC;AAO6qG4U,mBAAa,EAAE,CAP5rG;AAO+rGuZ,UAAI,EAAE;AAAEC,iBAAS,EAAE,CAACyU,oBAAoB,CAACE,sBAAtB;AAAb,OAPrsG;AAOmwGluB,qBAAe,EAAE;AAPpxG,KAAzB,CAA1B;AAQA;;AACA8vB,sBAAkB,CAACn2C,cAAnB,GAAoC;AAAA,aAAM,CACtC;AAAEC,YAAI,EAAE,gEAAR;AAAwBE,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE;AAAR,SAAD;AAApC,OADsC,EAEtC;AAAEA,YAAI,EAAE;AAAR,OAFsC,EAGtC;AAAEA,YAAI,EAAE;AAAR,OAHsC,EAItC;AAAEA,YAAI,EAAEC,SAAR;AAAmBC,kBAAU,EAAE,CAAC;AAAEF,cAAI,EAAE,oDAAR;AAAgBG,cAAI,EAAE,CAAC,wDAAD;AAAtB,SAAD;AAA/B,OAJsC,CAAN;AAAA,KAApC;AAMA;;;AAAc,KAAC,YAAY;AAAE,sEAAyB+1C,kBAAzB,EAA6C,CAAC;AACnEl2C,YAAI,EAAE,uDAD6D;AAEnEG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,sBADX;AAECsK,kBAAQ,EAAE,oBAFX;AAGCwF,kBAAQ,EAAE,87DAHX;AAIChD,gBAAM,EAAE,CAAC,eAAD,CAJT;AAKC1D,cAAI,EAAE;AACF,qBAAS,sBADP;AAEF,gCAAoB,UAFlB;AAGF,oBAAQ;AAHN,WALP;AAUCqoB,oBAAU,EAAE,CAACwU,oBAAoB,CAACE,sBAAtB,CAVb;AAWC34B,mBAAS,EAAE,CACP;AAAEjY,mBAAO,EAAEwxC,UAAX;AAAuBv0B,uBAAW,EAAEu1B;AAApC,WADO,EAEP;AAAExyC,mBAAO,EAAE,+DAAX;AAAuBid,uBAAW,EAAEu1B;AAApC,WAFO,CAXZ;AAeC/vB,uBAAa,EAAE,gEAAkBE,IAflC;AAgBCD,yBAAe,EAAE,sEAAwBE,MAhB1C;AAiBC/U,gBAAM,EAAE,CAAC,qoGAAD;AAjBT,SAAD;AAF6D,OAAD,CAA7C,EAqBrB,YAAY;AAAE,eAAO,CAAC;AAAEvR,cAAI,EAAE,gEAAR;AAA+BE,oBAAU,EAAE,CAAC;AAC1DF,gBAAI,EAAE;AADoD,WAAD;AAA3C,SAAD,EAEX;AAAEA,cAAI,EAAE;AAAR,SAFW,EAEyB;AAAEA,cAAI,EAAE;AAAR,SAFzB,EAEsD;AAAEA,cAAI,EAAEC,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AACnGF,gBAAI,EAAE,oDAD6F;AAEnGG,gBAAI,EAAE,CAAC,wDAAD;AAF6F,WAAD;AAA/B,SAFtD,CAAP;AAKF,OA1BS,EA0BP,IA1BO;AA0BC,KA1BhB;;AA2Bd,QAAI,KAAJ,EAAW,CASV;AAED;;;;;;AAKA;;;;;QAGMk2C,c;;;;;;;;;;;;MAAuB,mE;;AAE7BA,kBAAc,CAACz2C,IAAf,GAAsB,SAAS02C,sBAAT,CAAgCx2C,CAAhC,EAAmC;AAAE,aAAOy2C,2BAA2B,CAACz2C,CAAC,IAAIu2C,cAAN,CAAlC;AAA0D,KAArH;;AACAA,kBAAc,CAAC99B,IAAf,GAAsB,gEAAyB;AAAEvY,UAAI,EAAEq2C,cAAR;AAAwB79B,eAAS,EAAE,CAAC,CAAC,QAAD,EAAW,gBAAX,EAA6B,EAA7B,CAAD,CAAnC;AAAuEmR,cAAQ,EAAE,CAAjF;AAAoFC,kBAAY,EAAE,SAAS4sB,2BAAT,CAAqCv0B,EAArC,EAAyCC,GAAzC,EAA8C;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACrM,uEAAsB,MAAtB,EAA8BC,GAAG,CAACliB,IAAlC;AACH;AAAE,OAFwC;AAEtCib,YAAM,EAAE;AAAEjb,YAAI,EAAE;AAAR,OAF8B;AAEZmb,cAAQ,EAAE,CAAC,wEAAD;AAFE,KAAzB,CAAtB;;AAGA,QAAMo7B,2BAA2B,GAAG,oEAA6BF,cAA7B,CAApC;AACA;;;AAAc,KAAC,YAAY;AAAE,sEAAyBA,cAAzB,EAAyC,CAAC;AAC/Dr2C,YAAI,EAAE,uDADyD;AAE/DG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,wBADX;AAECoJ,cAAI,EAAE;AACF,sBAAU;AADR,WAFP;AAKC0D,gBAAM,EAAE,CAAC,MAAD;AALT,SAAD;AAFyD,OAAD,CAAzC,EASrB,IATqB,EASf,IATe;AASP,KATR;AAUd;;;;;QAGMw7B,kB;;;;;;;;;;;;MAA2B,uE;;AAEjCA,sBAAkB,CAAC72C,IAAnB,GAA0B,SAAS82C,0BAAT,CAAoC52C,CAApC,EAAuC;AAAE,aAAO62C,+BAA+B,CAAC72C,CAAC,IAAI22C,kBAAN,CAAtC;AAAkE,KAArI;;AACAA,sBAAkB,CAACl+B,IAAnB,GAA0B,gEAAyB;AAAEvY,UAAI,EAAEy2C,kBAAR;AAA4Bj+B,eAAS,EAAE,CAAC,CAAC,QAAD,EAAW,oBAAX,EAAiC,EAAjC,CAAD,CAAvC;AAA+EmR,cAAQ,EAAE,CAAzF;AAA4FC,kBAAY,EAAE,SAASgtB,+BAAT,CAAyC30B,EAAzC,EAA6CC,GAA7C,EAAkD;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACrN,uEAAsB,MAAtB,EAA8BC,GAAG,CAACliB,IAAlC;AACH;AAAE,OAF4C;AAE1Cib,YAAM,EAAE;AAAEjb,YAAI,EAAE;AAAR,OAFkC;AAEhBmb,cAAQ,EAAE,CAAC,wEAAD;AAFM,KAAzB,CAA1B;;AAGA,QAAMw7B,+BAA+B,GAAG,oEAA6BF,kBAA7B,CAAxC;AACA;;;AAAc,KAAC,YAAY;AAAE,sEAAyBA,kBAAzB,EAA6C,CAAC;AACnEz2C,YAAI,EAAE,uDAD6D;AAEnEG,YAAI,EAAE,CAAC;AACCgO,kBAAQ,EAAE,4BADX;AAECoJ,cAAI,EAAE;AACF,sBAAU;AADR,WAFP;AAKC0D,gBAAM,EAAE,CAAC,MAAD;AALT,SAAD;AAF6D,OAAD,CAA7C,EASrB,IATqB,EASf,IATe;AASP,KATR;AAWd;;;;;;;QAKM47B,gB;;;;AAENA,oBAAgB,CAACr7B,IAAjB,GAAwB,+DAAwB;AAAExb,UAAI,EAAE62C;AAAR,KAAxB,CAAxB;AACAA,oBAAgB,CAACp7B,IAAjB,GAAwB,+DAAwB;AAAEpb,aAAO,EAAE,SAASy2C,wBAAT,CAAkCh3C,CAAlC,EAAqC;AAAE,eAAO,KAAKA,CAAC,IAAI+2C,gBAAV,GAAP;AAAuC,OAAzF;AAA2Fl7B,eAAS,EAAE,CAACg4B,yBAAD,EAA4B,wEAA5B,CAAtG;AAAsJ/3B,aAAO,EAAE,CAAC,CACpM,sEADoM,EAEpM,4DAFoM,EAGpM,gEAHoM,EAIpM,wEAJoM,EAKpM,qEALoM,EAMpM,oEANoM,EAOpM,sEAPoM,CAAD,EASvM,sEATuM;AAA/J,KAAxB,CAAxB;;AAUA,KAAC,YAAY;AAAE,OAAC,OAAOC,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,iEAA0Bg7B,gBAA1B,EAA4C;AAAE/6B,oBAAY,EAAE,wBAAY;AAAE,iBAAO,CAAC+5B,oBAAD,EAC3IK,kBAD2I,EAE3IxB,OAF2I,EAG3ItB,YAH2I,EAI3I8B,UAJ2I,EAK3ImB,cAL2I,EAM3II,kBAN2I,EAO3I7C,aAP2I,EAQ3IY,cAR2I,CAAP;AAQlH,SARoF;AAQlF54B,eAAO,EAAE,mBAAY;AAAE,iBAAO,CAAC,sEAAD,EAClD,4DADkD,EAElD,gEAFkD,EAGlD,wEAHkD,EAIlD,qEAJkD,EAKlD,oEALkD,EAMlD,sEANkD,CAAP;AAMxB,SAdmF;AAcjFG,eAAO,EAAE,mBAAY;AAAE,iBAAO,CAAC,sEAAD,EACnD85B,oBADmD,EAEnDK,kBAFmD,EAGnDxB,OAHmD,EAInDtB,YAJmD,EAKnD8B,UALmD,EAMnDmB,cANmD,EAOnDI,kBAPmD,EAQnD7C,aARmD,EASnDY,cATmD,CAAP;AAS1B;AAvBoF,OAA5C,CAAnD;AAuBiB,KAvBhC;AAwBA;;;AAAc,KAAC,YAAY;AAAE,sEAAyBqC,gBAAzB,EAA2C,CAAC;AACjE72C,YAAI,EAAE,sDAD2D;AAEjEG,YAAI,EAAE,CAAC;AACCyb,iBAAO,EAAE,CACL,sEADK,EAEL,4DAFK,EAGL,gEAHK,EAIL,wEAJK,EAKL,qEALK,EAML,oEANK,EAOL,sEAPK,CADV;AAUCG,iBAAO,EAAE,CACL,sEADK,EAEL85B,oBAFK,EAGLK,kBAHK,EAILxB,OAJK,EAKLtB,YALK,EAML8B,UANK,EAOLmB,cAPK,EAQLI,kBARK,EASL7C,aATK,EAULY,cAVK,CAVV;AAsBC14B,sBAAY,EAAE,CACV+5B,oBADU,EAEVK,kBAFU,EAGVxB,OAHU,EAIVtB,YAJU,EAKV8B,UALU,EAMVmB,cANU,EAOVI,kBAPU,EAQV7C,aARU,EASVY,cATU,CAtBf;AAiCC74B,mBAAS,EAAE,CAACg4B,yBAAD,EAA4B,wEAA5B;AAjCZ,SAAD;AAF2D,OAAD,CAA3C,EAqCrB,IArCqB,EAqCf,IArCe;AAqCP,KArCR;AAuCd;;;;;;AAMA;;;AAMA;;;;;;;;;;;;;;;;;;ACvjCA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAKA,QAAMoD,MAAM,GAAW,CACrB;AACEC,UAAI,EAAE,EADR;AAEEn5B,eAAS,EAAE;AAFb,KADqB,CAAvB;;QAWao5B,sB;;;;;YAAAA;;;;yBAAAA,sB;AAAsB,O;AAAA,gBAHxB,CAAC,6DAAaC,QAAb,CAAsBH,MAAtB,CAAD,CAGwB,EAFvB,4DAEuB;;;;0HAAtBE,sB,EAAsB;AAAA;AAAA,kBAFvB,4DAEuB;AAAA,O;AAFX,K;;;;;sEAEXA,sB,EAAsB;cAJlC,sDAIkC;eAJzB;AACRr7B,iBAAO,EAAE,CAAC,6DAAas7B,QAAb,CAAsBH,MAAtB,CAAD,CADD;AAERh7B,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAIyB,Q;;;;;;;;;;;;;;;;;;AChBnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACSsC;;;;;;AA+KA;;;;QDhLzBo7B,kB;AAIX,kCAAoBC,YAApB,EAA+C;AAAA;;AAA3B,aAAAA,YAAA,GAAAA,YAAA;AAHpB,aAAAC,QAAA,GAAW,KAAX;AAGkD;;;;mCAE1C;AACN,eAAKC,cAAL,GAAsB,KAAKF,YAAL,CAAkB7J,KAAlB,CAAwB;AAC5CgK,qBAAS,EAAE,CAAC,EAAD,EAAK,0DAAWniB,QAAhB;AADiC,WAAxB,CAAtB;AAGA,eAAKoiB,eAAL,GAAuB,KAAKJ,YAAL,CAAkB7J,KAAlB,CAAwB;AAC7CkK,sBAAU,EAAE,CAAC,EAAD,EAAK,0DAAWriB,QAAhB;AADiC,WAAxB,CAAvB;AAGD;;;;;;;uBAbU+hB,kB,EAAkB,2H;AAAA,K;;;YAAlBA,kB;AAAkB,mC;AAAA,gB;AAAA,a;AAAA,gyB;AAAA;AAAA;ACR/B;;AACE;;AACE;;AACE;;AAAgB;;AAAU;;AAC5B;;AACA;;AACE;;AACE;;AACE;;AACE;;AAQA;;AACE;;AACE;;AACE;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAgB;;AAC3B;;AACE;;AAAY;;AAAI;;AAChB;;AAA4B;;AAAQ;;AACpC;;AAA4B;;AAAQ;;AACpC;;AAA4B;;AAAQ;;AACtC;;AACF;;AACF;;AACF;;AACA;;AACE;;AAAiE;;AAAe;;AAChF;;AACE;;AAAc;;AAAS;;AACzB;;AACF;;AACA;;AACE;;AAAiE;;AAAyB;;AAC1F;;AACE;;AACE;;AAAW;;AAAgB;;AAC3B;;AACE;;AAAY;;AAAI;;AAChB;;AAA4B;;AAAQ;;AACpC;;AAA4B;;AAAQ;;AACpC;;AAA4B;;AAAQ;;AACtC;;AACF;;AACF;;AACF;;AACA;;AACE;;AAAiE;;AACjE;;AACA;;AACE;;AACE;;AAAW;;AAAgB;;AAC3B;;AACE;;AAAY;;AAAI;;AAChB;;AAA4B;;AAAQ;;AACpC;;AAA4B;;AAAQ;;AACpC;;AAA4B;;AAAQ;;AACtC;;AACF;;AACF;;AACF;;AACA;;AACE;;AAAiE;;AAGnB;;AAC9C;;AACE;;AACE;;AAAW;;AAAgB;;AAC3B;;AACE;;AAAY;;AAAI;;AAChB;;AAA4B;;AAAQ;;AACpC;;AAA4B;;AAAQ;;AACpC;;AAA4B;;AAAQ;;AACtC;;AACF;;AACF;;AACF;;AACA;;AACE;;AAAiE;;AAAW;;AAC5E;;AACE;;AACE;;AAAW;;AAAgB;;AAC3B;;AACE;;AAAY;;AAAI;;AAChB;;AAA4B;;AAAQ;;AACpC;;AAA4B;;AAAQ;;AACpC;;AAA4B;;AAAQ;;AACtC;;AACF;;AACF;;AACF;;AACA;;AACE;;AAAiE;;AAA0B;;AAC3F;;AACE;;AACE;;AAAW;;AAAgB;;AAC3B;;AACE;;AAAY;;AAAI;;AAChB;;AAA4B;;AAAQ;;AACpC;;AAA4B;;AAAQ;;AACpC;;AAA4B;;AAAQ;;AACtC;;AACF;;AACF;;AACF;;AACA;;AACE;;AAAiE;;AAAuB;;AACxF;;AACE;;AACE;;AAAW;;AAAgB;;AAC3B;;AACE;;AAAY;;AAAI;;AAChB;;AAA4B;;AAAQ;;AACpC;;AAA4B;;AAAQ;;AACpC;;AAA4B;;AAAQ;;AACtC;;AACF;;AACF;;AACF;;AACA;;AACE;;AAAiE;;AAAiB;;AAClF;;AACE;;AACE;;AAAW;;AAAgB;;AAC3B;;AACE;;AAAY;;AAAI;;AAChB;;AAA4B;;AAAQ;;AACpC;;AAA4B;;AAAQ;;AACpC;;AAA4B;;AAAQ;;AACtC;;AACF;;AACF;;AACF;;AACA;;AACE;;AAAiE;;AACjE;;AACA;;AACE;;AACE;;AAAW;;AAAgB;;AAC3B;;AACE;;AAAY;;AAAI;;AAChB;;AAA4B;;AAAQ;;AACpC;;AAA4B;;AAAQ;;AACpC;;AAA4B;;AAAQ;;AACtC;;AACF;;AACF;;AACF;;AACA;;AACE;;AAAiE;;AAAuB;;AACxF;;AACE;;AACE;;AAAW;;AAAgB;;AAC3B;;AACE;;AAAY;;AAAI;;AAChB;;AAA4B;;AAAQ;;AACpC;;AAA4B;;AAAQ;;AACpC;;AAA4B;;AAAQ;;AACtC;;AACF;;AACF;;AACF;;AACA;;AACE;;AAGA;;AACE;;AAAyD;;AAAI;;AAC/D;;AACF;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACA;;AACE;;AACE;;AACE;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAgB;;AAC3B;;AACE;;AAAY;;AAAI;;AAChB;;AAA4B;;AAAQ;;AACpC;;AAA4B;;AAAQ;;AACpC;;AAA4B;;AAAQ;;AACtC;;AACF;;AACF;;AACF;;AACA;;AACE;;AAAiE;;AAA0B;;AAC3F;;AACE;;AACE;;AAAW;;AAAgB;;AAC3B;;AACE;;AAAY;;AAAI;;AAChB;;AAA4B;;AAAQ;;AACpC;;AAA4B;;AAAQ;;AACpC;;AAA4B;;AAAQ;;AACtC;;AACF;;AACF;;AACF;;AACA;;AACE;;AAAiE;;AAAO;;AACxE;;AACE;;AACE;;AAAW;;AAAgB;;AAC3B;;AACE;;AAAY;;AAAI;;AAChB;;AAA4B;;AAAQ;;AACpC;;AAA4B;;AAAQ;;AACpC;;AAA4B;;AAAQ;;AACtC;;AACF;;AACF;;AACF;;AACA;;AACE;;AAAiE;;AAA2B;;AAC5F;;AACE;;AACE;;AAAW;;AAAgB;;AAC3B;;AACE;;AAAY;;AAAI;;AAChB;;AAA4B;;AAAQ;;AACpC;;AAA4B;;AAAQ;;AACpC;;AAA4B;;AAAQ;;AACtC;;AACF;;AACF;;AACF;;AACA;;AACE;;AAAiE;;AAAkB;;AACnF;;AACE;;AACE;;AAAW;;AAAgB;;AAC3B;;AACE;;AAAY;;AAAI;;AAChB;;AAA4B;;AAAQ;;AACpC;;AAA4B;;AAAQ;;AACpC;;AAA4B;;AAAQ;;AACtC;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAI;;AAAmB;;AACzB;;AACF;;AACA;;AACE;;AAAmE;;AACrC;;AAC9B;;AACE;;AACE;;AAAW;;AAAgB;;AAC3B;;AACE;;AAAY;;AAAI;;AAChB;;AAA4B;;AAAQ;;AACpC;;AAA4B;;AAAQ;;AACpC;;AAA4B;;AAAQ;;AACtC;;AACF;;AACF;;AACF;;AACA;;AACE;;AAAmE;;AACrC;;AAC9B;;AACE;;AACE;;AAAW;;AAAgB;;AAC3B;;AACE;;AAAY;;AAAI;;AAChB;;AAA4B;;AAAQ;;AACpC;;AAA4B;;AAAQ;;AACpC;;AAA4B;;AAAQ;;AACtC;;AACF;;AACF;;AACF;;AACA;;AACE;;AAAmE;;AAAqB;;AACxF;;AACE;;AACE;;AAAW;;AAAgB;;AAC3B;;AACE;;AAAY;;AAAI;;AAChB;;AAA4B;;AAAQ;;AACpC;;AAA4B;;AAAQ;;AACpC;;AAA4B;;AAAQ;;AACtC;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAI;;AAAgB;;AACtB;;AACF;;AACA;;AACE;;AAAmE;;AAAmB;;AACtF;;AACE;;AACE;;AAAW;;AAAgB;;AAC3B;;AACE;;AAAY;;AAAI;;AAChB;;AAA4B;;AAAQ;;AACpC;;AAA4B;;AAAQ;;AACpC;;AAA4B;;AAAQ;;AACtC;;AACF;;AACF;;AACF;;AACA;;AACE;;AAAmE;;AAAiB;;AACpF;;AACE;;AACE;;AAAW;;AAAgB;;AAC3B;;AACE;;AAAY;;AAAI;;AAChB;;AAA4B;;AAAQ;;AACpC;;AAA4B;;AAAQ;;AACpC;;AAA4B;;AAAQ;;AACtC;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAI;;AAAsD;;AAC5D;;AACF;;AACA;;AACE;;AAAmE;;AAAmB;;AACtF;;AACE;;AACE;;AAAW;;AAAgB;;AAC3B;;AACE;;AAAY;;AAAI;;AAChB;;AAA4B;;AAAQ;;AACpC;;AAA4B;;AAAQ;;AACpC;;AAA4B;;AAAQ;;AACtC;;AACF;;AACF;;AACF;;AACA;;AACE;;AAAmE;;AAAiB;;AACpF;;AACE;;AACE;;AAAW;;AAAgB;;AAC3B;;AACE;;AAAY;;AAAI;;AAChB;;AAA4B;;AAAQ;;AACpC;;AAA4B;;AAAQ;;AACpC;;AAA4B;;AAAQ;;AACtC;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAI;;AAAqB;;AAC3B;;AACF;;AACA;;AACE;;AAAmE;;AAAmB;;AACtF;;AACE;;AACE;;AAAW;;AAAgB;;AAC3B;;AACE;;AAAY;;AAAI;;AAChB;;AAA4B;;AAAQ;;AACpC;;AAA4B;;AAAQ;;AACpC;;AAA4B;;AAAQ;;AACtC;;AACF;;AACF;;AACF;;AACA;;AACE;;AAAmE;;AAAiB;;AACpF;;AACE;;AACE;;AAAW;;AAAgB;;AAC3B;;AACE;;AAAY;;AAAI;;AAChB;;AAA4B;;AAAQ;;AACpC;;AAA4B;;AAAQ;;AACpC;;AAA4B;;AAAQ;;AACtC;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAI;;AAAc;;AACpB;;AACF;;AACA;;AACE;;AAAmE;;AAAmB;;AACtF;;AACE;;AACE;;AAAW;;AAAgB;;AAC3B;;AACE;;AAAY;;AAAI;;AAChB;;AAA4B;;AAAQ;;AACpC;;AAA4B;;AAAQ;;AACpC;;AAA4B;;AAAQ;;AACtC;;AACF;;AACF;;AACF;;AACA;;AACE;;AAAmE;;AAAiB;;AACpF;;AACE;;AACE;;AAAW;;AAAgB;;AAC3B;;AACE;;AAAY;;AAAI;;AAChB;;AAA4B;;AAAQ;;AACpC;;AAA4B;;AAAQ;;AACpC;;AAA4B;;AAAQ;;AACtC;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAA8D;;AAAI;;AACpE;;AACA;;AACE;;AAA0C;;AAAI;;AAChD;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;;;AA9bkB;;AAAA;;AACF;;AAAA;;AA8KE;;AAAA;;AACF;;AAAA;;;;;;;;;sED/KHA,kB,EAAkB;cAL9B,uDAK8B;eALpB;AACThpC,kBAAQ,EAAE,cADD;AAETupC,qBAAW,EAAE,6BAFJ;AAGTC,mBAAS,EAAE,CAAC,6BAAD;AAHF,S;AAKoB,Q;;;;;;;;;;;;;;;;;;;;;;AER/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAkCaC,e;;;;;YAAAA;;;;yBAAAA,e;AAAe,O;AAAA,gBAhBjB,CACP,4DADO,EAEP,qEAFO,EAGP,oEAHO,EAIP,0EAJO,EAKP,+EALO,EAMP,sEANO,EAOP,wEAPO,EAQP,wEARO,EASP,4EATO,EAUP,uEAVO,EAWP,2DAXO,EAYP,mEAZO,EAaP,kFAbO,CAgBiB;;;;0HAAfA,e,EAAe;AAAA,uBAjBX,yEAiBW;AAjBO,kBAE/B,4DAF+B,EAG/B,qEAH+B,EAI/B,oEAJ+B,EAK/B,0EAL+B,EAM/B,+EAN+B,EAO/B,sEAP+B,EAQ/B,wEAR+B,EAS/B,wEAT+B,EAU/B,4EAV+B,EAW/B,uEAX+B,EAY/B,2DAZ+B,EAa/B,mEAb+B,EAc/B,kFAd+B;AAiBP,O;AAHF,K;;;;;sEAGbA,e,EAAe;cAlB3B,sDAkB2B;eAlBlB;AACR97B,sBAAY,EAAE,CAAC,yEAAD,CADN;AAERF,iBAAO,EAAE,CACP,4DADO,EAEP,qEAFO,EAGP,oEAHO,EAIP,0EAJO,EAKP,+EALO,EAMP,sEANO,EAOP,wEAPO,EAQP,wEARO,EASP,4EATO,EAUP,uEAVO,EAWP,2DAXO,EAYP,mEAZO,EAaP,kFAbO;AAFD,S;AAkBkB,Q","file":"mix-design-mix-design-module-es5.js","sourcesContent":["import { ScrollDispatcher, ViewportRuler, ScrollingModule } from '@angular/cdk/scrolling';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/common';\nexport { CdkScrollable, ScrollDispatcher, ViewportRuler } from '@angular/cdk/scrolling';\nimport { DOCUMENT, Location } from '@angular/common';\nimport { Injectable, NgZone, Inject, ɵɵdefineInjectable, ɵɵinject, Optional, SkipSelf, ElementRef, ApplicationRef, ComponentFactoryResolver, Injector, InjectionToken, Directive, EventEmitter, TemplateRef, ViewContainerRef, Input, Output, NgModule } from '@angular/core';\nimport { coerceCssPixelValue, coerceArray, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { DomPortalOutlet, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { Platform } from '@angular/cdk/platform';\nimport { Subject, Subscription, Observable, merge } from 'rxjs';\nimport { take, takeUntil } from 'rxjs/operators';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/scroll/block-scroll-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Strategy that will prevent the user from scrolling while the overlay is visible.\n */\nclass BlockScrollStrategy {\n    /**\n     * @param {?} _viewportRuler\n     * @param {?} document\n     */\n    constructor(_viewportRuler, document) {\n        this._viewportRuler = _viewportRuler;\n        this._previousHTMLStyles = { top: '', left: '' };\n        this._isEnabled = false;\n        this._document = document;\n    }\n    /**\n     * Attaches this scroll strategy to an overlay.\n     * @return {?}\n     */\n    attach() { }\n    /**\n     * Blocks page-level scroll while the attached overlay is open.\n     * @return {?}\n     */\n    enable() {\n        if (this._canBeEnabled()) {\n            /** @type {?} */\n            const root = (/** @type {?} */ (this._document.documentElement));\n            this._previousScrollPosition = this._viewportRuler.getViewportScrollPosition();\n            // Cache the previous inline styles in case the user had set them.\n            this._previousHTMLStyles.left = root.style.left || '';\n            this._previousHTMLStyles.top = root.style.top || '';\n            // Note: we're using the `html` node, instead of the `body`, because the `body` may\n            // have the user agent margin, whereas the `html` is guaranteed not to have one.\n            root.style.left = coerceCssPixelValue(-this._previousScrollPosition.left);\n            root.style.top = coerceCssPixelValue(-this._previousScrollPosition.top);\n            root.classList.add('cdk-global-scrollblock');\n            this._isEnabled = true;\n        }\n    }\n    /**\n     * Unblocks page-level scroll while the attached overlay is open.\n     * @return {?}\n     */\n    disable() {\n        if (this._isEnabled) {\n            /** @type {?} */\n            const html = (/** @type {?} */ (this._document.documentElement));\n            /** @type {?} */\n            const body = (/** @type {?} */ (this._document.body));\n            /** @type {?} */\n            const htmlStyle = (/** @type {?} */ (html.style));\n            /** @type {?} */\n            const bodyStyle = (/** @type {?} */ (body.style));\n            /** @type {?} */\n            const previousHtmlScrollBehavior = htmlStyle.scrollBehavior || '';\n            /** @type {?} */\n            const previousBodyScrollBehavior = bodyStyle.scrollBehavior || '';\n            this._isEnabled = false;\n            htmlStyle.left = this._previousHTMLStyles.left;\n            htmlStyle.top = this._previousHTMLStyles.top;\n            html.classList.remove('cdk-global-scrollblock');\n            // Disable user-defined smooth scrolling temporarily while we restore the scroll position.\n            // See https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-behavior\n            htmlStyle.scrollBehavior = bodyStyle.scrollBehavior = 'auto';\n            window.scroll(this._previousScrollPosition.left, this._previousScrollPosition.top);\n            htmlStyle.scrollBehavior = previousHtmlScrollBehavior;\n            bodyStyle.scrollBehavior = previousBodyScrollBehavior;\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _canBeEnabled() {\n        // Since the scroll strategies can't be singletons, we have to use a global CSS class\n        // (`cdk-global-scrollblock`) to make sure that we don't try to disable global\n        // scrolling multiple times.\n        /** @type {?} */\n        const html = (/** @type {?} */ (this._document.documentElement));\n        if (html.classList.contains('cdk-global-scrollblock') || this._isEnabled) {\n            return false;\n        }\n        /** @type {?} */\n        const body = this._document.body;\n        /** @type {?} */\n        const viewport = this._viewportRuler.getViewportSize();\n        return body.scrollHeight > viewport.height || body.scrollWidth > viewport.width;\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    BlockScrollStrategy.prototype._previousHTMLStyles;\n    /**\n     * @type {?}\n     * @private\n     */\n    BlockScrollStrategy.prototype._previousScrollPosition;\n    /**\n     * @type {?}\n     * @private\n     */\n    BlockScrollStrategy.prototype._isEnabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    BlockScrollStrategy.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    BlockScrollStrategy.prototype._viewportRuler;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/scroll/scroll-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Describes a strategy that will be used by an overlay to handle scroll events while it is open.\n * @record\n */\nfunction ScrollStrategy() { }\nif (false) {\n    /**\n     * Enable this scroll strategy (called when the attached overlay is attached to a portal).\n     * @type {?}\n     */\n    ScrollStrategy.prototype.enable;\n    /**\n     * Disable this scroll strategy (called when the attached overlay is detached from a portal).\n     * @type {?}\n     */\n    ScrollStrategy.prototype.disable;\n    /**\n     * Attaches this `ScrollStrategy` to an overlay.\n     * @type {?}\n     */\n    ScrollStrategy.prototype.attach;\n    /**\n     * Detaches the scroll strategy from the current overlay.\n     * @type {?|undefined}\n     */\n    ScrollStrategy.prototype.detach;\n}\n/**\n * Returns an error to be thrown when attempting to attach an already-attached scroll strategy.\n * @return {?}\n */\nfunction getMatScrollStrategyAlreadyAttachedError() {\n    return Error(`Scroll strategy has already been attached.`);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/scroll/close-scroll-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Config options for the CloseScrollStrategy.\n * @record\n */\nfunction CloseScrollStrategyConfig() { }\nif (false) {\n    /**\n     * Amount of pixels the user has to scroll before the overlay is closed.\n     * @type {?|undefined}\n     */\n    CloseScrollStrategyConfig.prototype.threshold;\n}\n/**\n * Strategy that will close the overlay as soon as the user starts scrolling.\n */\nclass CloseScrollStrategy {\n    /**\n     * @param {?} _scrollDispatcher\n     * @param {?} _ngZone\n     * @param {?} _viewportRuler\n     * @param {?=} _config\n     */\n    constructor(_scrollDispatcher, _ngZone, _viewportRuler, _config) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._config = _config;\n        this._scrollSubscription = null;\n        /**\n         * Detaches the overlay ref and disables the scroll strategy.\n         */\n        this._detach = (/**\n         * @return {?}\n         */\n        () => {\n            this.disable();\n            if (this._overlayRef.hasAttached()) {\n                this._ngZone.run((/**\n                 * @return {?}\n                 */\n                () => this._overlayRef.detach()));\n            }\n        });\n    }\n    /**\n     * Attaches this scroll strategy to an overlay.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    attach(overlayRef) {\n        if (this._overlayRef) {\n            throw getMatScrollStrategyAlreadyAttachedError();\n        }\n        this._overlayRef = overlayRef;\n    }\n    /**\n     * Enables the closing of the attached overlay on scroll.\n     * @return {?}\n     */\n    enable() {\n        if (this._scrollSubscription) {\n            return;\n        }\n        /** @type {?} */\n        const stream = this._scrollDispatcher.scrolled(0);\n        if (this._config && this._config.threshold && this._config.threshold > 1) {\n            this._initialScrollPosition = this._viewportRuler.getViewportScrollPosition().top;\n            this._scrollSubscription = stream.subscribe((/**\n             * @return {?}\n             */\n            () => {\n                /** @type {?} */\n                const scrollPosition = this._viewportRuler.getViewportScrollPosition().top;\n                if (Math.abs(scrollPosition - this._initialScrollPosition) > (/** @type {?} */ ((/** @type {?} */ (this._config)).threshold))) {\n                    this._detach();\n                }\n                else {\n                    this._overlayRef.updatePosition();\n                }\n            }));\n        }\n        else {\n            this._scrollSubscription = stream.subscribe(this._detach);\n        }\n    }\n    /**\n     * Disables the closing the attached overlay on scroll.\n     * @return {?}\n     */\n    disable() {\n        if (this._scrollSubscription) {\n            this._scrollSubscription.unsubscribe();\n            this._scrollSubscription = null;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    detach() {\n        this.disable();\n        this._overlayRef = (/** @type {?} */ (null));\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    CloseScrollStrategy.prototype._scrollSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    CloseScrollStrategy.prototype._overlayRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CloseScrollStrategy.prototype._initialScrollPosition;\n    /**\n     * Detaches the overlay ref and disables the scroll strategy.\n     * @type {?}\n     * @private\n     */\n    CloseScrollStrategy.prototype._detach;\n    /**\n     * @type {?}\n     * @private\n     */\n    CloseScrollStrategy.prototype._scrollDispatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    CloseScrollStrategy.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    CloseScrollStrategy.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    CloseScrollStrategy.prototype._config;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/scroll/noop-scroll-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Scroll strategy that doesn't do anything.\n */\nclass NoopScrollStrategy {\n    /**\n     * Does nothing, as this scroll strategy is a no-op.\n     * @return {?}\n     */\n    enable() { }\n    /**\n     * Does nothing, as this scroll strategy is a no-op.\n     * @return {?}\n     */\n    disable() { }\n    /**\n     * Does nothing, as this scroll strategy is a no-op.\n     * @return {?}\n     */\n    attach() { }\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/position/scroll-clip.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(jelbourn): move this to live with the rest of the scrolling code\n// TODO(jelbourn): someday replace this with IntersectionObservers\n/**\n * Gets whether an element is scrolled outside of view by any of its parent scrolling containers.\n * \\@docs-private\n * @param {?} element Dimensions of the element (from getBoundingClientRect)\n * @param {?} scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @return {?} Whether the element is scrolled out of view\n */\nfunction isElementScrolledOutsideView(element, scrollContainers) {\n    return scrollContainers.some((/**\n     * @param {?} containerBounds\n     * @return {?}\n     */\n    containerBounds => {\n        /** @type {?} */\n        const outsideAbove = element.bottom < containerBounds.top;\n        /** @type {?} */\n        const outsideBelow = element.top > containerBounds.bottom;\n        /** @type {?} */\n        const outsideLeft = element.right < containerBounds.left;\n        /** @type {?} */\n        const outsideRight = element.left > containerBounds.right;\n        return outsideAbove || outsideBelow || outsideLeft || outsideRight;\n    }));\n}\n/**\n * Gets whether an element is clipped by any of its scrolling containers.\n * \\@docs-private\n * @param {?} element Dimensions of the element (from getBoundingClientRect)\n * @param {?} scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @return {?} Whether the element is clipped\n */\nfunction isElementClippedByScrolling(element, scrollContainers) {\n    return scrollContainers.some((/**\n     * @param {?} scrollContainerRect\n     * @return {?}\n     */\n    scrollContainerRect => {\n        /** @type {?} */\n        const clippedAbove = element.top < scrollContainerRect.top;\n        /** @type {?} */\n        const clippedBelow = element.bottom > scrollContainerRect.bottom;\n        /** @type {?} */\n        const clippedLeft = element.left < scrollContainerRect.left;\n        /** @type {?} */\n        const clippedRight = element.right > scrollContainerRect.right;\n        return clippedAbove || clippedBelow || clippedLeft || clippedRight;\n    }));\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/scroll/reposition-scroll-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Config options for the RepositionScrollStrategy.\n * @record\n */\nfunction RepositionScrollStrategyConfig() { }\nif (false) {\n    /**\n     * Time in milliseconds to throttle the scroll events.\n     * @type {?|undefined}\n     */\n    RepositionScrollStrategyConfig.prototype.scrollThrottle;\n    /**\n     * Whether to close the overlay once the user has scrolled away completely.\n     * @type {?|undefined}\n     */\n    RepositionScrollStrategyConfig.prototype.autoClose;\n}\n/**\n * Strategy that will update the element position as the user is scrolling.\n */\nclass RepositionScrollStrategy {\n    /**\n     * @param {?} _scrollDispatcher\n     * @param {?} _viewportRuler\n     * @param {?} _ngZone\n     * @param {?=} _config\n     */\n    constructor(_scrollDispatcher, _viewportRuler, _ngZone, _config) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewportRuler = _viewportRuler;\n        this._ngZone = _ngZone;\n        this._config = _config;\n        this._scrollSubscription = null;\n    }\n    /**\n     * Attaches this scroll strategy to an overlay.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    attach(overlayRef) {\n        if (this._overlayRef) {\n            throw getMatScrollStrategyAlreadyAttachedError();\n        }\n        this._overlayRef = overlayRef;\n    }\n    /**\n     * Enables repositioning of the attached overlay on scroll.\n     * @return {?}\n     */\n    enable() {\n        if (!this._scrollSubscription) {\n            /** @type {?} */\n            const throttle = this._config ? this._config.scrollThrottle : 0;\n            this._scrollSubscription = this._scrollDispatcher.scrolled(throttle).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this._overlayRef.updatePosition();\n                // TODO(crisbeto): make `close` on by default once all components can handle it.\n                if (this._config && this._config.autoClose) {\n                    /** @type {?} */\n                    const overlayRect = this._overlayRef.overlayElement.getBoundingClientRect();\n                    const { width, height } = this._viewportRuler.getViewportSize();\n                    // TODO(crisbeto): include all ancestor scroll containers here once\n                    // we have a way of exposing the trigger element to the scroll strategy.\n                    /** @type {?} */\n                    const parentRects = [{ width, height, bottom: height, right: width, top: 0, left: 0 }];\n                    if (isElementScrolledOutsideView(overlayRect, parentRects)) {\n                        this.disable();\n                        this._ngZone.run((/**\n                         * @return {?}\n                         */\n                        () => this._overlayRef.detach()));\n                    }\n                }\n            }));\n        }\n    }\n    /**\n     * Disables repositioning of the attached overlay on scroll.\n     * @return {?}\n     */\n    disable() {\n        if (this._scrollSubscription) {\n            this._scrollSubscription.unsubscribe();\n            this._scrollSubscription = null;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    detach() {\n        this.disable();\n        this._overlayRef = (/** @type {?} */ (null));\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    RepositionScrollStrategy.prototype._scrollSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    RepositionScrollStrategy.prototype._overlayRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    RepositionScrollStrategy.prototype._scrollDispatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    RepositionScrollStrategy.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    RepositionScrollStrategy.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    RepositionScrollStrategy.prototype._config;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/scroll/scroll-strategy-options.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Options for how an overlay will handle scrolling.\n *\n * Users can provide a custom value for `ScrollStrategyOptions` to replace the default\n * behaviors. This class primarily acts as a factory for ScrollStrategy instances.\n */\nclass ScrollStrategyOptions {\n    /**\n     * @param {?} _scrollDispatcher\n     * @param {?} _viewportRuler\n     * @param {?} _ngZone\n     * @param {?} document\n     */\n    constructor(_scrollDispatcher, _viewportRuler, _ngZone, document) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewportRuler = _viewportRuler;\n        this._ngZone = _ngZone;\n        /**\n         * Do nothing on scroll.\n         */\n        this.noop = (/**\n         * @return {?}\n         */\n        () => new NoopScrollStrategy());\n        /**\n         * Close the overlay as soon as the user scrolls.\n         * @param config Configuration to be used inside the scroll strategy.\n         */\n        this.close = (/**\n         * @param {?=} config\n         * @return {?}\n         */\n        (config) => new CloseScrollStrategy(this._scrollDispatcher, this._ngZone, this._viewportRuler, config));\n        /**\n         * Block scrolling.\n         */\n        this.block = (/**\n         * @return {?}\n         */\n        () => new BlockScrollStrategy(this._viewportRuler, this._document));\n        /**\n         * Update the overlay's position on scroll.\n         * @param config Configuration to be used inside the scroll strategy.\n         * Allows debouncing the reposition calls.\n         */\n        this.reposition = (/**\n         * @param {?=} config\n         * @return {?}\n         */\n        (config) => new RepositionScrollStrategy(this._scrollDispatcher, this._viewportRuler, this._ngZone, config));\n        this._document = document;\n    }\n}\nScrollStrategyOptions.ɵfac = function ScrollStrategyOptions_Factory(t) { return new (t || ScrollStrategyOptions)(ɵngcc0.ɵɵinject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵinject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DOCUMENT)); };\n/** @nocollapse */\nScrollStrategyOptions.ctorParameters = () => [\n    { type: ScrollDispatcher },\n    { type: ViewportRuler },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/** @nocollapse */ ScrollStrategyOptions.ɵprov = ɵɵdefineInjectable({ factory: function ScrollStrategyOptions_Factory() { return new ScrollStrategyOptions(ɵɵinject(ScrollDispatcher), ɵɵinject(ViewportRuler), ɵɵinject(NgZone), ɵɵinject(DOCUMENT)); }, token: ScrollStrategyOptions, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ScrollStrategyOptions, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.ScrollDispatcher }, { type: ɵngcc1.ViewportRuler }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    ScrollStrategyOptions.prototype._document;\n    /**\n     * Do nothing on scroll.\n     * @type {?}\n     */\n    ScrollStrategyOptions.prototype.noop;\n    /**\n     * Close the overlay as soon as the user scrolls.\n     * \\@param config Configuration to be used inside the scroll strategy.\n     * @type {?}\n     */\n    ScrollStrategyOptions.prototype.close;\n    /**\n     * Block scrolling.\n     * @type {?}\n     */\n    ScrollStrategyOptions.prototype.block;\n    /**\n     * Update the overlay's position on scroll.\n     * \\@param config Configuration to be used inside the scroll strategy.\n     * Allows debouncing the reposition calls.\n     * @type {?}\n     */\n    ScrollStrategyOptions.prototype.reposition;\n    /**\n     * @type {?}\n     * @private\n     */\n    ScrollStrategyOptions.prototype._scrollDispatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    ScrollStrategyOptions.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    ScrollStrategyOptions.prototype._ngZone;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/scroll/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/overlay-config.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Initial configuration used when creating an overlay.\n */\nclass OverlayConfig {\n    /**\n     * @param {?=} config\n     */\n    constructor(config) {\n        /**\n         * Strategy to be used when handling scroll events while the overlay is open.\n         */\n        this.scrollStrategy = new NoopScrollStrategy();\n        /**\n         * Custom class to add to the overlay pane.\n         */\n        this.panelClass = '';\n        /**\n         * Whether the overlay has a backdrop.\n         */\n        this.hasBackdrop = false;\n        /**\n         * Custom class to add to the backdrop\n         */\n        this.backdropClass = 'cdk-overlay-dark-backdrop';\n        /**\n         * Whether the overlay should be disposed of when the user goes backwards/forwards in history.\n         * Note that this usually doesn't include clicking on links (unless the user is using\n         * the `HashLocationStrategy`).\n         */\n        this.disposeOnNavigation = false;\n        if (config) {\n            // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n            // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n            // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n            /** @type {?} */\n            const configKeys = (/** @type {?} */ (Object.keys(config)));\n            for (const key of configKeys) {\n                if (config[key] !== undefined) {\n                    // TypeScript, as of version 3.5, sees the left-hand-side of this expression\n                    // as \"I don't know *which* key this is, so the only valid value is the intersection\n                    // of all the posible values.\" In this case, that happens to be `undefined`. TypeScript\n                    // is not smart enough to see that the right-hand-side is actually an access of the same\n                    // exact type with the same exact key, meaning that the value type must be identical.\n                    // So we use `any` to work around this.\n                    this[key] = (/** @type {?} */ (config[key]));\n                }\n            }\n        }\n    }\n}\nif (false) {\n    /**\n     * Strategy with which to position the overlay.\n     * @type {?}\n     */\n    OverlayConfig.prototype.positionStrategy;\n    /**\n     * Strategy to be used when handling scroll events while the overlay is open.\n     * @type {?}\n     */\n    OverlayConfig.prototype.scrollStrategy;\n    /**\n     * Custom class to add to the overlay pane.\n     * @type {?}\n     */\n    OverlayConfig.prototype.panelClass;\n    /**\n     * Whether the overlay has a backdrop.\n     * @type {?}\n     */\n    OverlayConfig.prototype.hasBackdrop;\n    /**\n     * Custom class to add to the backdrop\n     * @type {?}\n     */\n    OverlayConfig.prototype.backdropClass;\n    /**\n     * The width of the overlay panel. If a number is provided, pixel units are assumed.\n     * @type {?}\n     */\n    OverlayConfig.prototype.width;\n    /**\n     * The height of the overlay panel. If a number is provided, pixel units are assumed.\n     * @type {?}\n     */\n    OverlayConfig.prototype.height;\n    /**\n     * The min-width of the overlay panel. If a number is provided, pixel units are assumed.\n     * @type {?}\n     */\n    OverlayConfig.prototype.minWidth;\n    /**\n     * The min-height of the overlay panel. If a number is provided, pixel units are assumed.\n     * @type {?}\n     */\n    OverlayConfig.prototype.minHeight;\n    /**\n     * The max-width of the overlay panel. If a number is provided, pixel units are assumed.\n     * @type {?}\n     */\n    OverlayConfig.prototype.maxWidth;\n    /**\n     * The max-height of the overlay panel. If a number is provided, pixel units are assumed.\n     * @type {?}\n     */\n    OverlayConfig.prototype.maxHeight;\n    /**\n     * Direction of the text in the overlay panel. If a `Directionality` instance\n     * is passed in, the overlay will handle changes to its value automatically.\n     * @type {?}\n     */\n    OverlayConfig.prototype.direction;\n    /**\n     * Whether the overlay should be disposed of when the user goes backwards/forwards in history.\n     * Note that this usually doesn't include clicking on links (unless the user is using\n     * the `HashLocationStrategy`).\n     * @type {?}\n     */\n    OverlayConfig.prototype.disposeOnNavigation;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/position/connected-position.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A connection point on the origin element.\n * @record\n */\nfunction OriginConnectionPosition() { }\nif (false) {\n    /** @type {?} */\n    OriginConnectionPosition.prototype.originX;\n    /** @type {?} */\n    OriginConnectionPosition.prototype.originY;\n}\n/**\n * A connection point on the overlay element.\n * @record\n */\nfunction OverlayConnectionPosition() { }\nif (false) {\n    /** @type {?} */\n    OverlayConnectionPosition.prototype.overlayX;\n    /** @type {?} */\n    OverlayConnectionPosition.prototype.overlayY;\n}\n/**\n * The points of the origin element and the overlay element to connect.\n */\nclass ConnectionPositionPair {\n    /**\n     * @param {?} origin\n     * @param {?} overlay\n     * @param {?=} offsetX\n     * @param {?=} offsetY\n     * @param {?=} panelClass\n     */\n    constructor(origin, overlay, offsetX, offsetY, panelClass) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.panelClass = panelClass;\n        this.originX = origin.originX;\n        this.originY = origin.originY;\n        this.overlayX = overlay.overlayX;\n        this.overlayY = overlay.overlayY;\n    }\n}\nif (false) {\n    /**\n     * X-axis attachment point for connected overlay origin. Can be 'start', 'end', or 'center'.\n     * @type {?}\n     */\n    ConnectionPositionPair.prototype.originX;\n    /**\n     * Y-axis attachment point for connected overlay origin. Can be 'top', 'bottom', or 'center'.\n     * @type {?}\n     */\n    ConnectionPositionPair.prototype.originY;\n    /**\n     * X-axis attachment point for connected overlay. Can be 'start', 'end', or 'center'.\n     * @type {?}\n     */\n    ConnectionPositionPair.prototype.overlayX;\n    /**\n     * Y-axis attachment point for connected overlay. Can be 'top', 'bottom', or 'center'.\n     * @type {?}\n     */\n    ConnectionPositionPair.prototype.overlayY;\n    /**\n     * Offset along the X axis.\n     * @type {?}\n     */\n    ConnectionPositionPair.prototype.offsetX;\n    /**\n     * Offset along the Y axis.\n     * @type {?}\n     */\n    ConnectionPositionPair.prototype.offsetY;\n    /**\n     * Class(es) to be applied to the panel while this position is active.\n     * @type {?}\n     */\n    ConnectionPositionPair.prototype.panelClass;\n}\n/**\n * Set of properties regarding the position of the origin and overlay relative to the viewport\n * with respect to the containing Scrollable elements.\n *\n * The overlay and origin are clipped if any part of their bounding client rectangle exceeds the\n * bounds of any one of the strategy's Scrollable's bounding client rectangle.\n *\n * The overlay and origin are outside view if there is no overlap between their bounding client\n * rectangle and any one of the strategy's Scrollable's bounding client rectangle.\n *\n *       -----------                    -----------\n *       | outside |                    | clipped |\n *       |  view   |              --------------------------\n *       |         |              |     |         |        |\n *       ----------               |     -----------        |\n *  --------------------------    |                        |\n *  |                        |    |      Scrollable        |\n *  |                        |    |                        |\n *  |                        |     --------------------------\n *  |      Scrollable        |\n *  |                        |\n *  --------------------------\n *\n * \\@docs-private\n */\nclass ScrollingVisibility {\n}\nif (false) {\n    /** @type {?} */\n    ScrollingVisibility.prototype.isOriginClipped;\n    /** @type {?} */\n    ScrollingVisibility.prototype.isOriginOutsideView;\n    /** @type {?} */\n    ScrollingVisibility.prototype.isOverlayClipped;\n    /** @type {?} */\n    ScrollingVisibility.prototype.isOverlayOutsideView;\n}\n/**\n * The change event emitted by the strategy when a fallback position is used.\n */\nclass ConnectedOverlayPositionChange {\n    /**\n     * @param {?} connectionPair\n     * @param {?} scrollableViewProperties\n     */\n    constructor(connectionPair, scrollableViewProperties) {\n        this.connectionPair = connectionPair;\n        this.scrollableViewProperties = scrollableViewProperties;\n    }\n}\n/** @nocollapse */\nConnectedOverlayPositionChange.ctorParameters = () => [\n    { type: ConnectionPositionPair },\n    { type: ScrollingVisibility, decorators: [{ type: Optional }] }\n];\nif (false) {\n    /**\n     * The position used as a result of this change.\n     * @type {?}\n     */\n    ConnectedOverlayPositionChange.prototype.connectionPair;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    ConnectedOverlayPositionChange.prototype.scrollableViewProperties;\n}\n/**\n * Validates whether a vertical position property matches the expected values.\n * \\@docs-private\n * @param {?} property Name of the property being validated.\n * @param {?} value Value of the property being validated.\n * @return {?}\n */\nfunction validateVerticalPosition(property, value) {\n    if (value !== 'top' && value !== 'bottom' && value !== 'center') {\n        throw Error(`ConnectedPosition: Invalid ${property} \"${value}\". ` +\n            `Expected \"top\", \"bottom\" or \"center\".`);\n    }\n}\n/**\n * Validates whether a horizontal position property matches the expected values.\n * \\@docs-private\n * @param {?} property Name of the property being validated.\n * @param {?} value Value of the property being validated.\n * @return {?}\n */\nfunction validateHorizontalPosition(property, value) {\n    if (value !== 'start' && value !== 'end' && value !== 'center') {\n        throw Error(`ConnectedPosition: Invalid ${property} \"${value}\". ` +\n            `Expected \"start\", \"end\" or \"center\".`);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/keyboard/overlay-keyboard-dispatcher.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Service for dispatching keyboard events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nclass OverlayKeyboardDispatcher {\n    /**\n     * @param {?} document\n     */\n    constructor(document) {\n        /**\n         * Currently attached overlays in the order they were attached.\n         */\n        this._attachedOverlays = [];\n        /**\n         * Keyboard event listener that will be attached to the body.\n         */\n        this._keydownListener = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            /** @type {?} */\n            const overlays = this._attachedOverlays;\n            for (let i = overlays.length - 1; i > -1; i--) {\n                // Dispatch the keydown event to the top overlay which has subscribers to its keydown events.\n                // We want to target the most recent overlay, rather than trying to match where the event came\n                // from, because some components might open an overlay, but keep focus on a trigger element\n                // (e.g. for select and autocomplete). We skip overlays without keydown event subscriptions,\n                // because we don't want overlays that don't handle keyboard events to block the ones below\n                // them that do.\n                if (overlays[i]._keydownEventSubscriptions > 0) {\n                    overlays[i]._keydownEvents.next(event);\n                    break;\n                }\n            }\n        });\n        this._document = document;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._detach();\n    }\n    /**\n     * Add a new overlay to the list of attached overlay refs.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    add(overlayRef) {\n        // Ensure that we don't get the same overlay multiple times.\n        this.remove(overlayRef);\n        // Lazily start dispatcher once first overlay is added\n        if (!this._isAttached) {\n            this._document.body.addEventListener('keydown', this._keydownListener);\n            this._isAttached = true;\n        }\n        this._attachedOverlays.push(overlayRef);\n    }\n    /**\n     * Remove an overlay from the list of attached overlay refs.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    remove(overlayRef) {\n        /** @type {?} */\n        const index = this._attachedOverlays.indexOf(overlayRef);\n        if (index > -1) {\n            this._attachedOverlays.splice(index, 1);\n        }\n        // Remove the global listener once there are no more overlays.\n        if (this._attachedOverlays.length === 0) {\n            this._detach();\n        }\n    }\n    /**\n     * Detaches the global keyboard event listener.\n     * @private\n     * @return {?}\n     */\n    _detach() {\n        if (this._isAttached) {\n            this._document.body.removeEventListener('keydown', this._keydownListener);\n            this._isAttached = false;\n        }\n    }\n}\nOverlayKeyboardDispatcher.ɵfac = function OverlayKeyboardDispatcher_Factory(t) { return new (t || OverlayKeyboardDispatcher)(ɵngcc0.ɵɵinject(DOCUMENT)); };\n/** @nocollapse */\nOverlayKeyboardDispatcher.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/** @nocollapse */ OverlayKeyboardDispatcher.ɵprov = ɵɵdefineInjectable({ factory: function OverlayKeyboardDispatcher_Factory() { return new OverlayKeyboardDispatcher(ɵɵinject(DOCUMENT)); }, token: OverlayKeyboardDispatcher, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(OverlayKeyboardDispatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * Currently attached overlays in the order they were attached.\n     * @type {?}\n     */\n    OverlayKeyboardDispatcher.prototype._attachedOverlays;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayKeyboardDispatcher.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayKeyboardDispatcher.prototype._isAttached;\n    /**\n     * Keyboard event listener that will be attached to the body.\n     * @type {?}\n     * @private\n     */\n    OverlayKeyboardDispatcher.prototype._keydownListener;\n}\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @param {?} dispatcher\n * @param {?} _document\n * @return {?}\n */\nfunction OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY(dispatcher, _document) {\n    return dispatcher || new OverlayKeyboardDispatcher(_document);\n}\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @type {?}\n */\nconst OVERLAY_KEYBOARD_DISPATCHER_PROVIDER = {\n    // If there is already an OverlayKeyboardDispatcher available, use that.\n    // Otherwise, provide a new one.\n    provide: OverlayKeyboardDispatcher,\n    deps: [\n        [new Optional(), new SkipSelf(), OverlayKeyboardDispatcher],\n        (/** @type {?} */ (\n        // Coerce to `InjectionToken` so that the `deps` match the \"shape\"\n        // of the type expected by Angular\n        DOCUMENT))\n    ],\n    useFactory: OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/overlay-container.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Whether we're in a testing environment.\n * TODO(crisbeto): remove this once we have an overlay testing module.\n * @type {?}\n */\nconst isTestEnvironment = typeof window !== 'undefined' && !!window &&\n    !!(((/** @type {?} */ (window))).__karma__ || ((/** @type {?} */ (window))).jasmine);\n/**\n * Container inside which all overlays will render.\n */\nclass OverlayContainer {\n    /**\n     * @param {?} document\n     * @param {?=} _platform\n     */\n    constructor(document, _platform) {\n        this._platform = _platform;\n        this._document = document;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        /** @type {?} */\n        const container = this._containerElement;\n        if (container && container.parentNode) {\n            container.parentNode.removeChild(container);\n        }\n    }\n    /**\n     * This method returns the overlay container element. It will lazily\n     * create the element the first time  it is called to facilitate using\n     * the container in non-browser environments.\n     * @return {?} the container element\n     */\n    getContainerElement() {\n        if (!this._containerElement) {\n            this._createContainer();\n        }\n        return this._containerElement;\n    }\n    /**\n     * Create the overlay container element, which is simply a div\n     * with the 'cdk-overlay-container' class on the document body.\n     * @protected\n     * @return {?}\n     */\n    _createContainer() {\n        // @breaking-change 10.0.0 Remove null check for `_platform`.\n        /** @type {?} */\n        const isBrowser = this._platform ? this._platform.isBrowser : typeof window !== 'undefined';\n        /** @type {?} */\n        const containerClass = 'cdk-overlay-container';\n        if (isBrowser || isTestEnvironment) {\n            /** @type {?} */\n            const oppositePlatformContainers = this._document.querySelectorAll(`.${containerClass}[platform=\"server\"], ` +\n                `.${containerClass}[platform=\"test\"]`);\n            // Remove any old containers from the opposite platform.\n            // This can happen when transitioning from the server to the client.\n            for (let i = 0; i < oppositePlatformContainers.length; i++) {\n                (/** @type {?} */ (oppositePlatformContainers[i].parentNode)).removeChild(oppositePlatformContainers[i]);\n            }\n        }\n        /** @type {?} */\n        const container = this._document.createElement('div');\n        container.classList.add(containerClass);\n        // A long time ago we kept adding new overlay containers whenever a new app was instantiated,\n        // but at some point we added logic which clears the duplicate ones in order to avoid leaks.\n        // The new logic was a little too aggressive since it was breaking some legitimate use cases.\n        // To mitigate the problem we made it so that only containers from a different platform are\n        // cleared, but the side-effect was that people started depending on the overly-aggressive\n        // logic to clean up their tests for them. Until we can introduce an overlay-specific testing\n        // module which does the cleanup, we try to detect that we're in a test environment and we\n        // always clear the container. See #17006.\n        // TODO(crisbeto): remove the test environment check once we have an overlay testing module.\n        if (isTestEnvironment) {\n            container.setAttribute('platform', 'test');\n        }\n        else if (!isBrowser) {\n            container.setAttribute('platform', 'server');\n        }\n        this._document.body.appendChild(container);\n        this._containerElement = container;\n    }\n}\nOverlayContainer.ɵfac = function OverlayContainer_Factory(t) { return new (t || OverlayContainer)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc2.Platform)); };\n/** @nocollapse */\nOverlayContainer.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform }\n];\n/** @nocollapse */ OverlayContainer.ɵprov = ɵɵdefineInjectable({ factory: function OverlayContainer_Factory() { return new OverlayContainer(ɵɵinject(DOCUMENT), ɵɵinject(Platform)); }, token: OverlayContainer, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(OverlayContainer, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc2.Platform }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @protected\n     */\n    OverlayContainer.prototype._containerElement;\n    /**\n     * @type {?}\n     * @protected\n     */\n    OverlayContainer.prototype._document;\n    /**\n     * @deprecated `platform` parameter to become required.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     * @protected\n     */\n    OverlayContainer.prototype._platform;\n}\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @param {?} parentContainer\n * @param {?} _document\n * @return {?}\n */\nfunction OVERLAY_CONTAINER_PROVIDER_FACTORY(parentContainer, _document) {\n    return parentContainer || new OverlayContainer(_document);\n}\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @type {?}\n */\nconst OVERLAY_CONTAINER_PROVIDER = {\n    // If there is already an OverlayContainer available, use that. Otherwise, provide a new one.\n    provide: OverlayContainer,\n    deps: [\n        [new Optional(), new SkipSelf(), OverlayContainer],\n        (/** @type {?} */ (DOCUMENT))\n    ],\n    useFactory: OVERLAY_CONTAINER_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/overlay-ref.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Reference to an overlay that has been created with the Overlay service.\n * Used to manipulate or dispose of said overlay.\n */\nclass OverlayRef {\n    /**\n     * @param {?} _portalOutlet\n     * @param {?} _host\n     * @param {?} _pane\n     * @param {?} _config\n     * @param {?} _ngZone\n     * @param {?} _keyboardDispatcher\n     * @param {?} _document\n     * @param {?=} _location\n     */\n    constructor(_portalOutlet, _host, _pane, _config, _ngZone, _keyboardDispatcher, _document, _location) {\n        this._portalOutlet = _portalOutlet;\n        this._host = _host;\n        this._pane = _pane;\n        this._config = _config;\n        this._ngZone = _ngZone;\n        this._keyboardDispatcher = _keyboardDispatcher;\n        this._document = _document;\n        this._location = _location;\n        this._backdropElement = null;\n        this._backdropClick = new Subject();\n        this._attachments = new Subject();\n        this._detachments = new Subject();\n        this._locationChanges = Subscription.EMPTY;\n        this._backdropClickHandler = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => this._backdropClick.next(event));\n        this._keydownEventsObservable = new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => {\n            /** @type {?} */\n            const subscription = this._keydownEvents.subscribe(observer);\n            this._keydownEventSubscriptions++;\n            return (/**\n             * @return {?}\n             */\n            () => {\n                subscription.unsubscribe();\n                this._keydownEventSubscriptions--;\n            });\n        }));\n        /**\n         * Stream of keydown events dispatched to this overlay.\n         */\n        this._keydownEvents = new Subject();\n        /**\n         * Amount of subscriptions to the keydown events.\n         */\n        this._keydownEventSubscriptions = 0;\n        if (_config.scrollStrategy) {\n            this._scrollStrategy = _config.scrollStrategy;\n            this._scrollStrategy.attach(this);\n        }\n        this._positionStrategy = _config.positionStrategy;\n    }\n    /**\n     * The overlay's HTML element\n     * @return {?}\n     */\n    get overlayElement() {\n        return this._pane;\n    }\n    /**\n     * The overlay's backdrop HTML element.\n     * @return {?}\n     */\n    get backdropElement() {\n        return this._backdropElement;\n    }\n    /**\n     * Wrapper around the panel element. Can be used for advanced\n     * positioning where a wrapper with specific styling is\n     * required around the overlay pane.\n     * @return {?}\n     */\n    get hostElement() {\n        return this._host;\n    }\n    /**\n     * Attaches content, given via a Portal, to the overlay.\n     * If the overlay is configured to have a backdrop, it will be created.\n     *\n     * @param {?} portal Portal instance to which to attach the overlay.\n     * @return {?} The portal attachment result.\n     */\n    attach(portal) {\n        /** @type {?} */\n        let attachResult = this._portalOutlet.attach(portal);\n        // Update the pane element with the given configuration.\n        if (!this._host.parentElement && this._previousHostParent) {\n            this._previousHostParent.appendChild(this._host);\n        }\n        if (this._positionStrategy) {\n            this._positionStrategy.attach(this);\n        }\n        this._updateStackingOrder();\n        this._updateElementSize();\n        this._updateElementDirection();\n        if (this._scrollStrategy) {\n            this._scrollStrategy.enable();\n        }\n        // Update the position once the zone is stable so that the overlay will be fully rendered\n        // before attempting to position it, as the position may depend on the size of the rendered\n        // content.\n        this._ngZone.onStable\n            .asObservable()\n            .pipe(take(1))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            // The overlay could've been detached before the zone has stabilized.\n            if (this.hasAttached()) {\n                this.updatePosition();\n            }\n        }));\n        // Enable pointer events for the overlay pane element.\n        this._togglePointerEvents(true);\n        if (this._config.hasBackdrop) {\n            this._attachBackdrop();\n        }\n        if (this._config.panelClass) {\n            this._toggleClasses(this._pane, this._config.panelClass, true);\n        }\n        // Only emit the `attachments` event once all other setup is done.\n        this._attachments.next();\n        // Track this overlay by the keyboard dispatcher\n        this._keyboardDispatcher.add(this);\n        // @breaking-change 8.0.0 remove the null check for `_location`\n        // once the constructor parameter is made required.\n        if (this._config.disposeOnNavigation && this._location) {\n            this._locationChanges = this._location.subscribe((/**\n             * @return {?}\n             */\n            () => this.dispose()));\n        }\n        return attachResult;\n    }\n    /**\n     * Detaches an overlay from a portal.\n     * @return {?} The portal detachment result.\n     */\n    detach() {\n        if (!this.hasAttached()) {\n            return;\n        }\n        this.detachBackdrop();\n        // When the overlay is detached, the pane element should disable pointer events.\n        // This is necessary because otherwise the pane element will cover the page and disable\n        // pointer events therefore. Depends on the position strategy and the applied pane boundaries.\n        this._togglePointerEvents(false);\n        if (this._positionStrategy && this._positionStrategy.detach) {\n            this._positionStrategy.detach();\n        }\n        if (this._scrollStrategy) {\n            this._scrollStrategy.disable();\n        }\n        /** @type {?} */\n        const detachmentResult = this._portalOutlet.detach();\n        // Only emit after everything is detached.\n        this._detachments.next();\n        // Remove this overlay from keyboard dispatcher tracking.\n        this._keyboardDispatcher.remove(this);\n        // Keeping the host element in the DOM can cause scroll jank, because it still gets\n        // rendered, even though it's transparent and unclickable which is why we remove it.\n        this._detachContentWhenStable();\n        // Stop listening for location changes.\n        this._locationChanges.unsubscribe();\n        return detachmentResult;\n    }\n    /**\n     * Cleans up the overlay from the DOM.\n     * @return {?}\n     */\n    dispose() {\n        /** @type {?} */\n        const isAttached = this.hasAttached();\n        if (this._positionStrategy) {\n            this._positionStrategy.dispose();\n        }\n        this._disposeScrollStrategy();\n        this.detachBackdrop();\n        this._locationChanges.unsubscribe();\n        this._keyboardDispatcher.remove(this);\n        this._portalOutlet.dispose();\n        this._attachments.complete();\n        this._backdropClick.complete();\n        this._keydownEvents.complete();\n        if (this._host && this._host.parentNode) {\n            this._host.parentNode.removeChild(this._host);\n            this._host = (/** @type {?} */ (null));\n        }\n        this._previousHostParent = this._pane = (/** @type {?} */ (null));\n        if (isAttached) {\n            this._detachments.next();\n        }\n        this._detachments.complete();\n    }\n    /**\n     * Whether the overlay has attached content.\n     * @return {?}\n     */\n    hasAttached() {\n        return this._portalOutlet.hasAttached();\n    }\n    /**\n     * Gets an observable that emits when the backdrop has been clicked.\n     * @return {?}\n     */\n    backdropClick() {\n        return this._backdropClick.asObservable();\n    }\n    /**\n     * Gets an observable that emits when the overlay has been attached.\n     * @return {?}\n     */\n    attachments() {\n        return this._attachments.asObservable();\n    }\n    /**\n     * Gets an observable that emits when the overlay has been detached.\n     * @return {?}\n     */\n    detachments() {\n        return this._detachments.asObservable();\n    }\n    /**\n     * Gets an observable of keydown events targeted to this overlay.\n     * @return {?}\n     */\n    keydownEvents() {\n        return this._keydownEventsObservable;\n    }\n    /**\n     * Gets the current overlay configuration, which is immutable.\n     * @return {?}\n     */\n    getConfig() {\n        return this._config;\n    }\n    /**\n     * Updates the position of the overlay based on the position strategy.\n     * @return {?}\n     */\n    updatePosition() {\n        if (this._positionStrategy) {\n            this._positionStrategy.apply();\n        }\n    }\n    /**\n     * Switches to a new position strategy and updates the overlay position.\n     * @param {?} strategy\n     * @return {?}\n     */\n    updatePositionStrategy(strategy) {\n        if (strategy === this._positionStrategy) {\n            return;\n        }\n        if (this._positionStrategy) {\n            this._positionStrategy.dispose();\n        }\n        this._positionStrategy = strategy;\n        if (this.hasAttached()) {\n            strategy.attach(this);\n            this.updatePosition();\n        }\n    }\n    /**\n     * Update the size properties of the overlay.\n     * @param {?} sizeConfig\n     * @return {?}\n     */\n    updateSize(sizeConfig) {\n        this._config = Object.assign(Object.assign({}, this._config), sizeConfig);\n        this._updateElementSize();\n    }\n    /**\n     * Sets the LTR/RTL direction for the overlay.\n     * @param {?} dir\n     * @return {?}\n     */\n    setDirection(dir) {\n        this._config = Object.assign(Object.assign({}, this._config), { direction: dir });\n        this._updateElementDirection();\n    }\n    /**\n     * Add a CSS class or an array of classes to the overlay pane.\n     * @param {?} classes\n     * @return {?}\n     */\n    addPanelClass(classes) {\n        if (this._pane) {\n            this._toggleClasses(this._pane, classes, true);\n        }\n    }\n    /**\n     * Remove a CSS class or an array of classes from the overlay pane.\n     * @param {?} classes\n     * @return {?}\n     */\n    removePanelClass(classes) {\n        if (this._pane) {\n            this._toggleClasses(this._pane, classes, false);\n        }\n    }\n    /**\n     * Returns the layout direction of the overlay panel.\n     * @return {?}\n     */\n    getDirection() {\n        /** @type {?} */\n        const direction = this._config.direction;\n        if (!direction) {\n            return 'ltr';\n        }\n        return typeof direction === 'string' ? direction : direction.value;\n    }\n    /**\n     * Switches to a new scroll strategy.\n     * @param {?} strategy\n     * @return {?}\n     */\n    updateScrollStrategy(strategy) {\n        if (strategy === this._scrollStrategy) {\n            return;\n        }\n        this._disposeScrollStrategy();\n        this._scrollStrategy = strategy;\n        if (this.hasAttached()) {\n            strategy.attach(this);\n            strategy.enable();\n        }\n    }\n    /**\n     * Updates the text direction of the overlay panel.\n     * @private\n     * @return {?}\n     */\n    _updateElementDirection() {\n        this._host.setAttribute('dir', this.getDirection());\n    }\n    /**\n     * Updates the size of the overlay element based on the overlay config.\n     * @private\n     * @return {?}\n     */\n    _updateElementSize() {\n        if (!this._pane) {\n            return;\n        }\n        /** @type {?} */\n        const style = this._pane.style;\n        style.width = coerceCssPixelValue(this._config.width);\n        style.height = coerceCssPixelValue(this._config.height);\n        style.minWidth = coerceCssPixelValue(this._config.minWidth);\n        style.minHeight = coerceCssPixelValue(this._config.minHeight);\n        style.maxWidth = coerceCssPixelValue(this._config.maxWidth);\n        style.maxHeight = coerceCssPixelValue(this._config.maxHeight);\n    }\n    /**\n     * Toggles the pointer events for the overlay pane element.\n     * @private\n     * @param {?} enablePointer\n     * @return {?}\n     */\n    _togglePointerEvents(enablePointer) {\n        this._pane.style.pointerEvents = enablePointer ? 'auto' : 'none';\n    }\n    /**\n     * Attaches a backdrop for this overlay.\n     * @private\n     * @return {?}\n     */\n    _attachBackdrop() {\n        /** @type {?} */\n        const showingClass = 'cdk-overlay-backdrop-showing';\n        this._backdropElement = this._document.createElement('div');\n        this._backdropElement.classList.add('cdk-overlay-backdrop');\n        if (this._config.backdropClass) {\n            this._toggleClasses(this._backdropElement, this._config.backdropClass, true);\n        }\n        // Insert the backdrop before the pane in the DOM order,\n        // in order to handle stacked overlays properly.\n        (/** @type {?} */ (this._host.parentElement)).insertBefore(this._backdropElement, this._host);\n        // Forward backdrop clicks such that the consumer of the overlay can perform whatever\n        // action desired when such a click occurs (usually closing the overlay).\n        this._backdropElement.addEventListener('click', this._backdropClickHandler);\n        // Add class to fade-in the backdrop after one frame.\n        if (typeof requestAnimationFrame !== 'undefined') {\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                requestAnimationFrame((/**\n                 * @return {?}\n                 */\n                () => {\n                    if (this._backdropElement) {\n                        this._backdropElement.classList.add(showingClass);\n                    }\n                }));\n            }));\n        }\n        else {\n            this._backdropElement.classList.add(showingClass);\n        }\n    }\n    /**\n     * Updates the stacking order of the element, moving it to the top if necessary.\n     * This is required in cases where one overlay was detached, while another one,\n     * that should be behind it, was destroyed. The next time both of them are opened,\n     * the stacking will be wrong, because the detached element's pane will still be\n     * in its original DOM position.\n     * @private\n     * @return {?}\n     */\n    _updateStackingOrder() {\n        if (this._host.nextSibling) {\n            (/** @type {?} */ (this._host.parentNode)).appendChild(this._host);\n        }\n    }\n    /**\n     * Detaches the backdrop (if any) associated with the overlay.\n     * @return {?}\n     */\n    detachBackdrop() {\n        /** @type {?} */\n        let backdropToDetach = this._backdropElement;\n        if (!backdropToDetach) {\n            return;\n        }\n        /** @type {?} */\n        let timeoutId;\n        /** @type {?} */\n        let finishDetach = (/**\n         * @return {?}\n         */\n        () => {\n            // It may not be attached to anything in certain cases (e.g. unit tests).\n            if (backdropToDetach) {\n                backdropToDetach.removeEventListener('click', this._backdropClickHandler);\n                backdropToDetach.removeEventListener('transitionend', finishDetach);\n                if (backdropToDetach.parentNode) {\n                    backdropToDetach.parentNode.removeChild(backdropToDetach);\n                }\n            }\n            // It is possible that a new portal has been attached to this overlay since we started\n            // removing the backdrop. If that is the case, only clear the backdrop reference if it\n            // is still the same instance that we started to remove.\n            if (this._backdropElement == backdropToDetach) {\n                this._backdropElement = null;\n            }\n            if (this._config.backdropClass) {\n                this._toggleClasses((/** @type {?} */ (backdropToDetach)), this._config.backdropClass, false);\n            }\n            clearTimeout(timeoutId);\n        });\n        backdropToDetach.classList.remove('cdk-overlay-backdrop-showing');\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            (/** @type {?} */ (backdropToDetach)).addEventListener('transitionend', finishDetach);\n        }));\n        // If the backdrop doesn't have a transition, the `transitionend` event won't fire.\n        // In this case we make it unclickable and we try to remove it after a delay.\n        backdropToDetach.style.pointerEvents = 'none';\n        // Run this outside the Angular zone because there's nothing that Angular cares about.\n        // If it were to run inside the Angular zone, every test that used Overlay would have to be\n        // either async or fakeAsync.\n        timeoutId = this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => setTimeout(finishDetach, 500)));\n    }\n    /**\n     * Toggles a single CSS class or an array of classes on an element.\n     * @private\n     * @param {?} element\n     * @param {?} cssClasses\n     * @param {?} isAdd\n     * @return {?}\n     */\n    _toggleClasses(element, cssClasses, isAdd) {\n        /** @type {?} */\n        const classList = element.classList;\n        coerceArray(cssClasses).forEach((/**\n         * @param {?} cssClass\n         * @return {?}\n         */\n        cssClass => {\n            // We can't do a spread here, because IE doesn't support setting multiple classes.\n            // Also trying to add an empty string to a DOMTokenList will throw.\n            if (cssClass) {\n                isAdd ? classList.add(cssClass) : classList.remove(cssClass);\n            }\n        }));\n    }\n    /**\n     * Detaches the overlay content next time the zone stabilizes.\n     * @private\n     * @return {?}\n     */\n    _detachContentWhenStable() {\n        // Normally we wouldn't have to explicitly run this outside the `NgZone`, however\n        // if the consumer is using `zone-patch-rxjs`, the `Subscription.unsubscribe` call will\n        // be patched to run inside the zone, which will throw us into an infinite loop.\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            // We can't remove the host here immediately, because the overlay pane's content\n            // might still be animating. This stream helps us avoid interrupting the animation\n            // by waiting for the pane to become empty.\n            /** @type {?} */\n            const subscription = this._ngZone.onStable\n                .asObservable()\n                .pipe(takeUntil(merge(this._attachments, this._detachments)))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => {\n                // Needs a couple of checks for the pane and host, because\n                // they may have been removed by the time the zone stabilizes.\n                if (!this._pane || !this._host || this._pane.children.length === 0) {\n                    if (this._pane && this._config.panelClass) {\n                        this._toggleClasses(this._pane, this._config.panelClass, false);\n                    }\n                    if (this._host && this._host.parentElement) {\n                        this._previousHostParent = this._host.parentElement;\n                        this._previousHostParent.removeChild(this._host);\n                    }\n                    subscription.unsubscribe();\n                }\n            }));\n        }));\n    }\n    /**\n     * Disposes of a scroll strategy.\n     * @private\n     * @return {?}\n     */\n    _disposeScrollStrategy() {\n        /** @type {?} */\n        const scrollStrategy = this._scrollStrategy;\n        if (scrollStrategy) {\n            scrollStrategy.disable();\n            if (scrollStrategy.detach) {\n                scrollStrategy.detach();\n            }\n        }\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._backdropElement;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._backdropClick;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._attachments;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._detachments;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._positionStrategy;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._scrollStrategy;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._locationChanges;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._backdropClickHandler;\n    /**\n     * Reference to the parent of the `_host` at the time it was detached. Used to restore\n     * the `_host` to its original position in the DOM when it gets re-attached.\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._previousHostParent;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._keydownEventsObservable;\n    /**\n     * Stream of keydown events dispatched to this overlay.\n     * @type {?}\n     */\n    OverlayRef.prototype._keydownEvents;\n    /**\n     * Amount of subscriptions to the keydown events.\n     * @type {?}\n     */\n    OverlayRef.prototype._keydownEventSubscriptions;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._portalOutlet;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._host;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._pane;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._config;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._keyboardDispatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._location;\n}\n/**\n * Size properties for an overlay.\n * @record\n */\nfunction OverlaySizeConfig() { }\nif (false) {\n    /** @type {?|undefined} */\n    OverlaySizeConfig.prototype.width;\n    /** @type {?|undefined} */\n    OverlaySizeConfig.prototype.height;\n    /** @type {?|undefined} */\n    OverlaySizeConfig.prototype.minWidth;\n    /** @type {?|undefined} */\n    OverlaySizeConfig.prototype.minHeight;\n    /** @type {?|undefined} */\n    OverlaySizeConfig.prototype.maxWidth;\n    /** @type {?|undefined} */\n    OverlaySizeConfig.prototype.maxHeight;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/position/flexible-connected-position-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// TODO: refactor clipping detection into a separate thing (part of scrolling module)\n// TODO: doesn't handle both flexible width and height when it has to scroll along both axis.\n/**\n * Class to be added to the overlay bounding box.\n * @type {?}\n */\nconst boundingBoxClass = 'cdk-overlay-connected-position-bounding-box';\n/**\n * Regex used to split a string on its CSS units.\n * @type {?}\n */\nconst cssUnitPattern = /([A-Za-z%]+)$/;\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * implicit position relative some origin element. The relative position is defined in terms of\n * a point on the origin element that is connected to a point on the overlay element. For example,\n * a basic dropdown is connecting the bottom-left corner of the origin to the top-left corner\n * of the overlay.\n */\nclass FlexibleConnectedPositionStrategy {\n    /**\n     * @param {?} connectedTo\n     * @param {?} _viewportRuler\n     * @param {?} _document\n     * @param {?} _platform\n     * @param {?} _overlayContainer\n     */\n    constructor(connectedTo, _viewportRuler, _document, _platform, _overlayContainer) {\n        this._viewportRuler = _viewportRuler;\n        this._document = _document;\n        this._platform = _platform;\n        this._overlayContainer = _overlayContainer;\n        /**\n         * Last size used for the bounding box. Used to avoid resizing the overlay after open.\n         */\n        this._lastBoundingBoxSize = { width: 0, height: 0 };\n        /**\n         * Whether the overlay was pushed in a previous positioning.\n         */\n        this._isPushed = false;\n        /**\n         * Whether the overlay can be pushed on-screen on the initial open.\n         */\n        this._canPush = true;\n        /**\n         * Whether the overlay can grow via flexible width/height after the initial open.\n         */\n        this._growAfterOpen = false;\n        /**\n         * Whether the overlay's width and height can be constrained to fit within the viewport.\n         */\n        this._hasFlexibleDimensions = true;\n        /**\n         * Whether the overlay position is locked.\n         */\n        this._positionLocked = false;\n        /**\n         * Amount of space that must be maintained between the overlay and the edge of the viewport.\n         */\n        this._viewportMargin = 0;\n        /**\n         * The Scrollable containers used to check scrollable view properties on position change.\n         */\n        this._scrollables = [];\n        /**\n         * Ordered list of preferred positions, from most to least desirable.\n         */\n        this._preferredPositions = [];\n        /**\n         * Subject that emits whenever the position changes.\n         */\n        this._positionChanges = new Subject();\n        /**\n         * Subscription to viewport size changes.\n         */\n        this._resizeSubscription = Subscription.EMPTY;\n        /**\n         * Default offset for the overlay along the x axis.\n         */\n        this._offsetX = 0;\n        /**\n         * Default offset for the overlay along the y axis.\n         */\n        this._offsetY = 0;\n        /**\n         * Keeps track of the CSS classes that the position strategy has applied on the overlay panel.\n         */\n        this._appliedPanelClasses = [];\n        /**\n         * Observable sequence of position changes.\n         */\n        this.positionChanges = this._positionChanges.asObservable();\n        this.setOrigin(connectedTo);\n    }\n    /**\n     * Ordered list of preferred positions, from most to least desirable.\n     * @return {?}\n     */\n    get positions() {\n        return this._preferredPositions;\n    }\n    /**\n     * Attaches this position strategy to an overlay.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    attach(overlayRef) {\n        if (this._overlayRef && overlayRef !== this._overlayRef) {\n            throw Error('This position strategy is already attached to an overlay');\n        }\n        this._validatePositions();\n        overlayRef.hostElement.classList.add(boundingBoxClass);\n        this._overlayRef = overlayRef;\n        this._boundingBox = overlayRef.hostElement;\n        this._pane = overlayRef.overlayElement;\n        this._isDisposed = false;\n        this._isInitialRender = true;\n        this._lastPosition = null;\n        this._resizeSubscription.unsubscribe();\n        this._resizeSubscription = this._viewportRuler.change().subscribe((/**\n         * @return {?}\n         */\n        () => {\n            // When the window is resized, we want to trigger the next reposition as if it\n            // was an initial render, in order for the strategy to pick a new optimal position,\n            // otherwise position locking will cause it to stay at the old one.\n            this._isInitialRender = true;\n            this.apply();\n        }));\n    }\n    /**\n     * Updates the position of the overlay element, using whichever preferred position relative\n     * to the origin best fits on-screen.\n     *\n     * The selection of a position goes as follows:\n     *  - If any positions fit completely within the viewport as-is,\n     *      choose the first position that does so.\n     *  - If flexible dimensions are enabled and at least one satifies the given minimum width/height,\n     *      choose the position with the greatest available size modified by the positions' weight.\n     *  - If pushing is enabled, take the position that went off-screen the least and push it\n     *      on-screen.\n     *  - If none of the previous criteria were met, use the position that goes off-screen the least.\n     * \\@docs-private\n     * @return {?}\n     */\n    apply() {\n        // We shouldn't do anything if the strategy was disposed or we're on the server.\n        if (this._isDisposed || !this._platform.isBrowser) {\n            return;\n        }\n        // If the position has been applied already (e.g. when the overlay was opened) and the\n        // consumer opted into locking in the position, re-use the old position, in order to\n        // prevent the overlay from jumping around.\n        if (!this._isInitialRender && this._positionLocked && this._lastPosition) {\n            this.reapplyLastPosition();\n            return;\n        }\n        this._clearPanelClasses();\n        this._resetOverlayElementStyles();\n        this._resetBoundingBoxStyles();\n        // We need the bounding rects for the origin and the overlay to determine how to position\n        // the overlay relative to the origin.\n        // We use the viewport rect to determine whether a position would go off-screen.\n        this._viewportRect = this._getNarrowedViewportRect();\n        this._originRect = this._getOriginRect();\n        this._overlayRect = this._pane.getBoundingClientRect();\n        /** @type {?} */\n        const originRect = this._originRect;\n        /** @type {?} */\n        const overlayRect = this._overlayRect;\n        /** @type {?} */\n        const viewportRect = this._viewportRect;\n        // Positions where the overlay will fit with flexible dimensions.\n        /** @type {?} */\n        const flexibleFits = [];\n        // Fallback if none of the preferred positions fit within the viewport.\n        /** @type {?} */\n        let fallback;\n        // Go through each of the preferred positions looking for a good fit.\n        // If a good fit is found, it will be applied immediately.\n        for (let pos of this._preferredPositions) {\n            // Get the exact (x, y) coordinate for the point-of-origin on the origin element.\n            /** @type {?} */\n            let originPoint = this._getOriginPoint(originRect, pos);\n            // From that point-of-origin, get the exact (x, y) coordinate for the top-left corner of the\n            // overlay in this position. We use the top-left corner for calculations and later translate\n            // this into an appropriate (top, left, bottom, right) style.\n            /** @type {?} */\n            let overlayPoint = this._getOverlayPoint(originPoint, overlayRect, pos);\n            // Calculate how well the overlay would fit into the viewport with this point.\n            /** @type {?} */\n            let overlayFit = this._getOverlayFit(overlayPoint, overlayRect, viewportRect, pos);\n            // If the overlay, without any further work, fits into the viewport, use this position.\n            if (overlayFit.isCompletelyWithinViewport) {\n                this._isPushed = false;\n                this._applyPosition(pos, originPoint);\n                return;\n            }\n            // If the overlay has flexible dimensions, we can use this position\n            // so long as there's enough space for the minimum dimensions.\n            if (this._canFitWithFlexibleDimensions(overlayFit, overlayPoint, viewportRect)) {\n                // Save positions where the overlay will fit with flexible dimensions. We will use these\n                // if none of the positions fit *without* flexible dimensions.\n                flexibleFits.push({\n                    position: pos,\n                    origin: originPoint,\n                    overlayRect,\n                    boundingBoxRect: this._calculateBoundingBoxRect(originPoint, pos)\n                });\n                continue;\n            }\n            // If the current preferred position does not fit on the screen, remember the position\n            // if it has more visible area on-screen than we've seen and move onto the next preferred\n            // position.\n            if (!fallback || fallback.overlayFit.visibleArea < overlayFit.visibleArea) {\n                fallback = { overlayFit, overlayPoint, originPoint, position: pos, overlayRect };\n            }\n        }\n        // If there are any positions where the overlay would fit with flexible dimensions, choose the\n        // one that has the greatest area available modified by the position's weight\n        if (flexibleFits.length) {\n            /** @type {?} */\n            let bestFit = null;\n            /** @type {?} */\n            let bestScore = -1;\n            for (const fit of flexibleFits) {\n                /** @type {?} */\n                const score = fit.boundingBoxRect.width * fit.boundingBoxRect.height * (fit.position.weight || 1);\n                if (score > bestScore) {\n                    bestScore = score;\n                    bestFit = fit;\n                }\n            }\n            this._isPushed = false;\n            this._applyPosition((/** @type {?} */ (bestFit)).position, (/** @type {?} */ (bestFit)).origin);\n            return;\n        }\n        // When none of the preferred positions fit within the viewport, take the position\n        // that went off-screen the least and attempt to push it on-screen.\n        if (this._canPush) {\n            // TODO(jelbourn): after pushing, the opening \"direction\" of the overlay might not make sense.\n            this._isPushed = true;\n            this._applyPosition((/** @type {?} */ (fallback)).position, (/** @type {?} */ (fallback)).originPoint);\n            return;\n        }\n        // All options for getting the overlay within the viewport have been exhausted, so go with the\n        // position that went off-screen the least.\n        this._applyPosition((/** @type {?} */ (fallback)).position, (/** @type {?} */ (fallback)).originPoint);\n    }\n    /**\n     * @return {?}\n     */\n    detach() {\n        this._clearPanelClasses();\n        this._lastPosition = null;\n        this._previousPushAmount = null;\n        this._resizeSubscription.unsubscribe();\n    }\n    /**\n     * Cleanup after the element gets destroyed.\n     * @return {?}\n     */\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        // We can't use `_resetBoundingBoxStyles` here, because it resets\n        // some properties to zero, rather than removing them.\n        if (this._boundingBox) {\n            extendStyles(this._boundingBox.style, (/** @type {?} */ ({\n                top: '',\n                left: '',\n                right: '',\n                bottom: '',\n                height: '',\n                width: '',\n                alignItems: '',\n                justifyContent: '',\n            })));\n        }\n        if (this._pane) {\n            this._resetOverlayElementStyles();\n        }\n        if (this._overlayRef) {\n            this._overlayRef.hostElement.classList.remove(boundingBoxClass);\n        }\n        this.detach();\n        this._positionChanges.complete();\n        this._overlayRef = this._boundingBox = (/** @type {?} */ (null));\n        this._isDisposed = true;\n    }\n    /**\n     * This re-aligns the overlay element with the trigger in its last calculated position,\n     * even if a position higher in the \"preferred positions\" list would now fit. This\n     * allows one to re-align the panel without changing the orientation of the panel.\n     * @return {?}\n     */\n    reapplyLastPosition() {\n        if (!this._isDisposed && (!this._platform || this._platform.isBrowser)) {\n            this._originRect = this._getOriginRect();\n            this._overlayRect = this._pane.getBoundingClientRect();\n            this._viewportRect = this._getNarrowedViewportRect();\n            /** @type {?} */\n            const lastPosition = this._lastPosition || this._preferredPositions[0];\n            /** @type {?} */\n            const originPoint = this._getOriginPoint(this._originRect, lastPosition);\n            this._applyPosition(lastPosition, originPoint);\n        }\n    }\n    /**\n     * Sets the list of Scrollable containers that host the origin element so that\n     * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n     * Scrollable must be an ancestor element of the strategy's origin element.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} scrollables\n     * @return {THIS}\n     */\n    withScrollableContainers(scrollables) {\n        (/** @type {?} */ (this))._scrollables = scrollables;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Adds new preferred positions.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} positions List of positions options for this overlay.\n     * @return {THIS}\n     */\n    withPositions(positions) {\n        (/** @type {?} */ (this))._preferredPositions = positions;\n        // If the last calculated position object isn't part of the positions anymore, clear\n        // it in order to avoid it being picked up if the consumer tries to re-apply.\n        if (positions.indexOf((/** @type {?} */ ((/** @type {?} */ (this))._lastPosition))) === -1) {\n            (/** @type {?} */ (this))._lastPosition = null;\n        }\n        (/** @type {?} */ (this))._validatePositions();\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets a minimum distance the overlay may be positioned to the edge of the viewport.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} margin Required margin between the overlay and the viewport edge in pixels.\n     * @return {THIS}\n     */\n    withViewportMargin(margin) {\n        (/** @type {?} */ (this))._viewportMargin = margin;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets whether the overlay's width and height can be constrained to fit within the viewport.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} flexibleDimensions\n     * @return {THIS}\n     */\n    withFlexibleDimensions(flexibleDimensions = true) {\n        (/** @type {?} */ (this))._hasFlexibleDimensions = flexibleDimensions;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets whether the overlay can grow after the initial open via flexible width/height.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} growAfterOpen\n     * @return {THIS}\n     */\n    withGrowAfterOpen(growAfterOpen = true) {\n        (/** @type {?} */ (this))._growAfterOpen = growAfterOpen;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets whether the overlay can be pushed on-screen if none of the provided positions fit.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} canPush\n     * @return {THIS}\n     */\n    withPush(canPush = true) {\n        (/** @type {?} */ (this))._canPush = canPush;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets whether the overlay's position should be locked in after it is positioned\n     * initially. When an overlay is locked in, it won't attempt to reposition itself\n     * when the position is re-applied (e.g. when the user scrolls away).\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} isLocked Whether the overlay should locked in.\n     * @return {THIS}\n     */\n    withLockedPosition(isLocked = true) {\n        (/** @type {?} */ (this))._positionLocked = isLocked;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the origin, relative to which to position the overlay.\n     * Using an element origin is useful for building components that need to be positioned\n     * relatively to a trigger (e.g. dropdown menus or tooltips), whereas using a point can be\n     * used for cases like contextual menus which open relative to the user's pointer.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} origin Reference to the new origin.\n     * @return {THIS}\n     */\n    setOrigin(origin) {\n        (/** @type {?} */ (this))._origin = origin;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the default offset for the overlay's connection point on the x-axis.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} offset New offset in the X axis.\n     * @return {THIS}\n     */\n    withDefaultOffsetX(offset) {\n        (/** @type {?} */ (this))._offsetX = offset;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the default offset for the overlay's connection point on the y-axis.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} offset New offset in the Y axis.\n     * @return {THIS}\n     */\n    withDefaultOffsetY(offset) {\n        (/** @type {?} */ (this))._offsetY = offset;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Configures that the position strategy should set a `transform-origin` on some elements\n     * inside the overlay, depending on the current position that is being applied. This is\n     * useful for the cases where the origin of an animation can change depending on the\n     * alignment of the overlay.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} selector CSS selector that will be used to find the target\n     *    elements onto which to set the transform origin.\n     * @return {THIS}\n     */\n    withTransformOriginOn(selector) {\n        (/** @type {?} */ (this))._transformOriginSelector = selector;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Gets the (x, y) coordinate of a connection point on the origin based on a relative position.\n     * @private\n     * @param {?} originRect\n     * @param {?} pos\n     * @return {?}\n     */\n    _getOriginPoint(originRect, pos) {\n        /** @type {?} */\n        let x;\n        if (pos.originX == 'center') {\n            // Note: when centering we should always use the `left`\n            // offset, otherwise the position will be wrong in RTL.\n            x = originRect.left + (originRect.width / 2);\n        }\n        else {\n            /** @type {?} */\n            const startX = this._isRtl() ? originRect.right : originRect.left;\n            /** @type {?} */\n            const endX = this._isRtl() ? originRect.left : originRect.right;\n            x = pos.originX == 'start' ? startX : endX;\n        }\n        /** @type {?} */\n        let y;\n        if (pos.originY == 'center') {\n            y = originRect.top + (originRect.height / 2);\n        }\n        else {\n            y = pos.originY == 'top' ? originRect.top : originRect.bottom;\n        }\n        return { x, y };\n    }\n    /**\n     * Gets the (x, y) coordinate of the top-left corner of the overlay given a given position and\n     * origin point to which the overlay should be connected.\n     * @private\n     * @param {?} originPoint\n     * @param {?} overlayRect\n     * @param {?} pos\n     * @return {?}\n     */\n    _getOverlayPoint(originPoint, overlayRect, pos) {\n        // Calculate the (overlayStartX, overlayStartY), the start of the\n        // potential overlay position relative to the origin point.\n        /** @type {?} */\n        let overlayStartX;\n        if (pos.overlayX == 'center') {\n            overlayStartX = -overlayRect.width / 2;\n        }\n        else if (pos.overlayX === 'start') {\n            overlayStartX = this._isRtl() ? -overlayRect.width : 0;\n        }\n        else {\n            overlayStartX = this._isRtl() ? 0 : -overlayRect.width;\n        }\n        /** @type {?} */\n        let overlayStartY;\n        if (pos.overlayY == 'center') {\n            overlayStartY = -overlayRect.height / 2;\n        }\n        else {\n            overlayStartY = pos.overlayY == 'top' ? 0 : -overlayRect.height;\n        }\n        // The (x, y) coordinates of the overlay.\n        return {\n            x: originPoint.x + overlayStartX,\n            y: originPoint.y + overlayStartY,\n        };\n    }\n    /**\n     * Gets how well an overlay at the given point will fit within the viewport.\n     * @private\n     * @param {?} point\n     * @param {?} overlay\n     * @param {?} viewport\n     * @param {?} position\n     * @return {?}\n     */\n    _getOverlayFit(point, overlay, viewport, position) {\n        let { x, y } = point;\n        /** @type {?} */\n        let offsetX = this._getOffset(position, 'x');\n        /** @type {?} */\n        let offsetY = this._getOffset(position, 'y');\n        // Account for the offsets since they could push the overlay out of the viewport.\n        if (offsetX) {\n            x += offsetX;\n        }\n        if (offsetY) {\n            y += offsetY;\n        }\n        // How much the overlay would overflow at this position, on each side.\n        /** @type {?} */\n        let leftOverflow = 0 - x;\n        /** @type {?} */\n        let rightOverflow = (x + overlay.width) - viewport.width;\n        /** @type {?} */\n        let topOverflow = 0 - y;\n        /** @type {?} */\n        let bottomOverflow = (y + overlay.height) - viewport.height;\n        // Visible parts of the element on each axis.\n        /** @type {?} */\n        let visibleWidth = this._subtractOverflows(overlay.width, leftOverflow, rightOverflow);\n        /** @type {?} */\n        let visibleHeight = this._subtractOverflows(overlay.height, topOverflow, bottomOverflow);\n        /** @type {?} */\n        let visibleArea = visibleWidth * visibleHeight;\n        return {\n            visibleArea,\n            isCompletelyWithinViewport: (overlay.width * overlay.height) === visibleArea,\n            fitsInViewportVertically: visibleHeight === overlay.height,\n            fitsInViewportHorizontally: visibleWidth == overlay.width,\n        };\n    }\n    /**\n     * Whether the overlay can fit within the viewport when it may resize either its width or height.\n     * @private\n     * @param {?} fit How well the overlay fits in the viewport at some position.\n     * @param {?} point The (x, y) coordinates of the overlat at some position.\n     * @param {?} viewport The geometry of the viewport.\n     * @return {?}\n     */\n    _canFitWithFlexibleDimensions(fit, point, viewport) {\n        if (this._hasFlexibleDimensions) {\n            /** @type {?} */\n            const availableHeight = viewport.bottom - point.y;\n            /** @type {?} */\n            const availableWidth = viewport.right - point.x;\n            /** @type {?} */\n            const minHeight = getPixelValue(this._overlayRef.getConfig().minHeight);\n            /** @type {?} */\n            const minWidth = getPixelValue(this._overlayRef.getConfig().minWidth);\n            /** @type {?} */\n            const verticalFit = fit.fitsInViewportVertically ||\n                (minHeight != null && minHeight <= availableHeight);\n            /** @type {?} */\n            const horizontalFit = fit.fitsInViewportHorizontally ||\n                (minWidth != null && minWidth <= availableWidth);\n            return verticalFit && horizontalFit;\n        }\n        return false;\n    }\n    /**\n     * Gets the point at which the overlay can be \"pushed\" on-screen. If the overlay is larger than\n     * the viewport, the top-left corner will be pushed on-screen (with overflow occuring on the\n     * right and bottom).\n     *\n     * @private\n     * @param {?} start Starting point from which the overlay is pushed.\n     * @param {?} overlay Dimensions of the overlay.\n     * @param {?} scrollPosition Current viewport scroll position.\n     * @return {?} The point at which to position the overlay after pushing. This is effectively a new\n     *     originPoint.\n     */\n    _pushOverlayOnScreen(start, overlay, scrollPosition) {\n        // If the position is locked and we've pushed the overlay already, reuse the previous push\n        // amount, rather than pushing it again. If we were to continue pushing, the element would\n        // remain in the viewport, which goes against the expectations when position locking is enabled.\n        if (this._previousPushAmount && this._positionLocked) {\n            return {\n                x: start.x + this._previousPushAmount.x,\n                y: start.y + this._previousPushAmount.y\n            };\n        }\n        /** @type {?} */\n        const viewport = this._viewportRect;\n        // Determine how much the overlay goes outside the viewport on each\n        // side, which we'll use to decide which direction to push it.\n        /** @type {?} */\n        const overflowRight = Math.max(start.x + overlay.width - viewport.right, 0);\n        /** @type {?} */\n        const overflowBottom = Math.max(start.y + overlay.height - viewport.bottom, 0);\n        /** @type {?} */\n        const overflowTop = Math.max(viewport.top - scrollPosition.top - start.y, 0);\n        /** @type {?} */\n        const overflowLeft = Math.max(viewport.left - scrollPosition.left - start.x, 0);\n        // Amount by which to push the overlay in each axis such that it remains on-screen.\n        /** @type {?} */\n        let pushX = 0;\n        /** @type {?} */\n        let pushY = 0;\n        // If the overlay fits completely within the bounds of the viewport, push it from whichever\n        // direction is goes off-screen. Otherwise, push the top-left corner such that its in the\n        // viewport and allow for the trailing end of the overlay to go out of bounds.\n        if (overlay.width <= viewport.width) {\n            pushX = overflowLeft || -overflowRight;\n        }\n        else {\n            pushX = start.x < this._viewportMargin ? (viewport.left - scrollPosition.left) - start.x : 0;\n        }\n        if (overlay.height <= viewport.height) {\n            pushY = overflowTop || -overflowBottom;\n        }\n        else {\n            pushY = start.y < this._viewportMargin ? (viewport.top - scrollPosition.top) - start.y : 0;\n        }\n        this._previousPushAmount = { x: pushX, y: pushY };\n        return {\n            x: start.x + pushX,\n            y: start.y + pushY,\n        };\n    }\n    /**\n     * Applies a computed position to the overlay and emits a position change.\n     * @private\n     * @param {?} position The position preference\n     * @param {?} originPoint The point on the origin element where the overlay is connected.\n     * @return {?}\n     */\n    _applyPosition(position, originPoint) {\n        this._setTransformOrigin(position);\n        this._setOverlayElementStyles(originPoint, position);\n        this._setBoundingBoxStyles(originPoint, position);\n        if (position.panelClass) {\n            this._addPanelClasses(position.panelClass);\n        }\n        // Save the last connected position in case the position needs to be re-calculated.\n        this._lastPosition = position;\n        // Notify that the position has been changed along with its change properties.\n        // We only emit if we've got any subscriptions, because the scroll visibility\n        // calculcations can be somewhat expensive.\n        if (this._positionChanges.observers.length) {\n            /** @type {?} */\n            const scrollableViewProperties = this._getScrollVisibility();\n            /** @type {?} */\n            const changeEvent = new ConnectedOverlayPositionChange(position, scrollableViewProperties);\n            this._positionChanges.next(changeEvent);\n        }\n        this._isInitialRender = false;\n    }\n    /**\n     * Sets the transform origin based on the configured selector and the passed-in position.\n     * @private\n     * @param {?} position\n     * @return {?}\n     */\n    _setTransformOrigin(position) {\n        if (!this._transformOriginSelector) {\n            return;\n        }\n        /** @type {?} */\n        const elements = (/** @type {?} */ (this._boundingBox)).querySelectorAll(this._transformOriginSelector);\n        /** @type {?} */\n        let xOrigin;\n        /** @type {?} */\n        let yOrigin = position.overlayY;\n        if (position.overlayX === 'center') {\n            xOrigin = 'center';\n        }\n        else if (this._isRtl()) {\n            xOrigin = position.overlayX === 'start' ? 'right' : 'left';\n        }\n        else {\n            xOrigin = position.overlayX === 'start' ? 'left' : 'right';\n        }\n        for (let i = 0; i < elements.length; i++) {\n            elements[i].style.transformOrigin = `${xOrigin} ${yOrigin}`;\n        }\n    }\n    /**\n     * Gets the position and size of the overlay's sizing container.\n     *\n     * This method does no measuring and applies no styles so that we can cheaply compute the\n     * bounds for all positions and choose the best fit based on these results.\n     * @private\n     * @param {?} origin\n     * @param {?} position\n     * @return {?}\n     */\n    _calculateBoundingBoxRect(origin, position) {\n        /** @type {?} */\n        const viewport = this._viewportRect;\n        /** @type {?} */\n        const isRtl = this._isRtl();\n        /** @type {?} */\n        let height;\n        /** @type {?} */\n        let top;\n        /** @type {?} */\n        let bottom;\n        if (position.overlayY === 'top') {\n            // Overlay is opening \"downward\" and thus is bound by the bottom viewport edge.\n            top = origin.y;\n            height = viewport.height - top + this._viewportMargin;\n        }\n        else if (position.overlayY === 'bottom') {\n            // Overlay is opening \"upward\" and thus is bound by the top viewport edge. We need to add\n            // the viewport margin back in, because the viewport rect is narrowed down to remove the\n            // margin, whereas the `origin` position is calculated based on its `ClientRect`.\n            bottom = viewport.height - origin.y + this._viewportMargin * 2;\n            height = viewport.height - bottom + this._viewportMargin;\n        }\n        else {\n            // If neither top nor bottom, it means that the overlay is vertically centered on the\n            // origin point. Note that we want the position relative to the viewport, rather than\n            // the page, which is why we don't use something like `viewport.bottom - origin.y` and\n            // `origin.y - viewport.top`.\n            /** @type {?} */\n            const smallestDistanceToViewportEdge = Math.min(viewport.bottom - origin.y + viewport.top, origin.y);\n            /** @type {?} */\n            const previousHeight = this._lastBoundingBoxSize.height;\n            height = smallestDistanceToViewportEdge * 2;\n            top = origin.y - smallestDistanceToViewportEdge;\n            if (height > previousHeight && !this._isInitialRender && !this._growAfterOpen) {\n                top = origin.y - (previousHeight / 2);\n            }\n        }\n        // The overlay is opening 'right-ward' (the content flows to the right).\n        /** @type {?} */\n        const isBoundedByRightViewportEdge = (position.overlayX === 'start' && !isRtl) ||\n            (position.overlayX === 'end' && isRtl);\n        // The overlay is opening 'left-ward' (the content flows to the left).\n        /** @type {?} */\n        const isBoundedByLeftViewportEdge = (position.overlayX === 'end' && !isRtl) ||\n            (position.overlayX === 'start' && isRtl);\n        /** @type {?} */\n        let width;\n        /** @type {?} */\n        let left;\n        /** @type {?} */\n        let right;\n        if (isBoundedByLeftViewportEdge) {\n            right = viewport.width - origin.x + this._viewportMargin;\n            width = origin.x - this._viewportMargin;\n        }\n        else if (isBoundedByRightViewportEdge) {\n            left = origin.x;\n            width = viewport.right - origin.x;\n        }\n        else {\n            // If neither start nor end, it means that the overlay is horizontally centered on the\n            // origin point. Note that we want the position relative to the viewport, rather than\n            // the page, which is why we don't use something like `viewport.right - origin.x` and\n            // `origin.x - viewport.left`.\n            /** @type {?} */\n            const smallestDistanceToViewportEdge = Math.min(viewport.right - origin.x + viewport.left, origin.x);\n            /** @type {?} */\n            const previousWidth = this._lastBoundingBoxSize.width;\n            width = smallestDistanceToViewportEdge * 2;\n            left = origin.x - smallestDistanceToViewportEdge;\n            if (width > previousWidth && !this._isInitialRender && !this._growAfterOpen) {\n                left = origin.x - (previousWidth / 2);\n            }\n        }\n        return { top: (/** @type {?} */ (top)), left: (/** @type {?} */ (left)), bottom: (/** @type {?} */ (bottom)), right: (/** @type {?} */ (right)), width, height };\n    }\n    /**\n     * Sets the position and size of the overlay's sizing wrapper. The wrapper is positioned on the\n     * origin's connection point and stetches to the bounds of the viewport.\n     *\n     * @private\n     * @param {?} origin The point on the origin element where the overlay is connected.\n     * @param {?} position The position preference\n     * @return {?}\n     */\n    _setBoundingBoxStyles(origin, position) {\n        /** @type {?} */\n        const boundingBoxRect = this._calculateBoundingBoxRect(origin, position);\n        // It's weird if the overlay *grows* while scrolling, so we take the last size into account\n        // when applying a new size.\n        if (!this._isInitialRender && !this._growAfterOpen) {\n            boundingBoxRect.height = Math.min(boundingBoxRect.height, this._lastBoundingBoxSize.height);\n            boundingBoxRect.width = Math.min(boundingBoxRect.width, this._lastBoundingBoxSize.width);\n        }\n        /** @type {?} */\n        const styles = (/** @type {?} */ ({}));\n        if (this._hasExactPosition()) {\n            styles.top = styles.left = '0';\n            styles.bottom = styles.right = styles.maxHeight = styles.maxWidth = '';\n            styles.width = styles.height = '100%';\n        }\n        else {\n            /** @type {?} */\n            const maxHeight = this._overlayRef.getConfig().maxHeight;\n            /** @type {?} */\n            const maxWidth = this._overlayRef.getConfig().maxWidth;\n            styles.height = coerceCssPixelValue(boundingBoxRect.height);\n            styles.top = coerceCssPixelValue(boundingBoxRect.top);\n            styles.bottom = coerceCssPixelValue(boundingBoxRect.bottom);\n            styles.width = coerceCssPixelValue(boundingBoxRect.width);\n            styles.left = coerceCssPixelValue(boundingBoxRect.left);\n            styles.right = coerceCssPixelValue(boundingBoxRect.right);\n            // Push the pane content towards the proper direction.\n            if (position.overlayX === 'center') {\n                styles.alignItems = 'center';\n            }\n            else {\n                styles.alignItems = position.overlayX === 'end' ? 'flex-end' : 'flex-start';\n            }\n            if (position.overlayY === 'center') {\n                styles.justifyContent = 'center';\n            }\n            else {\n                styles.justifyContent = position.overlayY === 'bottom' ? 'flex-end' : 'flex-start';\n            }\n            if (maxHeight) {\n                styles.maxHeight = coerceCssPixelValue(maxHeight);\n            }\n            if (maxWidth) {\n                styles.maxWidth = coerceCssPixelValue(maxWidth);\n            }\n        }\n        this._lastBoundingBoxSize = boundingBoxRect;\n        extendStyles((/** @type {?} */ (this._boundingBox)).style, styles);\n    }\n    /**\n     * Resets the styles for the bounding box so that a new positioning can be computed.\n     * @private\n     * @return {?}\n     */\n    _resetBoundingBoxStyles() {\n        extendStyles((/** @type {?} */ (this._boundingBox)).style, (/** @type {?} */ ({\n            top: '0',\n            left: '0',\n            right: '0',\n            bottom: '0',\n            height: '',\n            width: '',\n            alignItems: '',\n            justifyContent: '',\n        })));\n    }\n    /**\n     * Resets the styles for the overlay pane so that a new positioning can be computed.\n     * @private\n     * @return {?}\n     */\n    _resetOverlayElementStyles() {\n        extendStyles(this._pane.style, (/** @type {?} */ ({\n            top: '',\n            left: '',\n            bottom: '',\n            right: '',\n            position: '',\n            transform: '',\n        })));\n    }\n    /**\n     * Sets positioning styles to the overlay element.\n     * @private\n     * @param {?} originPoint\n     * @param {?} position\n     * @return {?}\n     */\n    _setOverlayElementStyles(originPoint, position) {\n        /** @type {?} */\n        const styles = (/** @type {?} */ ({}));\n        /** @type {?} */\n        const hasExactPosition = this._hasExactPosition();\n        /** @type {?} */\n        const hasFlexibleDimensions = this._hasFlexibleDimensions;\n        /** @type {?} */\n        const config = this._overlayRef.getConfig();\n        if (hasExactPosition) {\n            /** @type {?} */\n            const scrollPosition = this._viewportRuler.getViewportScrollPosition();\n            extendStyles(styles, this._getExactOverlayY(position, originPoint, scrollPosition));\n            extendStyles(styles, this._getExactOverlayX(position, originPoint, scrollPosition));\n        }\n        else {\n            styles.position = 'static';\n        }\n        // Use a transform to apply the offsets. We do this because the `center` positions rely on\n        // being in the normal flex flow and setting a `top` / `left` at all will completely throw\n        // off the position. We also can't use margins, because they won't have an effect in some\n        // cases where the element doesn't have anything to \"push off of\". Finally, this works\n        // better both with flexible and non-flexible positioning.\n        /** @type {?} */\n        let transformString = '';\n        /** @type {?} */\n        let offsetX = this._getOffset(position, 'x');\n        /** @type {?} */\n        let offsetY = this._getOffset(position, 'y');\n        if (offsetX) {\n            transformString += `translateX(${offsetX}px) `;\n        }\n        if (offsetY) {\n            transformString += `translateY(${offsetY}px)`;\n        }\n        styles.transform = transformString.trim();\n        // If a maxWidth or maxHeight is specified on the overlay, we remove them. We do this because\n        // we need these values to both be set to \"100%\" for the automatic flexible sizing to work.\n        // The maxHeight and maxWidth are set on the boundingBox in order to enforce the constraint.\n        // Note that this doesn't apply when we have an exact position, in which case we do want to\n        // apply them because they'll be cleared from the bounding box.\n        if (config.maxHeight) {\n            if (hasExactPosition) {\n                styles.maxHeight = coerceCssPixelValue(config.maxHeight);\n            }\n            else if (hasFlexibleDimensions) {\n                styles.maxHeight = '';\n            }\n        }\n        if (config.maxWidth) {\n            if (hasExactPosition) {\n                styles.maxWidth = coerceCssPixelValue(config.maxWidth);\n            }\n            else if (hasFlexibleDimensions) {\n                styles.maxWidth = '';\n            }\n        }\n        extendStyles(this._pane.style, styles);\n    }\n    /**\n     * Gets the exact top/bottom for the overlay when not using flexible sizing or when pushing.\n     * @private\n     * @param {?} position\n     * @param {?} originPoint\n     * @param {?} scrollPosition\n     * @return {?}\n     */\n    _getExactOverlayY(position, originPoint, scrollPosition) {\n        // Reset any existing styles. This is necessary in case the\n        // preferred position has changed since the last `apply`.\n        /** @type {?} */\n        let styles = (/** @type {?} */ ({ top: '', bottom: '' }));\n        /** @type {?} */\n        let overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n        if (this._isPushed) {\n            overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);\n        }\n        /** @type {?} */\n        let virtualKeyboardOffset = this._overlayContainer.getContainerElement().getBoundingClientRect().top;\n        // Normally this would be zero, however when the overlay is attached to an input (e.g. in an\n        // autocomplete), mobile browsers will shift everything in order to put the input in the middle\n        // of the screen and to make space for the virtual keyboard. We need to account for this offset,\n        // otherwise our positioning will be thrown off.\n        overlayPoint.y -= virtualKeyboardOffset;\n        // We want to set either `top` or `bottom` based on whether the overlay wants to appear\n        // above or below the origin and the direction in which the element will expand.\n        if (position.overlayY === 'bottom') {\n            // When using `bottom`, we adjust the y position such that it is the distance\n            // from the bottom of the viewport rather than the top.\n            /** @type {?} */\n            const documentHeight = (/** @type {?} */ (this._document.documentElement)).clientHeight;\n            styles.bottom = `${documentHeight - (overlayPoint.y + this._overlayRect.height)}px`;\n        }\n        else {\n            styles.top = coerceCssPixelValue(overlayPoint.y);\n        }\n        return styles;\n    }\n    /**\n     * Gets the exact left/right for the overlay when not using flexible sizing or when pushing.\n     * @private\n     * @param {?} position\n     * @param {?} originPoint\n     * @param {?} scrollPosition\n     * @return {?}\n     */\n    _getExactOverlayX(position, originPoint, scrollPosition) {\n        // Reset any existing styles. This is necessary in case the preferred position has\n        // changed since the last `apply`.\n        /** @type {?} */\n        let styles = (/** @type {?} */ ({ left: '', right: '' }));\n        /** @type {?} */\n        let overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n        if (this._isPushed) {\n            overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);\n        }\n        // We want to set either `left` or `right` based on whether the overlay wants to appear \"before\"\n        // or \"after\" the origin, which determines the direction in which the element will expand.\n        // For the horizontal axis, the meaning of \"before\" and \"after\" change based on whether the\n        // page is in RTL or LTR.\n        /** @type {?} */\n        let horizontalStyleProperty;\n        if (this._isRtl()) {\n            horizontalStyleProperty = position.overlayX === 'end' ? 'left' : 'right';\n        }\n        else {\n            horizontalStyleProperty = position.overlayX === 'end' ? 'right' : 'left';\n        }\n        // When we're setting `right`, we adjust the x position such that it is the distance\n        // from the right edge of the viewport rather than the left edge.\n        if (horizontalStyleProperty === 'right') {\n            /** @type {?} */\n            const documentWidth = (/** @type {?} */ (this._document.documentElement)).clientWidth;\n            styles.right = `${documentWidth - (overlayPoint.x + this._overlayRect.width)}px`;\n        }\n        else {\n            styles.left = coerceCssPixelValue(overlayPoint.x);\n        }\n        return styles;\n    }\n    /**\n     * Gets the view properties of the trigger and overlay, including whether they are clipped\n     * or completely outside the view of any of the strategy's scrollables.\n     * @private\n     * @return {?}\n     */\n    _getScrollVisibility() {\n        // Note: needs fresh rects since the position could've changed.\n        /** @type {?} */\n        const originBounds = this._getOriginRect();\n        /** @type {?} */\n        const overlayBounds = this._pane.getBoundingClientRect();\n        // TODO(jelbourn): instead of needing all of the client rects for these scrolling containers\n        // every time, we should be able to use the scrollTop of the containers if the size of those\n        // containers hasn't changed.\n        /** @type {?} */\n        const scrollContainerBounds = this._scrollables.map((/**\n         * @param {?} scrollable\n         * @return {?}\n         */\n        scrollable => {\n            return scrollable.getElementRef().nativeElement.getBoundingClientRect();\n        }));\n        return {\n            isOriginClipped: isElementClippedByScrolling(originBounds, scrollContainerBounds),\n            isOriginOutsideView: isElementScrolledOutsideView(originBounds, scrollContainerBounds),\n            isOverlayClipped: isElementClippedByScrolling(overlayBounds, scrollContainerBounds),\n            isOverlayOutsideView: isElementScrolledOutsideView(overlayBounds, scrollContainerBounds),\n        };\n    }\n    /**\n     * Subtracts the amount that an element is overflowing on an axis from its length.\n     * @private\n     * @param {?} length\n     * @param {...?} overflows\n     * @return {?}\n     */\n    _subtractOverflows(length, ...overflows) {\n        return overflows.reduce((/**\n         * @param {?} currentValue\n         * @param {?} currentOverflow\n         * @return {?}\n         */\n        (currentValue, currentOverflow) => {\n            return currentValue - Math.max(currentOverflow, 0);\n        }), length);\n    }\n    /**\n     * Narrows the given viewport rect by the current _viewportMargin.\n     * @private\n     * @return {?}\n     */\n    _getNarrowedViewportRect() {\n        // We recalculate the viewport rect here ourselves, rather than using the ViewportRuler,\n        // because we want to use the `clientWidth` and `clientHeight` as the base. The difference\n        // being that the client properties don't include the scrollbar, as opposed to `innerWidth`\n        // and `innerHeight` that do. This is necessary, because the overlay container uses\n        // 100% `width` and `height` which don't include the scrollbar either.\n        /** @type {?} */\n        const width = (/** @type {?} */ (this._document.documentElement)).clientWidth;\n        /** @type {?} */\n        const height = (/** @type {?} */ (this._document.documentElement)).clientHeight;\n        /** @type {?} */\n        const scrollPosition = this._viewportRuler.getViewportScrollPosition();\n        return {\n            top: scrollPosition.top + this._viewportMargin,\n            left: scrollPosition.left + this._viewportMargin,\n            right: scrollPosition.left + width - this._viewportMargin,\n            bottom: scrollPosition.top + height - this._viewportMargin,\n            width: width - (2 * this._viewportMargin),\n            height: height - (2 * this._viewportMargin),\n        };\n    }\n    /**\n     * Whether the we're dealing with an RTL context\n     * @private\n     * @return {?}\n     */\n    _isRtl() {\n        return this._overlayRef.getDirection() === 'rtl';\n    }\n    /**\n     * Determines whether the overlay uses exact or flexible positioning.\n     * @private\n     * @return {?}\n     */\n    _hasExactPosition() {\n        return !this._hasFlexibleDimensions || this._isPushed;\n    }\n    /**\n     * Retrieves the offset of a position along the x or y axis.\n     * @private\n     * @param {?} position\n     * @param {?} axis\n     * @return {?}\n     */\n    _getOffset(position, axis) {\n        if (axis === 'x') {\n            // We don't do something like `position['offset' + axis]` in\n            // order to avoid breking minifiers that rename properties.\n            return position.offsetX == null ? this._offsetX : position.offsetX;\n        }\n        return position.offsetY == null ? this._offsetY : position.offsetY;\n    }\n    /**\n     * Validates that the current position match the expected values.\n     * @private\n     * @return {?}\n     */\n    _validatePositions() {\n        if (!this._preferredPositions.length) {\n            throw Error('FlexibleConnectedPositionStrategy: At least one position is required.');\n        }\n        // TODO(crisbeto): remove these once Angular's template type\n        // checking is advanced enough to catch these cases.\n        this._preferredPositions.forEach((/**\n         * @param {?} pair\n         * @return {?}\n         */\n        pair => {\n            validateHorizontalPosition('originX', pair.originX);\n            validateVerticalPosition('originY', pair.originY);\n            validateHorizontalPosition('overlayX', pair.overlayX);\n            validateVerticalPosition('overlayY', pair.overlayY);\n        }));\n    }\n    /**\n     * Adds a single CSS class or an array of classes on the overlay panel.\n     * @private\n     * @param {?} cssClasses\n     * @return {?}\n     */\n    _addPanelClasses(cssClasses) {\n        if (this._pane) {\n            coerceArray(cssClasses).forEach((/**\n             * @param {?} cssClass\n             * @return {?}\n             */\n            cssClass => {\n                if (cssClass !== '' && this._appliedPanelClasses.indexOf(cssClass) === -1) {\n                    this._appliedPanelClasses.push(cssClass);\n                    this._pane.classList.add(cssClass);\n                }\n            }));\n        }\n    }\n    /**\n     * Clears the classes that the position strategy has applied from the overlay panel.\n     * @private\n     * @return {?}\n     */\n    _clearPanelClasses() {\n        if (this._pane) {\n            this._appliedPanelClasses.forEach((/**\n             * @param {?} cssClass\n             * @return {?}\n             */\n            cssClass => {\n                this._pane.classList.remove(cssClass);\n            }));\n            this._appliedPanelClasses = [];\n        }\n    }\n    /**\n     * Returns the ClientRect of the current origin.\n     * @private\n     * @return {?}\n     */\n    _getOriginRect() {\n        /** @type {?} */\n        const origin = this._origin;\n        if (origin instanceof ElementRef) {\n            return origin.nativeElement.getBoundingClientRect();\n        }\n        // Check for Element so SVG elements are also supported.\n        if (origin instanceof Element) {\n            return origin.getBoundingClientRect();\n        }\n        /** @type {?} */\n        const width = origin.width || 0;\n        /** @type {?} */\n        const height = origin.height || 0;\n        // If the origin is a point, return a client rect as if it was a 0x0 element at the point.\n        return {\n            top: origin.y,\n            bottom: origin.y + height,\n            left: origin.x,\n            right: origin.x + width,\n            height,\n            width\n        };\n    }\n}\nif (false) {\n    /**\n     * The overlay to which this strategy is attached.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._overlayRef;\n    /**\n     * Whether we're performing the very first positioning of the overlay.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._isInitialRender;\n    /**\n     * Last size used for the bounding box. Used to avoid resizing the overlay after open.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._lastBoundingBoxSize;\n    /**\n     * Whether the overlay was pushed in a previous positioning.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._isPushed;\n    /**\n     * Whether the overlay can be pushed on-screen on the initial open.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._canPush;\n    /**\n     * Whether the overlay can grow via flexible width/height after the initial open.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._growAfterOpen;\n    /**\n     * Whether the overlay's width and height can be constrained to fit within the viewport.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._hasFlexibleDimensions;\n    /**\n     * Whether the overlay position is locked.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._positionLocked;\n    /**\n     * Cached origin dimensions\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._originRect;\n    /**\n     * Cached overlay dimensions\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._overlayRect;\n    /**\n     * Cached viewport dimensions\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._viewportRect;\n    /**\n     * Amount of space that must be maintained between the overlay and the edge of the viewport.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._viewportMargin;\n    /**\n     * The Scrollable containers used to check scrollable view properties on position change.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._scrollables;\n    /**\n     * Ordered list of preferred positions, from most to least desirable.\n     * @type {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype._preferredPositions;\n    /**\n     * The origin element against which the overlay will be positioned.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._origin;\n    /**\n     * The overlay pane element.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._pane;\n    /**\n     * Whether the strategy has been disposed of already.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._isDisposed;\n    /**\n     * Parent element for the overlay panel used to constrain the overlay panel's size to fit\n     * within the viewport.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._boundingBox;\n    /**\n     * The last position to have been calculated as the best fit position.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._lastPosition;\n    /**\n     * Subject that emits whenever the position changes.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._positionChanges;\n    /**\n     * Subscription to viewport size changes.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._resizeSubscription;\n    /**\n     * Default offset for the overlay along the x axis.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._offsetX;\n    /**\n     * Default offset for the overlay along the y axis.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._offsetY;\n    /**\n     * Selector to be used when finding the elements on which to set the transform origin.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._transformOriginSelector;\n    /**\n     * Keeps track of the CSS classes that the position strategy has applied on the overlay panel.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._appliedPanelClasses;\n    /**\n     * Amount by which the overlay was pushed in each axis during the last time it was positioned.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._previousPushAmount;\n    /**\n     * Observable sequence of position changes.\n     * @type {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype.positionChanges;\n    /**\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._overlayContainer;\n}\n/**\n * A simple (x, y) coordinate.\n * @record\n */\nfunction Point() { }\nif (false) {\n    /** @type {?} */\n    Point.prototype.x;\n    /** @type {?} */\n    Point.prototype.y;\n}\n/**\n * Record of measurements for how an overlay (at a given position) fits into the viewport.\n * @record\n */\nfunction OverlayFit() { }\nif (false) {\n    /**\n     * Whether the overlay fits completely in the viewport.\n     * @type {?}\n     */\n    OverlayFit.prototype.isCompletelyWithinViewport;\n    /**\n     * Whether the overlay fits in the viewport on the y-axis.\n     * @type {?}\n     */\n    OverlayFit.prototype.fitsInViewportVertically;\n    /**\n     * Whether the overlay fits in the viewport on the x-axis.\n     * @type {?}\n     */\n    OverlayFit.prototype.fitsInViewportHorizontally;\n    /**\n     * The total visible area (in px^2) of the overlay inside the viewport.\n     * @type {?}\n     */\n    OverlayFit.prototype.visibleArea;\n}\n/**\n * Record of the measurments determining whether an overlay will fit in a specific position.\n * @record\n */\nfunction FallbackPosition() { }\nif (false) {\n    /** @type {?} */\n    FallbackPosition.prototype.position;\n    /** @type {?} */\n    FallbackPosition.prototype.originPoint;\n    /** @type {?} */\n    FallbackPosition.prototype.overlayPoint;\n    /** @type {?} */\n    FallbackPosition.prototype.overlayFit;\n    /** @type {?} */\n    FallbackPosition.prototype.overlayRect;\n}\n/**\n * Position and size of the overlay sizing wrapper for a specific position.\n * @record\n */\nfunction BoundingBoxRect() { }\nif (false) {\n    /** @type {?} */\n    BoundingBoxRect.prototype.top;\n    /** @type {?} */\n    BoundingBoxRect.prototype.left;\n    /** @type {?} */\n    BoundingBoxRect.prototype.bottom;\n    /** @type {?} */\n    BoundingBoxRect.prototype.right;\n    /** @type {?} */\n    BoundingBoxRect.prototype.height;\n    /** @type {?} */\n    BoundingBoxRect.prototype.width;\n}\n/**\n * Record of measures determining how well a given position will fit with flexible dimensions.\n * @record\n */\nfunction FlexibleFit() { }\nif (false) {\n    /** @type {?} */\n    FlexibleFit.prototype.position;\n    /** @type {?} */\n    FlexibleFit.prototype.origin;\n    /** @type {?} */\n    FlexibleFit.prototype.overlayRect;\n    /** @type {?} */\n    FlexibleFit.prototype.boundingBoxRect;\n}\n/**\n * A connected position as specified by the user.\n * @record\n */\nfunction ConnectedPosition() { }\nif (false) {\n    /** @type {?} */\n    ConnectedPosition.prototype.originX;\n    /** @type {?} */\n    ConnectedPosition.prototype.originY;\n    /** @type {?} */\n    ConnectedPosition.prototype.overlayX;\n    /** @type {?} */\n    ConnectedPosition.prototype.overlayY;\n    /** @type {?|undefined} */\n    ConnectedPosition.prototype.weight;\n    /** @type {?|undefined} */\n    ConnectedPosition.prototype.offsetX;\n    /** @type {?|undefined} */\n    ConnectedPosition.prototype.offsetY;\n    /** @type {?|undefined} */\n    ConnectedPosition.prototype.panelClass;\n}\n/**\n * Shallow-extends a stylesheet object with another stylesheet object.\n * @param {?} destination\n * @param {?} source\n * @return {?}\n */\nfunction extendStyles(destination, source) {\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            destination[key] = source[key];\n        }\n    }\n    return destination;\n}\n/**\n * Extracts the pixel value as a number from a value, if it's a number\n * or a CSS pixel string (e.g. `1337px`). Otherwise returns null.\n * @param {?} input\n * @return {?}\n */\nfunction getPixelValue(input) {\n    if (typeof input !== 'number' && input != null) {\n        const [value, units] = input.split(cssUnitPattern);\n        return (!units || units === 'px') ? parseFloat(value) : null;\n    }\n    return input || null;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/position/connected-position-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * implicit position relative to some origin element. The relative position is defined in terms of\n * a point on the origin element that is connected to a point on the overlay element. For example,\n * a basic dropdown is connecting the bottom-left corner of the origin to the top-left corner\n * of the overlay.\n * @deprecated Use `FlexibleConnectedPositionStrategy` instead.\n * \\@breaking-change 8.0.0\n */\nclass ConnectedPositionStrategy {\n    /**\n     * @param {?} originPos\n     * @param {?} overlayPos\n     * @param {?} connectedTo\n     * @param {?} viewportRuler\n     * @param {?} document\n     * @param {?} platform\n     * @param {?} overlayContainer\n     */\n    constructor(originPos, overlayPos, connectedTo, viewportRuler, document, platform, overlayContainer) {\n        /**\n         * Ordered list of preferred positions, from most to least desirable.\n         */\n        this._preferredPositions = [];\n        // Since the `ConnectedPositionStrategy` is deprecated and we don't want to maintain\n        // the extra logic, we create an instance of the positioning strategy that has some\n        // defaults that make it behave as the old position strategy and to which we'll\n        // proxy all of the API calls.\n        this._positionStrategy = new FlexibleConnectedPositionStrategy(connectedTo, viewportRuler, document, platform, overlayContainer)\n            .withFlexibleDimensions(false)\n            .withPush(false)\n            .withViewportMargin(0);\n        this.withFallbackPosition(originPos, overlayPos);\n    }\n    /**\n     * Whether the we're dealing with an RTL context\n     * @return {?}\n     */\n    get _isRtl() {\n        return this._overlayRef.getDirection() === 'rtl';\n    }\n    /**\n     * Emits an event when the connection point changes.\n     * @return {?}\n     */\n    get onPositionChange() {\n        return this._positionStrategy.positionChanges;\n    }\n    /**\n     * Ordered list of preferred positions, from most to least desirable.\n     * @return {?}\n     */\n    get positions() {\n        return this._preferredPositions;\n    }\n    /**\n     * Attach this position strategy to an overlay.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    attach(overlayRef) {\n        this._overlayRef = overlayRef;\n        this._positionStrategy.attach(overlayRef);\n        if (this._direction) {\n            overlayRef.setDirection(this._direction);\n            this._direction = null;\n        }\n    }\n    /**\n     * Disposes all resources used by the position strategy.\n     * @return {?}\n     */\n    dispose() {\n        this._positionStrategy.dispose();\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    detach() {\n        this._positionStrategy.detach();\n    }\n    /**\n     * Updates the position of the overlay element, using whichever preferred position relative\n     * to the origin fits on-screen.\n     * \\@docs-private\n     * @return {?}\n     */\n    apply() {\n        this._positionStrategy.apply();\n    }\n    /**\n     * Re-positions the overlay element with the trigger in its last calculated position,\n     * even if a position higher in the \"preferred positions\" list would now fit. This\n     * allows one to re-align the panel without changing the orientation of the panel.\n     * @return {?}\n     */\n    recalculateLastPosition() {\n        this._positionStrategy.reapplyLastPosition();\n    }\n    /**\n     * Sets the list of Scrollable containers that host the origin element so that\n     * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n     * Scrollable must be an ancestor element of the strategy's origin element.\n     * @param {?} scrollables\n     * @return {?}\n     */\n    withScrollableContainers(scrollables) {\n        this._positionStrategy.withScrollableContainers(scrollables);\n    }\n    /**\n     * Adds a new preferred fallback position.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} originPos\n     * @param {?} overlayPos\n     * @param {?=} offsetX\n     * @param {?=} offsetY\n     * @return {THIS}\n     */\n    withFallbackPosition(originPos, overlayPos, offsetX, offsetY) {\n        /** @type {?} */\n        const position = new ConnectionPositionPair(originPos, overlayPos, offsetX, offsetY);\n        (/** @type {?} */ (this))._preferredPositions.push(position);\n        (/** @type {?} */ (this))._positionStrategy.withPositions((/** @type {?} */ (this))._preferredPositions);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the layout direction so the overlay's position can be adjusted to match.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} dir New layout direction.\n     * @return {THIS}\n     */\n    withDirection(dir) {\n        // Since the direction might be declared before the strategy is attached,\n        // we save the value in a temporary property and we'll transfer it to the\n        // overlay ref on attachment.\n        if ((/** @type {?} */ (this))._overlayRef) {\n            (/** @type {?} */ (this))._overlayRef.setDirection(dir);\n        }\n        else {\n            (/** @type {?} */ (this))._direction = dir;\n        }\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets an offset for the overlay's connection point on the x-axis\n     * @template THIS\n     * @this {THIS}\n     * @param {?} offset New offset in the X axis.\n     * @return {THIS}\n     */\n    withOffsetX(offset) {\n        (/** @type {?} */ (this))._positionStrategy.withDefaultOffsetX(offset);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets an offset for the overlay's connection point on the y-axis\n     * @template THIS\n     * @this {THIS}\n     * @param {?} offset New offset in the Y axis.\n     * @return {THIS}\n     */\n    withOffsetY(offset) {\n        (/** @type {?} */ (this))._positionStrategy.withDefaultOffsetY(offset);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets whether the overlay's position should be locked in after it is positioned\n     * initially. When an overlay is locked in, it won't attempt to reposition itself\n     * when the position is re-applied (e.g. when the user scrolls away).\n     * @template THIS\n     * @this {THIS}\n     * @param {?} isLocked Whether the overlay should locked in.\n     * @return {THIS}\n     */\n    withLockedPosition(isLocked) {\n        (/** @type {?} */ (this))._positionStrategy.withLockedPosition(isLocked);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Overwrites the current set of positions with an array of new ones.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} positions Position pairs to be set on the strategy.\n     * @return {THIS}\n     */\n    withPositions(positions) {\n        (/** @type {?} */ (this))._preferredPositions = positions.slice();\n        (/** @type {?} */ (this))._positionStrategy.withPositions((/** @type {?} */ (this))._preferredPositions);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the origin element, relative to which to position the overlay.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} origin Reference to the new origin element.\n     * @return {THIS}\n     */\n    setOrigin(origin) {\n        (/** @type {?} */ (this))._positionStrategy.setOrigin(origin);\n        return (/** @type {?} */ (this));\n    }\n}\nif (false) {\n    /**\n     * Reference to the underlying position strategy to which all the API calls are proxied.\n     * \\@docs-private\n     * @type {?}\n     */\n    ConnectedPositionStrategy.prototype._positionStrategy;\n    /**\n     * The overlay to which this strategy is attached.\n     * @type {?}\n     * @private\n     */\n    ConnectedPositionStrategy.prototype._overlayRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    ConnectedPositionStrategy.prototype._direction;\n    /**\n     * Ordered list of preferred positions, from most to least desirable.\n     * @type {?}\n     */\n    ConnectedPositionStrategy.prototype._preferredPositions;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/position/global-position-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Class to be added to the overlay pane wrapper.\n * @type {?}\n */\nconst wrapperClass = 'cdk-global-overlay-wrapper';\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * explicit position relative to the browser's viewport. We use flexbox, instead of\n * transforms, in order to avoid issues with subpixel rendering which can cause the\n * element to become blurry.\n */\nclass GlobalPositionStrategy {\n    constructor() {\n        this._cssPosition = 'static';\n        this._topOffset = '';\n        this._bottomOffset = '';\n        this._leftOffset = '';\n        this._rightOffset = '';\n        this._alignItems = '';\n        this._justifyContent = '';\n        this._width = '';\n        this._height = '';\n    }\n    /**\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    attach(overlayRef) {\n        /** @type {?} */\n        const config = overlayRef.getConfig();\n        this._overlayRef = overlayRef;\n        if (this._width && !config.width) {\n            overlayRef.updateSize({ width: this._width });\n        }\n        if (this._height && !config.height) {\n            overlayRef.updateSize({ height: this._height });\n        }\n        overlayRef.hostElement.classList.add(wrapperClass);\n        this._isDisposed = false;\n    }\n    /**\n     * Sets the top position of the overlay. Clears any previously set vertical position.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} value New top offset.\n     * @return {THIS}\n     */\n    top(value = '') {\n        (/** @type {?} */ (this))._bottomOffset = '';\n        (/** @type {?} */ (this))._topOffset = value;\n        (/** @type {?} */ (this))._alignItems = 'flex-start';\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the left position of the overlay. Clears any previously set horizontal position.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} value New left offset.\n     * @return {THIS}\n     */\n    left(value = '') {\n        (/** @type {?} */ (this))._rightOffset = '';\n        (/** @type {?} */ (this))._leftOffset = value;\n        (/** @type {?} */ (this))._justifyContent = 'flex-start';\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the bottom position of the overlay. Clears any previously set vertical position.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} value New bottom offset.\n     * @return {THIS}\n     */\n    bottom(value = '') {\n        (/** @type {?} */ (this))._topOffset = '';\n        (/** @type {?} */ (this))._bottomOffset = value;\n        (/** @type {?} */ (this))._alignItems = 'flex-end';\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the right position of the overlay. Clears any previously set horizontal position.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} value New right offset.\n     * @return {THIS}\n     */\n    right(value = '') {\n        (/** @type {?} */ (this))._leftOffset = '';\n        (/** @type {?} */ (this))._rightOffset = value;\n        (/** @type {?} */ (this))._justifyContent = 'flex-end';\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the overlay width and clears any previously set width.\n     * @deprecated Pass the `width` through the `OverlayConfig`.\n     * \\@breaking-change 8.0.0\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} value New width for the overlay\n     * @return {THIS}\n     */\n    width(value = '') {\n        if ((/** @type {?} */ (this))._overlayRef) {\n            (/** @type {?} */ (this))._overlayRef.updateSize({ width: value });\n        }\n        else {\n            (/** @type {?} */ (this))._width = value;\n        }\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the overlay height and clears any previously set height.\n     * @deprecated Pass the `height` through the `OverlayConfig`.\n     * \\@breaking-change 8.0.0\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} value New height for the overlay\n     * @return {THIS}\n     */\n    height(value = '') {\n        if ((/** @type {?} */ (this))._overlayRef) {\n            (/** @type {?} */ (this))._overlayRef.updateSize({ height: value });\n        }\n        else {\n            (/** @type {?} */ (this))._height = value;\n        }\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Centers the overlay horizontally with an optional offset.\n     * Clears any previously set horizontal position.\n     *\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} offset Overlay offset from the horizontal center.\n     * @return {THIS}\n     */\n    centerHorizontally(offset = '') {\n        (/** @type {?} */ (this)).left(offset);\n        (/** @type {?} */ (this))._justifyContent = 'center';\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Centers the overlay vertically with an optional offset.\n     * Clears any previously set vertical position.\n     *\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} offset Overlay offset from the vertical center.\n     * @return {THIS}\n     */\n    centerVertically(offset = '') {\n        (/** @type {?} */ (this)).top(offset);\n        (/** @type {?} */ (this))._alignItems = 'center';\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Apply the position to the element.\n     * \\@docs-private\n     * @return {?}\n     */\n    apply() {\n        // Since the overlay ref applies the strategy asynchronously, it could\n        // have been disposed before it ends up being applied. If that is the\n        // case, we shouldn't do anything.\n        if (!this._overlayRef || !this._overlayRef.hasAttached()) {\n            return;\n        }\n        /** @type {?} */\n        const styles = this._overlayRef.overlayElement.style;\n        /** @type {?} */\n        const parentStyles = this._overlayRef.hostElement.style;\n        /** @type {?} */\n        const config = this._overlayRef.getConfig();\n        const { width, height, maxWidth, maxHeight } = config;\n        /** @type {?} */\n        const shouldBeFlushHorizontally = (width === '100%' || width === '100vw') &&\n            (!maxWidth || maxWidth === '100%' || maxWidth === '100vw');\n        /** @type {?} */\n        const shouldBeFlushVertically = (height === '100%' || height === '100vh') &&\n            (!maxHeight || maxHeight === '100%' || maxHeight === '100vh');\n        styles.position = this._cssPosition;\n        styles.marginLeft = shouldBeFlushHorizontally ? '0' : this._leftOffset;\n        styles.marginTop = shouldBeFlushVertically ? '0' : this._topOffset;\n        styles.marginBottom = this._bottomOffset;\n        styles.marginRight = this._rightOffset;\n        if (shouldBeFlushHorizontally) {\n            parentStyles.justifyContent = 'flex-start';\n        }\n        else if (this._justifyContent === 'center') {\n            parentStyles.justifyContent = 'center';\n        }\n        else if (this._overlayRef.getConfig().direction === 'rtl') {\n            // In RTL the browser will invert `flex-start` and `flex-end` automatically, but we\n            // don't want that because our positioning is explicitly `left` and `right`, hence\n            // why we do another inversion to ensure that the overlay stays in the same position.\n            // TODO: reconsider this if we add `start` and `end` methods.\n            if (this._justifyContent === 'flex-start') {\n                parentStyles.justifyContent = 'flex-end';\n            }\n            else if (this._justifyContent === 'flex-end') {\n                parentStyles.justifyContent = 'flex-start';\n            }\n        }\n        else {\n            parentStyles.justifyContent = this._justifyContent;\n        }\n        parentStyles.alignItems = shouldBeFlushVertically ? 'flex-start' : this._alignItems;\n    }\n    /**\n     * Cleans up the DOM changes from the position strategy.\n     * \\@docs-private\n     * @return {?}\n     */\n    dispose() {\n        if (this._isDisposed || !this._overlayRef) {\n            return;\n        }\n        /** @type {?} */\n        const styles = this._overlayRef.overlayElement.style;\n        /** @type {?} */\n        const parent = this._overlayRef.hostElement;\n        /** @type {?} */\n        const parentStyles = parent.style;\n        parent.classList.remove(wrapperClass);\n        parentStyles.justifyContent = parentStyles.alignItems = styles.marginTop =\n            styles.marginBottom = styles.marginLeft = styles.marginRight = styles.position = '';\n        this._overlayRef = (/** @type {?} */ (null));\n        this._isDisposed = true;\n    }\n}\nif (false) {\n    /**\n     * The overlay to which this strategy is attached.\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._overlayRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._cssPosition;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._topOffset;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._bottomOffset;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._leftOffset;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._rightOffset;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._alignItems;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._justifyContent;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._width;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._height;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._isDisposed;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/position/overlay-position-builder.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Builder for overlay position strategy.\n */\nclass OverlayPositionBuilder {\n    /**\n     * @param {?} _viewportRuler\n     * @param {?} _document\n     * @param {?} _platform\n     * @param {?} _overlayContainer\n     */\n    constructor(_viewportRuler, _document, _platform, _overlayContainer) {\n        this._viewportRuler = _viewportRuler;\n        this._document = _document;\n        this._platform = _platform;\n        this._overlayContainer = _overlayContainer;\n    }\n    /**\n     * Creates a global position strategy.\n     * @return {?}\n     */\n    global() {\n        return new GlobalPositionStrategy();\n    }\n    /**\n     * Creates a relative position strategy.\n     * @deprecated Use `flexibleConnectedTo` instead.\n     * \\@breaking-change 8.0.0\n     * @param {?} elementRef\n     * @param {?} originPos\n     * @param {?} overlayPos\n     * @return {?}\n     */\n    connectedTo(elementRef, originPos, overlayPos) {\n        return new ConnectedPositionStrategy(originPos, overlayPos, elementRef, this._viewportRuler, this._document, this._platform, this._overlayContainer);\n    }\n    /**\n     * Creates a flexible position strategy.\n     * @param {?} origin Origin relative to which to position the overlay.\n     * @return {?}\n     */\n    flexibleConnectedTo(origin) {\n        return new FlexibleConnectedPositionStrategy(origin, this._viewportRuler, this._document, this._platform, this._overlayContainer);\n    }\n}\nOverlayPositionBuilder.ɵfac = function OverlayPositionBuilder_Factory(t) { return new (t || OverlayPositionBuilder)(ɵngcc0.ɵɵinject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc2.Platform), ɵngcc0.ɵɵinject(OverlayContainer)); };\n/** @nocollapse */\nOverlayPositionBuilder.ctorParameters = () => [\n    { type: ViewportRuler },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform },\n    { type: OverlayContainer }\n];\n/** @nocollapse */ OverlayPositionBuilder.ɵprov = ɵɵdefineInjectable({ factory: function OverlayPositionBuilder_Factory() { return new OverlayPositionBuilder(ɵɵinject(ViewportRuler), ɵɵinject(DOCUMENT), ɵɵinject(Platform), ɵɵinject(OverlayContainer)); }, token: OverlayPositionBuilder, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(OverlayPositionBuilder, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.ViewportRuler }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc2.Platform }, { type: OverlayContainer }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayPositionBuilder.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayPositionBuilder.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayPositionBuilder.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayPositionBuilder.prototype._overlayContainer;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/overlay.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Next overlay unique ID.\n * @type {?}\n */\nlet nextUniqueId = 0;\n// Note that Overlay is *not* scoped to the app root because of the ComponentFactoryResolver\n// which needs to be different depending on where OverlayModule is imported.\n/**\n * Service to create Overlays. Overlays are dynamically added pieces of floating UI, meant to be\n * used as a low-level building block for other components. Dialogs, tooltips, menus,\n * selects, etc. can all be built using overlays. The service should primarily be used by authors\n * of re-usable components rather than developers building end-user applications.\n *\n * An overlay *is* a PortalOutlet, so any kind of Portal can be loaded into one.\n */\nclass Overlay {\n    /**\n     * @param {?} scrollStrategies\n     * @param {?} _overlayContainer\n     * @param {?} _componentFactoryResolver\n     * @param {?} _positionBuilder\n     * @param {?} _keyboardDispatcher\n     * @param {?} _injector\n     * @param {?} _ngZone\n     * @param {?} _document\n     * @param {?} _directionality\n     * @param {?=} _location\n     */\n    constructor(scrollStrategies, _overlayContainer, _componentFactoryResolver, _positionBuilder, _keyboardDispatcher, _injector, _ngZone, _document, _directionality, _location) {\n        this.scrollStrategies = scrollStrategies;\n        this._overlayContainer = _overlayContainer;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._positionBuilder = _positionBuilder;\n        this._keyboardDispatcher = _keyboardDispatcher;\n        this._injector = _injector;\n        this._ngZone = _ngZone;\n        this._document = _document;\n        this._directionality = _directionality;\n        this._location = _location;\n    }\n    /**\n     * Creates an overlay.\n     * @param {?=} config Configuration applied to the overlay.\n     * @return {?} Reference to the created overlay.\n     */\n    create(config) {\n        /** @type {?} */\n        const host = this._createHostElement();\n        /** @type {?} */\n        const pane = this._createPaneElement(host);\n        /** @type {?} */\n        const portalOutlet = this._createPortalOutlet(pane);\n        /** @type {?} */\n        const overlayConfig = new OverlayConfig(config);\n        overlayConfig.direction = overlayConfig.direction || this._directionality.value;\n        return new OverlayRef(portalOutlet, host, pane, overlayConfig, this._ngZone, this._keyboardDispatcher, this._document, this._location);\n    }\n    /**\n     * Gets a position builder that can be used, via fluent API,\n     * to construct and configure a position strategy.\n     * @return {?} An overlay position builder.\n     */\n    position() {\n        return this._positionBuilder;\n    }\n    /**\n     * Creates the DOM element for an overlay and appends it to the overlay container.\n     * @private\n     * @param {?} host\n     * @return {?} Newly-created pane element\n     */\n    _createPaneElement(host) {\n        /** @type {?} */\n        const pane = this._document.createElement('div');\n        pane.id = `cdk-overlay-${nextUniqueId++}`;\n        pane.classList.add('cdk-overlay-pane');\n        host.appendChild(pane);\n        return pane;\n    }\n    /**\n     * Creates the host element that wraps around an overlay\n     * and can be used for advanced positioning.\n     * @private\n     * @return {?} Newly-create host element.\n     */\n    _createHostElement() {\n        /** @type {?} */\n        const host = this._document.createElement('div');\n        this._overlayContainer.getContainerElement().appendChild(host);\n        return host;\n    }\n    /**\n     * Create a DomPortalOutlet into which the overlay content can be loaded.\n     * @private\n     * @param {?} pane The DOM element to turn into a portal outlet.\n     * @return {?} A portal outlet for the given DOM element.\n     */\n    _createPortalOutlet(pane) {\n        // We have to resolve the ApplicationRef later in order to allow people\n        // to use overlay-based providers during app initialization.\n        if (!this._appRef) {\n            this._appRef = this._injector.get(ApplicationRef);\n        }\n        return new DomPortalOutlet(pane, this._componentFactoryResolver, this._appRef, this._injector, this._document);\n    }\n}\nOverlay.ɵfac = function Overlay_Factory(t) { return new (t || Overlay)(ɵngcc0.ɵɵinject(ScrollStrategyOptions), ɵngcc0.ɵɵinject(OverlayContainer), ɵngcc0.ɵɵinject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵinject(OverlayPositionBuilder), ɵngcc0.ɵɵinject(OverlayKeyboardDispatcher), ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc3.Directionality), ɵngcc0.ɵɵinject(ɵngcc4.Location, 8)); };\nOverlay.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: Overlay, factory: Overlay.ɵfac });\n/** @nocollapse */\nOverlay.ctorParameters = () => [\n    { type: ScrollStrategyOptions },\n    { type: OverlayContainer },\n    { type: ComponentFactoryResolver },\n    { type: OverlayPositionBuilder },\n    { type: OverlayKeyboardDispatcher },\n    { type: Injector },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Directionality },\n    { type: Location, decorators: [{ type: Optional }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Overlay, [{\n        type: Injectable\n    }], function () { return [{ type: ScrollStrategyOptions }, { type: OverlayContainer }, { type: ɵngcc0.ComponentFactoryResolver }, { type: OverlayPositionBuilder }, { type: OverlayKeyboardDispatcher }, { type: ɵngcc0.Injector }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc3.Directionality }, { type: ɵngcc4.Location, decorators: [{\n                type: Optional\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._appRef;\n    /**\n     * Scrolling strategies that can be used when creating an overlay.\n     * @type {?}\n     */\n    Overlay.prototype.scrollStrategies;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._overlayContainer;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._componentFactoryResolver;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._positionBuilder;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._keyboardDispatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._injector;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._directionality;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._location;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/overlay-directives.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default set of positions for the overlay. Follows the behavior of a dropdown.\n * @type {?}\n */\nconst defaultPositionList = [\n    {\n        originX: 'start',\n        originY: 'bottom',\n        overlayX: 'start',\n        overlayY: 'top'\n    },\n    {\n        originX: 'start',\n        originY: 'top',\n        overlayX: 'start',\n        overlayY: 'bottom'\n    },\n    {\n        originX: 'end',\n        originY: 'top',\n        overlayX: 'end',\n        overlayY: 'bottom'\n    },\n    {\n        originX: 'end',\n        originY: 'bottom',\n        overlayX: 'end',\n        overlayY: 'top'\n    }\n];\n/**\n * Injection token that determines the scroll handling while the connected overlay is open.\n * @type {?}\n */\nconst CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY = new InjectionToken('cdk-connected-overlay-scroll-strategy');\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @param {?} overlay\n * @return {?}\n */\nfunction CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_FACTORY(overlay) {\n    return (/**\n     * @param {?=} config\n     * @return {?}\n     */\n    (config) => overlay.scrollStrategies.reposition(config));\n}\n/**\n * Directive applied to an element to make it usable as an origin for an Overlay using a\n * ConnectedPositionStrategy.\n */\nclass CdkOverlayOrigin {\n    /**\n     * @param {?} elementRef\n     */\n    constructor(elementRef) {\n        this.elementRef = elementRef;\n    }\n}\nCdkOverlayOrigin.ɵfac = function CdkOverlayOrigin_Factory(t) { return new (t || CdkOverlayOrigin)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkOverlayOrigin.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkOverlayOrigin, selectors: [[\"\", \"cdk-overlay-origin\", \"\"], [\"\", \"overlay-origin\", \"\"], [\"\", \"cdkOverlayOrigin\", \"\"]], exportAs: [\"cdkOverlayOrigin\"] });\n/** @nocollapse */\nCdkOverlayOrigin.ctorParameters = () => [\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkOverlayOrigin, [{\n        type: Directive,\n        args: [{\n                selector: '[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]',\n                exportAs: 'cdkOverlayOrigin'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /**\n     * Reference to the element on which the directive is applied.\n     * @type {?}\n     */\n    CdkOverlayOrigin.prototype.elementRef;\n}\n/**\n * Directive to facilitate declarative creation of an\n * Overlay using a FlexibleConnectedPositionStrategy.\n */\nclass CdkConnectedOverlay {\n    // TODO(jelbourn): inputs for size, scroll behavior, animation, etc.\n    /**\n     * @param {?} _overlay\n     * @param {?} templateRef\n     * @param {?} viewContainerRef\n     * @param {?} scrollStrategyFactory\n     * @param {?} _dir\n     */\n    constructor(_overlay, templateRef, viewContainerRef, scrollStrategyFactory, _dir) {\n        this._overlay = _overlay;\n        this._dir = _dir;\n        this._hasBackdrop = false;\n        this._lockPosition = false;\n        this._growAfterOpen = false;\n        this._flexibleDimensions = false;\n        this._push = false;\n        this._backdropSubscription = Subscription.EMPTY;\n        /**\n         * Margin between the overlay and the viewport edges.\n         */\n        this.viewportMargin = 0;\n        /**\n         * Whether the overlay is open.\n         */\n        this.open = false;\n        /**\n         * Event emitted when the backdrop is clicked.\n         */\n        this.backdropClick = new EventEmitter();\n        /**\n         * Event emitted when the position has changed.\n         */\n        this.positionChange = new EventEmitter();\n        /**\n         * Event emitted when the overlay has been attached.\n         */\n        this.attach = new EventEmitter();\n        /**\n         * Event emitted when the overlay has been detached.\n         */\n        this.detach = new EventEmitter();\n        /**\n         * Emits when there are keyboard events that are targeted at the overlay.\n         */\n        this.overlayKeydown = new EventEmitter();\n        this._templatePortal = new TemplatePortal(templateRef, viewContainerRef);\n        this._scrollStrategyFactory = scrollStrategyFactory;\n        this.scrollStrategy = this._scrollStrategyFactory();\n    }\n    /**\n     * The offset in pixels for the overlay connection point on the x-axis\n     * @return {?}\n     */\n    get offsetX() { return this._offsetX; }\n    /**\n     * @param {?} offsetX\n     * @return {?}\n     */\n    set offsetX(offsetX) {\n        this._offsetX = offsetX;\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n        }\n    }\n    /**\n     * The offset in pixels for the overlay connection point on the y-axis\n     * @return {?}\n     */\n    get offsetY() { return this._offsetY; }\n    /**\n     * @param {?} offsetY\n     * @return {?}\n     */\n    set offsetY(offsetY) {\n        this._offsetY = offsetY;\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n        }\n    }\n    /**\n     * Whether or not the overlay should attach a backdrop.\n     * @return {?}\n     */\n    get hasBackdrop() { return this._hasBackdrop; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hasBackdrop(value) { this._hasBackdrop = coerceBooleanProperty(value); }\n    /**\n     * Whether or not the overlay should be locked when scrolling.\n     * @return {?}\n     */\n    get lockPosition() { return this._lockPosition; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set lockPosition(value) { this._lockPosition = coerceBooleanProperty(value); }\n    /**\n     * Whether the overlay's width and height can be constrained to fit within the viewport.\n     * @return {?}\n     */\n    get flexibleDimensions() { return this._flexibleDimensions; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set flexibleDimensions(value) {\n        this._flexibleDimensions = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the overlay can grow after the initial open when flexible positioning is turned on.\n     * @return {?}\n     */\n    get growAfterOpen() { return this._growAfterOpen; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set growAfterOpen(value) { this._growAfterOpen = coerceBooleanProperty(value); }\n    /**\n     * Whether the overlay can be pushed on-screen if none of the provided positions fit.\n     * @return {?}\n     */\n    get push() { return this._push; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set push(value) { this._push = coerceBooleanProperty(value); }\n    /**\n     * The associated overlay reference.\n     * @return {?}\n     */\n    get overlayRef() {\n        return this._overlayRef;\n    }\n    /**\n     * The element's layout direction.\n     * @return {?}\n     */\n    get dir() {\n        return this._dir ? this._dir.value : 'ltr';\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n        }\n        this._backdropSubscription.unsubscribe();\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n            this._overlayRef.updateSize({\n                width: this.width,\n                minWidth: this.minWidth,\n                height: this.height,\n                minHeight: this.minHeight,\n            });\n            if (changes['origin'] && this.open) {\n                this._position.apply();\n            }\n        }\n        if (changes['open']) {\n            this.open ? this._attachOverlay() : this._detachOverlay();\n        }\n    }\n    /**\n     * Creates an overlay\n     * @private\n     * @return {?}\n     */\n    _createOverlay() {\n        if (!this.positions || !this.positions.length) {\n            this.positions = defaultPositionList;\n        }\n        this._overlayRef = this._overlay.create(this._buildConfig());\n        this._overlayRef.keydownEvents().subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            this.overlayKeydown.next(event);\n            if (event.keyCode === ESCAPE && !hasModifierKey(event)) {\n                event.preventDefault();\n                this._detachOverlay();\n            }\n        }));\n    }\n    /**\n     * Builds the overlay config based on the directive's inputs\n     * @private\n     * @return {?}\n     */\n    _buildConfig() {\n        /** @type {?} */\n        const positionStrategy = this._position =\n            this.positionStrategy || this._createPositionStrategy();\n        /** @type {?} */\n        const overlayConfig = new OverlayConfig({\n            direction: this._dir,\n            positionStrategy,\n            scrollStrategy: this.scrollStrategy,\n            hasBackdrop: this.hasBackdrop\n        });\n        if (this.width || this.width === 0) {\n            overlayConfig.width = this.width;\n        }\n        if (this.height || this.height === 0) {\n            overlayConfig.height = this.height;\n        }\n        if (this.minWidth || this.minWidth === 0) {\n            overlayConfig.minWidth = this.minWidth;\n        }\n        if (this.minHeight || this.minHeight === 0) {\n            overlayConfig.minHeight = this.minHeight;\n        }\n        if (this.backdropClass) {\n            overlayConfig.backdropClass = this.backdropClass;\n        }\n        if (this.panelClass) {\n            overlayConfig.panelClass = this.panelClass;\n        }\n        return overlayConfig;\n    }\n    /**\n     * Updates the state of a position strategy, based on the values of the directive inputs.\n     * @private\n     * @param {?} positionStrategy\n     * @return {?}\n     */\n    _updatePositionStrategy(positionStrategy) {\n        /** @type {?} */\n        const positions = this.positions.map((/**\n         * @param {?} currentPosition\n         * @return {?}\n         */\n        currentPosition => ({\n            originX: currentPosition.originX,\n            originY: currentPosition.originY,\n            overlayX: currentPosition.overlayX,\n            overlayY: currentPosition.overlayY,\n            offsetX: currentPosition.offsetX || this.offsetX,\n            offsetY: currentPosition.offsetY || this.offsetY,\n            panelClass: currentPosition.panelClass || undefined,\n        })));\n        return positionStrategy\n            .setOrigin(this.origin.elementRef)\n            .withPositions(positions)\n            .withFlexibleDimensions(this.flexibleDimensions)\n            .withPush(this.push)\n            .withGrowAfterOpen(this.growAfterOpen)\n            .withViewportMargin(this.viewportMargin)\n            .withLockedPosition(this.lockPosition)\n            .withTransformOriginOn(this.transformOriginSelector);\n    }\n    /**\n     * Returns the position strategy of the overlay to be set on the overlay config\n     * @private\n     * @return {?}\n     */\n    _createPositionStrategy() {\n        /** @type {?} */\n        const strategy = this._overlay.position().flexibleConnectedTo(this.origin.elementRef);\n        this._updatePositionStrategy(strategy);\n        strategy.positionChanges.subscribe((/**\n         * @param {?} p\n         * @return {?}\n         */\n        p => this.positionChange.emit(p)));\n        return strategy;\n    }\n    /**\n     * Attaches the overlay and subscribes to backdrop clicks if backdrop exists\n     * @private\n     * @return {?}\n     */\n    _attachOverlay() {\n        if (!this._overlayRef) {\n            this._createOverlay();\n        }\n        else {\n            // Update the overlay size, in case the directive's inputs have changed\n            this._overlayRef.getConfig().hasBackdrop = this.hasBackdrop;\n        }\n        if (!this._overlayRef.hasAttached()) {\n            this._overlayRef.attach(this._templatePortal);\n            this.attach.emit();\n        }\n        if (this.hasBackdrop) {\n            this._backdropSubscription = this._overlayRef.backdropClick().subscribe((/**\n             * @param {?} event\n             * @return {?}\n             */\n            event => {\n                this.backdropClick.emit(event);\n            }));\n        }\n        else {\n            this._backdropSubscription.unsubscribe();\n        }\n    }\n    /**\n     * Detaches the overlay and unsubscribes to backdrop clicks if backdrop exists\n     * @private\n     * @return {?}\n     */\n    _detachOverlay() {\n        if (this._overlayRef) {\n            this._overlayRef.detach();\n            this.detach.emit();\n        }\n        this._backdropSubscription.unsubscribe();\n    }\n}\nCdkConnectedOverlay.ɵfac = function CdkConnectedOverlay_Factory(t) { return new (t || CdkConnectedOverlay)(ɵngcc0.ɵɵdirectiveInject(Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8)); };\nCdkConnectedOverlay.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkConnectedOverlay, selectors: [[\"\", \"cdk-connected-overlay\", \"\"], [\"\", \"connected-overlay\", \"\"], [\"\", \"cdkConnectedOverlay\", \"\"]], inputs: { viewportMargin: [\"cdkConnectedOverlayViewportMargin\", \"viewportMargin\"], open: [\"cdkConnectedOverlayOpen\", \"open\"], scrollStrategy: [\"cdkConnectedOverlayScrollStrategy\", \"scrollStrategy\"], offsetX: [\"cdkConnectedOverlayOffsetX\", \"offsetX\"], offsetY: [\"cdkConnectedOverlayOffsetY\", \"offsetY\"], hasBackdrop: [\"cdkConnectedOverlayHasBackdrop\", \"hasBackdrop\"], lockPosition: [\"cdkConnectedOverlayLockPosition\", \"lockPosition\"], flexibleDimensions: [\"cdkConnectedOverlayFlexibleDimensions\", \"flexibleDimensions\"], growAfterOpen: [\"cdkConnectedOverlayGrowAfterOpen\", \"growAfterOpen\"], push: [\"cdkConnectedOverlayPush\", \"push\"], positions: [\"cdkConnectedOverlayPositions\", \"positions\"], origin: [\"cdkConnectedOverlayOrigin\", \"origin\"], positionStrategy: [\"cdkConnectedOverlayPositionStrategy\", \"positionStrategy\"], width: [\"cdkConnectedOverlayWidth\", \"width\"], height: [\"cdkConnectedOverlayHeight\", \"height\"], minWidth: [\"cdkConnectedOverlayMinWidth\", \"minWidth\"], minHeight: [\"cdkConnectedOverlayMinHeight\", \"minHeight\"], backdropClass: [\"cdkConnectedOverlayBackdropClass\", \"backdropClass\"], panelClass: [\"cdkConnectedOverlayPanelClass\", \"panelClass\"], transformOriginSelector: [\"cdkConnectedOverlayTransformOriginOn\", \"transformOriginSelector\"] }, outputs: { backdropClick: \"backdropClick\", positionChange: \"positionChange\", attach: \"attach\", detach: \"detach\", overlayKeydown: \"overlayKeydown\" }, exportAs: [\"cdkConnectedOverlay\"], features: [ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nCdkConnectedOverlay.ctorParameters = () => [\n    { type: Overlay },\n    { type: TemplateRef },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nCdkConnectedOverlay.propDecorators = {\n    origin: [{ type: Input, args: ['cdkConnectedOverlayOrigin',] }],\n    positions: [{ type: Input, args: ['cdkConnectedOverlayPositions',] }],\n    positionStrategy: [{ type: Input, args: ['cdkConnectedOverlayPositionStrategy',] }],\n    offsetX: [{ type: Input, args: ['cdkConnectedOverlayOffsetX',] }],\n    offsetY: [{ type: Input, args: ['cdkConnectedOverlayOffsetY',] }],\n    width: [{ type: Input, args: ['cdkConnectedOverlayWidth',] }],\n    height: [{ type: Input, args: ['cdkConnectedOverlayHeight',] }],\n    minWidth: [{ type: Input, args: ['cdkConnectedOverlayMinWidth',] }],\n    minHeight: [{ type: Input, args: ['cdkConnectedOverlayMinHeight',] }],\n    backdropClass: [{ type: Input, args: ['cdkConnectedOverlayBackdropClass',] }],\n    panelClass: [{ type: Input, args: ['cdkConnectedOverlayPanelClass',] }],\n    viewportMargin: [{ type: Input, args: ['cdkConnectedOverlayViewportMargin',] }],\n    scrollStrategy: [{ type: Input, args: ['cdkConnectedOverlayScrollStrategy',] }],\n    open: [{ type: Input, args: ['cdkConnectedOverlayOpen',] }],\n    transformOriginSelector: [{ type: Input, args: ['cdkConnectedOverlayTransformOriginOn',] }],\n    hasBackdrop: [{ type: Input, args: ['cdkConnectedOverlayHasBackdrop',] }],\n    lockPosition: [{ type: Input, args: ['cdkConnectedOverlayLockPosition',] }],\n    flexibleDimensions: [{ type: Input, args: ['cdkConnectedOverlayFlexibleDimensions',] }],\n    growAfterOpen: [{ type: Input, args: ['cdkConnectedOverlayGrowAfterOpen',] }],\n    push: [{ type: Input, args: ['cdkConnectedOverlayPush',] }],\n    backdropClick: [{ type: Output }],\n    positionChange: [{ type: Output }],\n    attach: [{ type: Output }],\n    detach: [{ type: Output }],\n    overlayKeydown: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkConnectedOverlay, [{\n        type: Directive,\n        args: [{\n                selector: '[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]',\n                exportAs: 'cdkConnectedOverlay'\n            }]\n    }], function () { return [{ type: Overlay }, { type: ɵngcc0.TemplateRef }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { viewportMargin: [{\n            type: Input,\n            args: ['cdkConnectedOverlayViewportMargin']\n        }], open: [{\n            type: Input,\n            args: ['cdkConnectedOverlayOpen']\n        }], backdropClick: [{\n            type: Output\n        }], positionChange: [{\n            type: Output\n        }], attach: [{\n            type: Output\n        }], detach: [{\n            type: Output\n        }], overlayKeydown: [{\n            type: Output\n        }], scrollStrategy: [{\n            type: Input,\n            args: ['cdkConnectedOverlayScrollStrategy']\n        }], offsetX: [{\n            type: Input,\n            args: ['cdkConnectedOverlayOffsetX']\n        }], offsetY: [{\n            type: Input,\n            args: ['cdkConnectedOverlayOffsetY']\n        }], hasBackdrop: [{\n            type: Input,\n            args: ['cdkConnectedOverlayHasBackdrop']\n        }], lockPosition: [{\n            type: Input,\n            args: ['cdkConnectedOverlayLockPosition']\n        }], flexibleDimensions: [{\n            type: Input,\n            args: ['cdkConnectedOverlayFlexibleDimensions']\n        }], growAfterOpen: [{\n            type: Input,\n            args: ['cdkConnectedOverlayGrowAfterOpen']\n        }], push: [{\n            type: Input,\n            args: ['cdkConnectedOverlayPush']\n        }], positions: [{\n            type: Input,\n            args: ['cdkConnectedOverlayPositions']\n        }], origin: [{\n            type: Input,\n            args: ['cdkConnectedOverlayOrigin']\n        }], positionStrategy: [{\n            type: Input,\n            args: ['cdkConnectedOverlayPositionStrategy']\n        }], width: [{\n            type: Input,\n            args: ['cdkConnectedOverlayWidth']\n        }], height: [{\n            type: Input,\n            args: ['cdkConnectedOverlayHeight']\n        }], minWidth: [{\n            type: Input,\n            args: ['cdkConnectedOverlayMinWidth']\n        }], minHeight: [{\n            type: Input,\n            args: ['cdkConnectedOverlayMinHeight']\n        }], backdropClass: [{\n            type: Input,\n            args: ['cdkConnectedOverlayBackdropClass']\n        }], panelClass: [{\n            type: Input,\n            args: ['cdkConnectedOverlayPanelClass']\n        }], transformOriginSelector: [{\n            type: Input,\n            args: ['cdkConnectedOverlayTransformOriginOn']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkConnectedOverlay.ngAcceptInputType_hasBackdrop;\n    /** @type {?} */\n    CdkConnectedOverlay.ngAcceptInputType_lockPosition;\n    /** @type {?} */\n    CdkConnectedOverlay.ngAcceptInputType_flexibleDimensions;\n    /** @type {?} */\n    CdkConnectedOverlay.ngAcceptInputType_growAfterOpen;\n    /** @type {?} */\n    CdkConnectedOverlay.ngAcceptInputType_push;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._overlayRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._templatePortal;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._hasBackdrop;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._lockPosition;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._growAfterOpen;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._flexibleDimensions;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._push;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._backdropSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._offsetX;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._offsetY;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._position;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._scrollStrategyFactory;\n    /**\n     * Origin for the connected overlay.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.origin;\n    /**\n     * Registered connected position pairs.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.positions;\n    /**\n     * This input overrides the positions input if specified. It lets users pass\n     * in arbitrary positioning strategies.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.positionStrategy;\n    /**\n     * The width of the overlay panel.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.width;\n    /**\n     * The height of the overlay panel.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.height;\n    /**\n     * The min width of the overlay panel.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.minWidth;\n    /**\n     * The min height of the overlay panel.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.minHeight;\n    /**\n     * The custom class to be set on the backdrop element.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.backdropClass;\n    /**\n     * The custom class to add to the overlay pane element.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.panelClass;\n    /**\n     * Margin between the overlay and the viewport edges.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.viewportMargin;\n    /**\n     * Strategy to be used when handling scroll events while the overlay is open.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.scrollStrategy;\n    /**\n     * Whether the overlay is open.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.open;\n    /**\n     * CSS selector which to set the transform origin.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.transformOriginSelector;\n    /**\n     * Event emitted when the backdrop is clicked.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.backdropClick;\n    /**\n     * Event emitted when the position has changed.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.positionChange;\n    /**\n     * Event emitted when the overlay has been attached.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.attach;\n    /**\n     * Event emitted when the overlay has been detached.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.detach;\n    /**\n     * Emits when there are keyboard events that are targeted at the overlay.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.overlayKeydown;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._overlay;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._dir;\n}\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.reposition());\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER = {\n    provide: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/overlay-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass OverlayModule {\n}\nOverlayModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: OverlayModule });\nOverlayModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function OverlayModule_Factory(t) { return new (t || OverlayModule)(); }, providers: [\n        Overlay,\n        CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER,\n    ], imports: [[BidiModule, PortalModule, ScrollingModule],\n        ScrollingModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(OverlayModule, { declarations: function () { return [CdkConnectedOverlay,\n        CdkOverlayOrigin]; }, imports: function () { return [BidiModule, PortalModule, ScrollingModule]; }, exports: function () { return [CdkConnectedOverlay,\n        CdkOverlayOrigin,\n        ScrollingModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(OverlayModule, [{\n        type: NgModule,\n        args: [{\n                imports: [BidiModule, PortalModule, ScrollingModule],\n                exports: [CdkConnectedOverlay, CdkOverlayOrigin, ScrollingModule],\n                declarations: [CdkConnectedOverlay, CdkOverlayOrigin],\n                providers: [\n                    Overlay,\n                    CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER,\n                ]\n            }]\n    }], null, null); })();\n/**\n * @deprecated Use `OverlayModule` instead.\n * \\@breaking-change 8.0.0\n * \\@docs-private\n * @type {?}\n */\nconst OVERLAY_PROVIDERS = [\n    Overlay,\n    OverlayPositionBuilder,\n    OVERLAY_KEYBOARD_DISPATCHER_PROVIDER,\n    OVERLAY_CONTAINER_PROVIDER,\n    CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER,\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/fullscreen-overlay-container.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Alternative to OverlayContainer that supports correct displaying of overlay elements in\n * Fullscreen mode\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullScreen\n *\n * Should be provided in the root component.\n */\nclass FullscreenOverlayContainer extends OverlayContainer {\n    /**\n     * @param {?} _document\n     * @param {?=} platform\n     */\n    constructor(_document, \n    /**\n     * @deprecated `platform` parameter to become required.\n     * @breaking-change 10.0.0\n     */\n    platform) {\n        super(_document, platform);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        if (this._fullScreenEventName && this._fullScreenListener) {\n            this._document.removeEventListener(this._fullScreenEventName, this._fullScreenListener);\n        }\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n    _createContainer() {\n        super._createContainer();\n        this._adjustParentForFullscreenChange();\n        this._addFullscreenChangeListener((/**\n         * @return {?}\n         */\n        () => this._adjustParentForFullscreenChange()));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _adjustParentForFullscreenChange() {\n        if (!this._containerElement) {\n            return;\n        }\n        /** @type {?} */\n        const fullscreenElement = this.getFullscreenElement();\n        /** @type {?} */\n        const parent = fullscreenElement || this._document.body;\n        parent.appendChild(this._containerElement);\n    }\n    /**\n     * @private\n     * @param {?} fn\n     * @return {?}\n     */\n    _addFullscreenChangeListener(fn) {\n        /** @type {?} */\n        const eventName = this._getEventName();\n        if (eventName) {\n            if (this._fullScreenListener) {\n                this._document.removeEventListener(eventName, this._fullScreenListener);\n            }\n            this._document.addEventListener(eventName, fn);\n            this._fullScreenListener = fn;\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _getEventName() {\n        if (!this._fullScreenEventName) {\n            /** @type {?} */\n            const _document = (/** @type {?} */ (this._document));\n            if (_document.fullscreenEnabled) {\n                this._fullScreenEventName = 'fullscreenchange';\n            }\n            else if (_document.webkitFullscreenEnabled) {\n                this._fullScreenEventName = 'webkitfullscreenchange';\n            }\n            else if (_document.mozFullScreenEnabled) {\n                this._fullScreenEventName = 'mozfullscreenchange';\n            }\n            else if (_document.msFullscreenEnabled) {\n                this._fullScreenEventName = 'MSFullscreenChange';\n            }\n        }\n        return this._fullScreenEventName;\n    }\n    /**\n     * When the page is put into fullscreen mode, a specific element is specified.\n     * Only that element and its children are visible when in fullscreen mode.\n     * @return {?}\n     */\n    getFullscreenElement() {\n        /** @type {?} */\n        const _document = (/** @type {?} */ (this._document));\n        return _document.fullscreenElement ||\n            _document.webkitFullscreenElement ||\n            _document.mozFullScreenElement ||\n            _document.msFullscreenElement ||\n            null;\n    }\n}\nFullscreenOverlayContainer.ɵfac = function FullscreenOverlayContainer_Factory(t) { return new (t || FullscreenOverlayContainer)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc2.Platform)); };\n/** @nocollapse */\nFullscreenOverlayContainer.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform }\n];\n/** @nocollapse */ FullscreenOverlayContainer.ɵprov = ɵɵdefineInjectable({ factory: function FullscreenOverlayContainer_Factory() { return new FullscreenOverlayContainer(ɵɵinject(DOCUMENT), ɵɵinject(Platform)); }, token: FullscreenOverlayContainer, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FullscreenOverlayContainer, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc2.Platform }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    FullscreenOverlayContainer.prototype._fullScreenEventName;\n    /**\n     * @type {?}\n     * @private\n     */\n    FullscreenOverlayContainer.prototype._fullScreenListener;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BlockScrollStrategy, CdkConnectedOverlay, CdkOverlayOrigin, CloseScrollStrategy, ConnectedOverlayPositionChange, ConnectedPositionStrategy, ConnectionPositionPair, FlexibleConnectedPositionStrategy, FullscreenOverlayContainer, GlobalPositionStrategy, NoopScrollStrategy, OVERLAY_PROVIDERS, Overlay, OverlayConfig, OverlayContainer, OverlayKeyboardDispatcher, OverlayModule, OverlayPositionBuilder, OverlayRef, RepositionScrollStrategy, ScrollStrategyOptions, ScrollingVisibility, validateHorizontalPosition, validateVerticalPosition, OVERLAY_CONTAINER_PROVIDER_FACTORY as ɵangular_material_src_cdk_overlay_overlay_a, OVERLAY_CONTAINER_PROVIDER as ɵangular_material_src_cdk_overlay_overlay_b, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY as ɵangular_material_src_cdk_overlay_overlay_c, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY as ɵangular_material_src_cdk_overlay_overlay_d, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER as ɵangular_material_src_cdk_overlay_overlay_e, OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY as ɵangular_material_src_cdk_overlay_overlay_f, OVERLAY_KEYBOARD_DISPATCHER_PROVIDER as ɵangular_material_src_cdk_overlay_overlay_g };\n\n//# sourceMappingURL=overlay.js.map","import { ElementRef, Directive, TemplateRef, ViewContainerRef, EventEmitter, ComponentFactoryResolver, Inject, Output, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/portal/portal-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Throws an exception when attempting to attach a null portal to a host.\n * \\@docs-private\n * @return {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nfunction throwNullPortalError() {\n    throw Error('Must provide a portal to attach');\n}\n/**\n * Throws an exception when attempting to attach a portal to a host that is already attached.\n * \\@docs-private\n * @return {?}\n */\nfunction throwPortalAlreadyAttachedError() {\n    throw Error('Host already has a portal attached');\n}\n/**\n * Throws an exception when attempting to attach a portal to an already-disposed host.\n * \\@docs-private\n * @return {?}\n */\nfunction throwPortalOutletAlreadyDisposedError() {\n    throw Error('This PortalOutlet has already been disposed');\n}\n/**\n * Throws an exception when attempting to attach an unknown portal type.\n * \\@docs-private\n * @return {?}\n */\nfunction throwUnknownPortalTypeError() {\n    throw Error('Attempting to attach an unknown Portal type. BasePortalOutlet accepts either ' +\n        'a ComponentPortal or a TemplatePortal.');\n}\n/**\n * Throws an exception when attempting to attach a portal to a null host.\n * \\@docs-private\n * @return {?}\n */\nfunction throwNullPortalOutletError() {\n    throw Error('Attempting to attach a portal to a null PortalOutlet');\n}\n/**\n * Throws an exception when attempting to detach a portal that is not attached.\n * \\@docs-private\n * @return {?}\n */\nfunction throwNoPortalAttachedError() {\n    throw Error('Attempting to detach a portal that is not attached to a host');\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/portal/portal.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Interface that can be used to generically type a class.\n * @record\n * @template T\n */\nfunction ComponentType() { }\n/**\n * A `Portal` is something that you want to render somewhere else.\n * It can be attach to / detached from a `PortalOutlet`.\n * @abstract\n * @template T\n */\nclass Portal {\n    /**\n     * Attach this portal to a host.\n     * @param {?} host\n     * @return {?}\n     */\n    attach(host) {\n        if (host == null) {\n            throwNullPortalOutletError();\n        }\n        if (host.hasAttached()) {\n            throwPortalAlreadyAttachedError();\n        }\n        this._attachedHost = host;\n        return (/** @type {?} */ (host.attach(this)));\n    }\n    /**\n     * Detach this portal from its host\n     * @return {?}\n     */\n    detach() {\n        /** @type {?} */\n        let host = this._attachedHost;\n        if (host == null) {\n            throwNoPortalAttachedError();\n        }\n        else {\n            this._attachedHost = null;\n            host.detach();\n        }\n    }\n    /**\n     * Whether this portal is attached to a host.\n     * @return {?}\n     */\n    get isAttached() {\n        return this._attachedHost != null;\n    }\n    /**\n     * Sets the PortalOutlet reference without performing `attach()`. This is used directly by\n     * the PortalOutlet when it is performing an `attach()` or `detach()`.\n     * @param {?} host\n     * @return {?}\n     */\n    setAttachedHost(host) {\n        this._attachedHost = host;\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    Portal.prototype._attachedHost;\n}\n/**\n * A `ComponentPortal` is a portal that instantiates some Component upon attachment.\n * @template T\n */\nclass ComponentPortal extends Portal {\n    /**\n     * @param {?} component\n     * @param {?=} viewContainerRef\n     * @param {?=} injector\n     * @param {?=} componentFactoryResolver\n     */\n    constructor(component, viewContainerRef, injector, componentFactoryResolver) {\n        super();\n        this.component = component;\n        this.viewContainerRef = viewContainerRef;\n        this.injector = injector;\n        this.componentFactoryResolver = componentFactoryResolver;\n    }\n}\nif (false) {\n    /**\n     * The type of the component that will be instantiated for attachment.\n     * @type {?}\n     */\n    ComponentPortal.prototype.component;\n    /**\n     * [Optional] Where the attached component should live in Angular's *logical* component tree.\n     * This is different from where the component *renders*, which is determined by the PortalOutlet.\n     * The origin is necessary when the host is outside of the Angular application context.\n     * @type {?}\n     */\n    ComponentPortal.prototype.viewContainerRef;\n    /**\n     * [Optional] Injector used for the instantiation of the component.\n     * @type {?}\n     */\n    ComponentPortal.prototype.injector;\n    /**\n     * Alternate `ComponentFactoryResolver` to use when resolving the associated component.\n     * Defaults to using the resolver from the outlet that the portal is attached to.\n     * @type {?}\n     */\n    ComponentPortal.prototype.componentFactoryResolver;\n}\n/**\n * A `TemplatePortal` is a portal that represents some embedded template (TemplateRef).\n * @template C\n */\nclass TemplatePortal extends Portal {\n    /**\n     * @param {?} template\n     * @param {?} viewContainerRef\n     * @param {?=} context\n     */\n    constructor(template, viewContainerRef, context) {\n        super();\n        this.templateRef = template;\n        this.viewContainerRef = viewContainerRef;\n        this.context = context;\n    }\n    /**\n     * @return {?}\n     */\n    get origin() {\n        return this.templateRef.elementRef;\n    }\n    /**\n     * Attach the portal to the provided `PortalOutlet`.\n     * When a context is provided it will override the `context` property of the `TemplatePortal`\n     * instance.\n     * @param {?} host\n     * @param {?=} context\n     * @return {?}\n     */\n    attach(host, context = this.context) {\n        this.context = context;\n        return super.attach(host);\n    }\n    /**\n     * @return {?}\n     */\n    detach() {\n        this.context = undefined;\n        return super.detach();\n    }\n}\nif (false) {\n    /**\n     * The embedded template that will be used to instantiate an embedded View in the host.\n     * @type {?}\n     */\n    TemplatePortal.prototype.templateRef;\n    /**\n     * Reference to the ViewContainer into which the template will be stamped out.\n     * @type {?}\n     */\n    TemplatePortal.prototype.viewContainerRef;\n    /**\n     * Contextual data to be passed in to the embedded view.\n     * @type {?}\n     */\n    TemplatePortal.prototype.context;\n}\n/**\n * A `DomPortal` is a portal whose DOM element will be taken from its current position\n * in the DOM and moved into a portal outlet, when it is attached. On detach, the content\n * will be restored to its original position.\n * @template T\n */\nclass DomPortal extends Portal {\n    /**\n     * @param {?} element\n     */\n    constructor(element) {\n        super();\n        this.element = element instanceof ElementRef ? element.nativeElement : element;\n    }\n}\nif (false) {\n    /**\n     * DOM node hosting the portal's content.\n     * @type {?}\n     */\n    DomPortal.prototype.element;\n}\n/**\n * A `PortalOutlet` is an space that can contain a single `Portal`.\n * @record\n */\nfunction PortalOutlet() { }\nif (false) {\n    /**\n     * Attaches a portal to this outlet.\n     * @param {?} portal\n     * @return {?}\n     */\n    PortalOutlet.prototype.attach = function (portal) { };\n    /**\n     * Detaches the currently attached portal from this outlet.\n     * @return {?}\n     */\n    PortalOutlet.prototype.detach = function () { };\n    /**\n     * Performs cleanup before the outlet is destroyed.\n     * @return {?}\n     */\n    PortalOutlet.prototype.dispose = function () { };\n    /**\n     * Whether there is currently a portal attached to this outlet.\n     * @return {?}\n     */\n    PortalOutlet.prototype.hasAttached = function () { };\n}\n/**\n * Partial implementation of PortalOutlet that handles attaching\n * ComponentPortal and TemplatePortal.\n * @abstract\n */\nclass BasePortalOutlet {\n    constructor() {\n        /**\n         * Whether this host has already been permanently disposed.\n         */\n        this._isDisposed = false;\n        // @breaking-change 10.0.0 `attachDomPortal` to become a required abstract method.\n        this.attachDomPortal = null;\n    }\n    /**\n     * Whether this host has an attached portal.\n     * @return {?}\n     */\n    hasAttached() {\n        return !!this._attachedPortal;\n    }\n    /**\n     * Attaches a portal.\n     * @param {?} portal\n     * @return {?}\n     */\n    attach(portal) {\n        if (!portal) {\n            throwNullPortalError();\n        }\n        if (this.hasAttached()) {\n            throwPortalAlreadyAttachedError();\n        }\n        if (this._isDisposed) {\n            throwPortalOutletAlreadyDisposedError();\n        }\n        if (portal instanceof ComponentPortal) {\n            this._attachedPortal = portal;\n            return this.attachComponentPortal(portal);\n        }\n        else if (portal instanceof TemplatePortal) {\n            this._attachedPortal = portal;\n            return this.attachTemplatePortal(portal);\n            // @breaking-change 10.0.0 remove null check for `this.attachDomPortal`.\n        }\n        else if (this.attachDomPortal && portal instanceof DomPortal) {\n            this._attachedPortal = portal;\n            return this.attachDomPortal(portal);\n        }\n        throwUnknownPortalTypeError();\n    }\n    /**\n     * Detaches a previously attached portal.\n     * @return {?}\n     */\n    detach() {\n        if (this._attachedPortal) {\n            this._attachedPortal.setAttachedHost(null);\n            this._attachedPortal = null;\n        }\n        this._invokeDisposeFn();\n    }\n    /**\n     * Permanently dispose of this portal host.\n     * @return {?}\n     */\n    dispose() {\n        if (this.hasAttached()) {\n            this.detach();\n        }\n        this._invokeDisposeFn();\n        this._isDisposed = true;\n    }\n    /**\n     * \\@docs-private\n     * @param {?} fn\n     * @return {?}\n     */\n    setDisposeFn(fn) {\n        this._disposeFn = fn;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _invokeDisposeFn() {\n        if (this._disposeFn) {\n            this._disposeFn();\n            this._disposeFn = null;\n        }\n    }\n}\nif (false) {\n    /**\n     * The portal currently attached to the host.\n     * @type {?}\n     * @protected\n     */\n    BasePortalOutlet.prototype._attachedPortal;\n    /**\n     * A function that will permanently dispose this host.\n     * @type {?}\n     * @private\n     */\n    BasePortalOutlet.prototype._disposeFn;\n    /**\n     * Whether this host has already been permanently disposed.\n     * @type {?}\n     * @private\n     */\n    BasePortalOutlet.prototype._isDisposed;\n    /** @type {?} */\n    BasePortalOutlet.prototype.attachDomPortal;\n    /**\n     * @abstract\n     * @template T\n     * @param {?} portal\n     * @return {?}\n     */\n    BasePortalOutlet.prototype.attachComponentPortal = function (portal) { };\n    /**\n     * @abstract\n     * @template C\n     * @param {?} portal\n     * @return {?}\n     */\n    BasePortalOutlet.prototype.attachTemplatePortal = function (portal) { };\n}\n/**\n * @deprecated Use `BasePortalOutlet` instead.\n * \\@breaking-change 9.0.0\n * @abstract\n */\nclass BasePortalHost extends BasePortalOutlet {\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/portal/dom-portal-outlet.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A PortalOutlet for attaching portals to an arbitrary DOM element outside of the Angular\n * application context.\n */\nclass DomPortalOutlet extends BasePortalOutlet {\n    /**\n     * @param {?} outletElement\n     * @param {?} _componentFactoryResolver\n     * @param {?} _appRef\n     * @param {?} _defaultInjector\n     * @param {?=} _document\n     */\n    constructor(outletElement, _componentFactoryResolver, _appRef, _defaultInjector, \n    /**\n     * @deprecated `_document` Parameter to be made required.\n     * @breaking-change 10.0.0\n     */\n    _document) {\n        super();\n        this.outletElement = outletElement;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._appRef = _appRef;\n        this._defaultInjector = _defaultInjector;\n        /**\n         * Attaches a DOM portal by transferring its content into the outlet.\n         * @param portal Portal to be attached.\n         * @deprecated To be turned into a method.\n         * \\@breaking-change 10.0.0\n         */\n        this.attachDomPortal = (/**\n         * @param {?} portal\n         * @return {?}\n         */\n        (portal) => {\n            // @breaking-change 10.0.0 Remove check and error once the\n            // `_document` constructor parameter is required.\n            if (!this._document) {\n                throw Error('Cannot attach DOM portal without _document constructor parameter');\n            }\n            /** @type {?} */\n            const element = portal.element;\n            if (!element.parentNode) {\n                throw Error('DOM portal content must be attached to a parent node.');\n            }\n            // Anchor used to save the element's previous position so\n            // that we can restore it when the portal is detached.\n            /** @type {?} */\n            const anchorNode = this._document.createComment('dom-portal');\n            element.parentNode.insertBefore(anchorNode, element);\n            this.outletElement.appendChild(element);\n            super.setDisposeFn((/**\n             * @return {?}\n             */\n            () => {\n                // We can't use `replaceWith` here because IE doesn't support it.\n                if (anchorNode.parentNode) {\n                    anchorNode.parentNode.replaceChild(element, anchorNode);\n                }\n            }));\n        });\n        this._document = _document;\n    }\n    /**\n     * Attach the given ComponentPortal to DOM element using the ComponentFactoryResolver.\n     * @template T\n     * @param {?} portal Portal to be attached\n     * @return {?} Reference to the created component.\n     */\n    attachComponentPortal(portal) {\n        /** @type {?} */\n        const resolver = portal.componentFactoryResolver || this._componentFactoryResolver;\n        /** @type {?} */\n        const componentFactory = resolver.resolveComponentFactory(portal.component);\n        /** @type {?} */\n        let componentRef;\n        // If the portal specifies a ViewContainerRef, we will use that as the attachment point\n        // for the component (in terms of Angular's component tree, not rendering).\n        // When the ViewContainerRef is missing, we use the factory to create the component directly\n        // and then manually attach the view to the application.\n        if (portal.viewContainerRef) {\n            componentRef = portal.viewContainerRef.createComponent(componentFactory, portal.viewContainerRef.length, portal.injector || portal.viewContainerRef.injector);\n            this.setDisposeFn((/**\n             * @return {?}\n             */\n            () => componentRef.destroy()));\n        }\n        else {\n            componentRef = componentFactory.create(portal.injector || this._defaultInjector);\n            this._appRef.attachView(componentRef.hostView);\n            this.setDisposeFn((/**\n             * @return {?}\n             */\n            () => {\n                this._appRef.detachView(componentRef.hostView);\n                componentRef.destroy();\n            }));\n        }\n        // At this point the component has been instantiated, so we move it to the location in the DOM\n        // where we want it to be rendered.\n        this.outletElement.appendChild(this._getComponentRootNode(componentRef));\n        return componentRef;\n    }\n    /**\n     * Attaches a template portal to the DOM as an embedded view.\n     * @template C\n     * @param {?} portal Portal to be attached.\n     * @return {?} Reference to the created embedded view.\n     */\n    attachTemplatePortal(portal) {\n        /** @type {?} */\n        let viewContainer = portal.viewContainerRef;\n        /** @type {?} */\n        let viewRef = viewContainer.createEmbeddedView(portal.templateRef, portal.context);\n        viewRef.detectChanges();\n        // The method `createEmbeddedView` will add the view as a child of the viewContainer.\n        // But for the DomPortalOutlet the view can be added everywhere in the DOM\n        // (e.g Overlay Container) To move the view to the specified host element. We just\n        // re-append the existing root nodes.\n        viewRef.rootNodes.forEach((/**\n         * @param {?} rootNode\n         * @return {?}\n         */\n        rootNode => this.outletElement.appendChild(rootNode)));\n        this.setDisposeFn(((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            let index = viewContainer.indexOf(viewRef);\n            if (index !== -1) {\n                viewContainer.remove(index);\n            }\n        })));\n        // TODO(jelbourn): Return locals from view.\n        return viewRef;\n    }\n    /**\n     * Clears out a portal from the DOM.\n     * @return {?}\n     */\n    dispose() {\n        super.dispose();\n        if (this.outletElement.parentNode != null) {\n            this.outletElement.parentNode.removeChild(this.outletElement);\n        }\n    }\n    /**\n     * Gets the root HTMLElement for an instantiated component.\n     * @private\n     * @param {?} componentRef\n     * @return {?}\n     */\n    _getComponentRootNode(componentRef) {\n        return (/** @type {?} */ (((/** @type {?} */ (componentRef.hostView))).rootNodes[0]));\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    DomPortalOutlet.prototype._document;\n    /**\n     * Attaches a DOM portal by transferring its content into the outlet.\n     * \\@param portal Portal to be attached.\n     * @deprecated To be turned into a method.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     */\n    DomPortalOutlet.prototype.attachDomPortal;\n    /**\n     * Element into which the content is projected.\n     * @type {?}\n     */\n    DomPortalOutlet.prototype.outletElement;\n    /**\n     * @type {?}\n     * @private\n     */\n    DomPortalOutlet.prototype._componentFactoryResolver;\n    /**\n     * @type {?}\n     * @private\n     */\n    DomPortalOutlet.prototype._appRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    DomPortalOutlet.prototype._defaultInjector;\n}\n/**\n * @deprecated Use `DomPortalOutlet` instead.\n * \\@breaking-change 9.0.0\n */\nclass DomPortalHost extends DomPortalOutlet {\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/portal/portal-directives.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Directive version of a `TemplatePortal`. Because the directive *is* a TemplatePortal,\n * the directive instance itself can be attached to a host, enabling declarative use of portals.\n */\nclass CdkPortal extends TemplatePortal {\n    /**\n     * @param {?} templateRef\n     * @param {?} viewContainerRef\n     */\n    constructor(templateRef, viewContainerRef) {\n        super(templateRef, viewContainerRef);\n    }\n}\nCdkPortal.ɵfac = function CdkPortal_Factory(t) { return new (t || CdkPortal)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef)); };\nCdkPortal.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkPortal, selectors: [[\"\", \"cdkPortal\", \"\"]], exportAs: [\"cdkPortal\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nCdkPortal.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: ViewContainerRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkPortal, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkPortal]',\n                exportAs: 'cdkPortal'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.ViewContainerRef }]; }, null); })();\n/**\n * @deprecated Use `CdkPortal` instead.\n * \\@breaking-change 9.0.0\n */\nclass TemplatePortalDirective extends CdkPortal {\n}\nTemplatePortalDirective.ɵfac = function TemplatePortalDirective_Factory(t) { return ɵTemplatePortalDirective_BaseFactory(t || TemplatePortalDirective); };\nTemplatePortalDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: TemplatePortalDirective, selectors: [[\"\", \"cdk-portal\", \"\"], [\"\", \"portal\", \"\"]], exportAs: [\"cdkPortal\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: CdkPortal,\n                useExisting: TemplatePortalDirective\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵTemplatePortalDirective_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(TemplatePortalDirective);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TemplatePortalDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[cdk-portal], [portal]',\n                exportAs: 'cdkPortal',\n                providers: [{\n                        provide: CdkPortal,\n                        useExisting: TemplatePortalDirective\n                    }]\n            }]\n    }], null, null); })();\n/**\n * Directive version of a PortalOutlet. Because the directive *is* a PortalOutlet, portals can be\n * directly attached to it, enabling declarative use.\n *\n * Usage:\n * `<ng-template [cdkPortalOutlet]=\"greeting\"></ng-template>`\n */\nclass CdkPortalOutlet extends BasePortalOutlet {\n    /**\n     * @param {?} _componentFactoryResolver\n     * @param {?} _viewContainerRef\n     * @param {?=} _document\n     */\n    constructor(_componentFactoryResolver, _viewContainerRef, \n    /**\n     * @deprecated `_document` parameter to be made required.\n     * @breaking-change 9.0.0\n     */\n    _document) {\n        super();\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._viewContainerRef = _viewContainerRef;\n        /**\n         * Whether the portal component is initialized.\n         */\n        this._isInitialized = false;\n        /**\n         * Emits when a portal is attached to the outlet.\n         */\n        this.attached = new EventEmitter();\n        /**\n         * Attaches the given DomPortal to this PortalHost by moving all of the portal content into it.\n         * @param portal Portal to be attached.\n         * @deprecated To be turned into a method.\n         * \\@breaking-change 10.0.0\n         */\n        this.attachDomPortal = (/**\n         * @param {?} portal\n         * @return {?}\n         */\n        (portal) => {\n            // @breaking-change 9.0.0 Remove check and error once the\n            // `_document` constructor parameter is required.\n            if (!this._document) {\n                throw Error('Cannot attach DOM portal without _document constructor parameter');\n            }\n            /** @type {?} */\n            const element = portal.element;\n            if (!element.parentNode) {\n                throw Error('DOM portal content must be attached to a parent node.');\n            }\n            // Anchor used to save the element's previous position so\n            // that we can restore it when the portal is detached.\n            /** @type {?} */\n            const anchorNode = this._document.createComment('dom-portal');\n            portal.setAttachedHost(this);\n            element.parentNode.insertBefore(anchorNode, element);\n            this._getRootNode().appendChild(element);\n            super.setDisposeFn((/**\n             * @return {?}\n             */\n            () => {\n                if (anchorNode.parentNode) {\n                    (/** @type {?} */ (anchorNode.parentNode)).replaceChild(element, anchorNode);\n                }\n            }));\n        });\n        this._document = _document;\n    }\n    /**\n     * Portal associated with the Portal outlet.\n     * @return {?}\n     */\n    get portal() {\n        return this._attachedPortal;\n    }\n    /**\n     * @param {?} portal\n     * @return {?}\n     */\n    set portal(portal) {\n        // Ignore the cases where the `portal` is set to a falsy value before the lifecycle hooks have\n        // run. This handles the cases where the user might do something like `<div cdkPortalOutlet>`\n        // and attach a portal programmatically in the parent component. When Angular does the first CD\n        // round, it will fire the setter with empty string, causing the user's content to be cleared.\n        if (this.hasAttached() && !portal && !this._isInitialized) {\n            return;\n        }\n        if (this.hasAttached()) {\n            super.detach();\n        }\n        if (portal) {\n            super.attach(portal);\n        }\n        this._attachedPortal = portal;\n    }\n    /**\n     * Component or view reference that is attached to the portal.\n     * @return {?}\n     */\n    get attachedRef() {\n        return this._attachedRef;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._isInitialized = true;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        super.dispose();\n        this._attachedPortal = null;\n        this._attachedRef = null;\n    }\n    /**\n     * Attach the given ComponentPortal to this PortalOutlet using the ComponentFactoryResolver.\n     *\n     * @template T\n     * @param {?} portal Portal to be attached to the portal outlet.\n     * @return {?} Reference to the created component.\n     */\n    attachComponentPortal(portal) {\n        portal.setAttachedHost(this);\n        // If the portal specifies an origin, use that as the logical location of the component\n        // in the application tree. Otherwise use the location of this PortalOutlet.\n        /** @type {?} */\n        const viewContainerRef = portal.viewContainerRef != null ?\n            portal.viewContainerRef :\n            this._viewContainerRef;\n        /** @type {?} */\n        const resolver = portal.componentFactoryResolver || this._componentFactoryResolver;\n        /** @type {?} */\n        const componentFactory = resolver.resolveComponentFactory(portal.component);\n        /** @type {?} */\n        const ref = viewContainerRef.createComponent(componentFactory, viewContainerRef.length, portal.injector || viewContainerRef.injector);\n        // If we're using a view container that's different from the injected one (e.g. when the portal\n        // specifies its own) we need to move the component into the outlet, otherwise it'll be rendered\n        // inside of the alternate view container.\n        if (viewContainerRef !== this._viewContainerRef) {\n            this._getRootNode().appendChild(((/** @type {?} */ (ref.hostView))).rootNodes[0]);\n        }\n        super.setDisposeFn((/**\n         * @return {?}\n         */\n        () => ref.destroy()));\n        this._attachedPortal = portal;\n        this._attachedRef = ref;\n        this.attached.emit(ref);\n        return ref;\n    }\n    /**\n     * Attach the given TemplatePortal to this PortalHost as an embedded View.\n     * @template C\n     * @param {?} portal Portal to be attached.\n     * @return {?} Reference to the created embedded view.\n     */\n    attachTemplatePortal(portal) {\n        portal.setAttachedHost(this);\n        /** @type {?} */\n        const viewRef = this._viewContainerRef.createEmbeddedView(portal.templateRef, portal.context);\n        super.setDisposeFn((/**\n         * @return {?}\n         */\n        () => this._viewContainerRef.clear()));\n        this._attachedPortal = portal;\n        this._attachedRef = viewRef;\n        this.attached.emit(viewRef);\n        return viewRef;\n    }\n    /**\n     * Gets the root node of the portal outlet.\n     * @private\n     * @return {?}\n     */\n    _getRootNode() {\n        /** @type {?} */\n        const nativeElement = this._viewContainerRef.element.nativeElement;\n        // The directive could be set on a template which will result in a comment\n        // node being the root. Use the comment's parent node if that is the case.\n        return (/** @type {?} */ ((nativeElement.nodeType === nativeElement.ELEMENT_NODE ?\n            nativeElement : (/** @type {?} */ (nativeElement.parentNode)))));\n    }\n}\nCdkPortalOutlet.ɵfac = function CdkPortalOutlet_Factory(t) { return new (t || CdkPortalOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nCdkPortalOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkPortalOutlet, selectors: [[\"\", \"cdkPortalOutlet\", \"\"]], inputs: { portal: [\"cdkPortalOutlet\", \"portal\"] }, outputs: { attached: \"attached\" }, exportAs: [\"cdkPortalOutlet\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nCdkPortalOutlet.ctorParameters = () => [\n    { type: ComponentFactoryResolver },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\nCdkPortalOutlet.propDecorators = {\n    attached: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkPortalOutlet, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkPortalOutlet]',\n                exportAs: 'cdkPortalOutlet',\n                inputs: ['portal: cdkPortalOutlet']\n            }]\n    }], function () { return [{ type: ɵngcc0.ComponentFactoryResolver }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { attached: [{\n            type: Output\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkPortalOutlet.ngAcceptInputType_portal;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkPortalOutlet.prototype._document;\n    /**\n     * Whether the portal component is initialized.\n     * @type {?}\n     * @private\n     */\n    CdkPortalOutlet.prototype._isInitialized;\n    /**\n     * Reference to the currently-attached component/view ref.\n     * @type {?}\n     * @private\n     */\n    CdkPortalOutlet.prototype._attachedRef;\n    /**\n     * Emits when a portal is attached to the outlet.\n     * @type {?}\n     */\n    CdkPortalOutlet.prototype.attached;\n    /**\n     * Attaches the given DomPortal to this PortalHost by moving all of the portal content into it.\n     * \\@param portal Portal to be attached.\n     * @deprecated To be turned into a method.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     */\n    CdkPortalOutlet.prototype.attachDomPortal;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkPortalOutlet.prototype._componentFactoryResolver;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkPortalOutlet.prototype._viewContainerRef;\n}\n/**\n * @deprecated Use `CdkPortalOutlet` instead.\n * \\@breaking-change 9.0.0\n */\nclass PortalHostDirective extends CdkPortalOutlet {\n}\nPortalHostDirective.ɵfac = function PortalHostDirective_Factory(t) { return ɵPortalHostDirective_BaseFactory(t || PortalHostDirective); };\nPortalHostDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: PortalHostDirective, selectors: [[\"\", \"cdkPortalHost\", \"\"], [\"\", \"portalHost\", \"\"]], inputs: { portal: [\"cdkPortalHost\", \"portal\"] }, exportAs: [\"cdkPortalHost\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: CdkPortalOutlet,\n                useExisting: PortalHostDirective\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵPortalHostDirective_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(PortalHostDirective);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PortalHostDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkPortalHost], [portalHost]',\n                exportAs: 'cdkPortalHost',\n                inputs: ['portal: cdkPortalHost'],\n                providers: [{\n                        provide: CdkPortalOutlet,\n                        useExisting: PortalHostDirective\n                    }]\n            }]\n    }], null, null); })();\nclass PortalModule {\n}\nPortalModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: PortalModule });\nPortalModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function PortalModule_Factory(t) { return new (t || PortalModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(PortalModule, { declarations: [CdkPortal,\n        CdkPortalOutlet,\n        TemplatePortalDirective,\n        PortalHostDirective], exports: [CdkPortal,\n        CdkPortalOutlet,\n        TemplatePortalDirective,\n        PortalHostDirective] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PortalModule, [{\n        type: NgModule,\n        args: [{\n                exports: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective],\n                declarations: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/portal/portal-injector.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Custom injector to be used when providing custom\n * injection tokens to components inside a portal.\n * \\@docs-private\n */\nclass PortalInjector {\n    /**\n     * @param {?} _parentInjector\n     * @param {?} _customTokens\n     */\n    constructor(_parentInjector, _customTokens) {\n        this._parentInjector = _parentInjector;\n        this._customTokens = _customTokens;\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    get(token, notFoundValue) {\n        /** @type {?} */\n        const value = this._customTokens.get(token);\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n        return this._parentInjector.get(token, notFoundValue);\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    PortalInjector.prototype._parentInjector;\n    /**\n     * @type {?}\n     * @private\n     */\n    PortalInjector.prototype._customTokens;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/portal/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BasePortalHost, BasePortalOutlet, CdkPortal, CdkPortalOutlet, ComponentPortal, DomPortal, DomPortalHost, DomPortalOutlet, Portal, PortalHostDirective, PortalInjector, PortalModule, TemplatePortal, TemplatePortalDirective };\n\n//# sourceMappingURL=portal.js.map","import { FocusKeyManager } from '@angular/cdk/a11y';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { hasModifierKey, SPACE, ENTER, HOME, END } from '@angular/cdk/keycodes';\nimport { DOCUMENT } from '@angular/common';\nimport { Directive, ElementRef, TemplateRef, InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, Inject, forwardRef, Optional, ContentChild, ViewChild, Input, EventEmitter, ChangeDetectorRef, ContentChildren, Output, HostListener, NgModule } from '@angular/core';\nimport { Subject, of } from 'rxjs';\nimport { startWith, takeUntil } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/stepper/step-header.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\n\nfunction CdkStep_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0);\n} }\nconst _c0 = [\"*\"];\nclass CdkStepHeader {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n    /**\n     * Focuses the step header.\n     * @return {?}\n     */\n    focus() {\n        this._elementRef.nativeElement.focus();\n    }\n}\nCdkStepHeader.ɵfac = function CdkStepHeader_Factory(t) { return new (t || CdkStepHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkStepHeader.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkStepHeader, selectors: [[\"\", \"cdkStepHeader\", \"\"]], hostAttrs: [\"role\", \"tab\"] });\n/** @nocollapse */\nCdkStepHeader.ctorParameters = () => [\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkStepHeader, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkStepHeader]',\n                host: {\n                    'role': 'tab'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkStepHeader.prototype._elementRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/stepper/step-label.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass CdkStepLabel {\n    /**\n     * @param {?} template\n     */\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkStepLabel.ɵfac = function CdkStepLabel_Factory(t) { return new (t || CdkStepLabel)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkStepLabel.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkStepLabel, selectors: [[\"\", \"cdkStepLabel\", \"\"]] });\n/** @nocollapse */\nCdkStepLabel.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkStepLabel, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkStepLabel]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\nif (false) {\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkStepLabel.prototype.template;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/stepper/stepper.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to generate unique ID for each stepper component.\n * @type {?}\n */\nlet nextId = 0;\n/**\n * Change event emitted on selection changes.\n */\nclass StepperSelectionEvent {\n}\nif (false) {\n    /**\n     * Index of the step now selected.\n     * @type {?}\n     */\n    StepperSelectionEvent.prototype.selectedIndex;\n    /**\n     * Index of the step previously selected.\n     * @type {?}\n     */\n    StepperSelectionEvent.prototype.previouslySelectedIndex;\n    /**\n     * The step instance now selected.\n     * @type {?}\n     */\n    StepperSelectionEvent.prototype.selectedStep;\n    /**\n     * The step instance previously selected.\n     * @type {?}\n     */\n    StepperSelectionEvent.prototype.previouslySelectedStep;\n}\n/**\n * Enum to represent the different states of the steps.\n * @type {?}\n */\nconst STEP_STATE = {\n    NUMBER: 'number',\n    EDIT: 'edit',\n    DONE: 'done',\n    ERROR: 'error'\n};\n/**\n * InjectionToken that can be used to specify the global stepper options.\n * @type {?}\n */\nconst STEPPER_GLOBAL_OPTIONS = new InjectionToken('STEPPER_GLOBAL_OPTIONS');\n/**\n * InjectionToken that can be used to specify the global stepper options.\n * @deprecated Use `STEPPER_GLOBAL_OPTIONS` instead.\n * \\@breaking-change 8.0.0.\n * @type {?}\n */\nconst MAT_STEPPER_GLOBAL_OPTIONS = STEPPER_GLOBAL_OPTIONS;\n/**\n * Configurable options for stepper.\n * @record\n */\nfunction StepperOptions() { }\nif (false) {\n    /**\n     * Whether the stepper should display an error state or not.\n     * Default behavior is assumed to be false.\n     * @type {?|undefined}\n     */\n    StepperOptions.prototype.showError;\n    /**\n     * Whether the stepper should display the default indicator type\n     * or not.\n     * Default behavior is assumed to be true.\n     * @type {?|undefined}\n     */\n    StepperOptions.prototype.displayDefaultIndicatorType;\n}\nclass CdkStep {\n    /**\n     * \\@breaking-change 8.0.0 remove the `?` after `stepperOptions`\n     * @param {?} _stepper\n     * @param {?=} stepperOptions\n     */\n    constructor(_stepper, stepperOptions) {\n        this._stepper = _stepper;\n        /**\n         * Whether user has seen the expanded step content or not.\n         */\n        this.interacted = false;\n        this._editable = true;\n        this._optional = false;\n        this._completedOverride = null;\n        this._customError = null;\n        this._stepperOptions = stepperOptions ? stepperOptions : {};\n        this._displayDefaultIndicatorType = this._stepperOptions.displayDefaultIndicatorType !== false;\n        this._showError = !!this._stepperOptions.showError;\n    }\n    /**\n     * Whether the user can return to this step once it has been marked as completed.\n     * @return {?}\n     */\n    get editable() {\n        return this._editable;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set editable(value) {\n        this._editable = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the completion of step is optional.\n     * @return {?}\n     */\n    get optional() {\n        return this._optional;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set optional(value) {\n        this._optional = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether step is marked as completed.\n     * @return {?}\n     */\n    get completed() {\n        return this._completedOverride == null ? this._getDefaultCompleted() : this._completedOverride;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set completed(value) {\n        this._completedOverride = coerceBooleanProperty(value);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _getDefaultCompleted() {\n        return this.stepControl ? this.stepControl.valid && this.interacted : this.interacted;\n    }\n    /**\n     * Whether step has an error.\n     * @return {?}\n     */\n    get hasError() {\n        return this._customError == null ? this._getDefaultError() : this._customError;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hasError(value) {\n        this._customError = coerceBooleanProperty(value);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _getDefaultError() {\n        return this.stepControl && this.stepControl.invalid && this.interacted;\n    }\n    /**\n     * Selects this step component.\n     * @return {?}\n     */\n    select() {\n        this._stepper.selected = this;\n    }\n    /**\n     * Resets the step to its initial state. Note that this includes resetting form data.\n     * @return {?}\n     */\n    reset() {\n        this.interacted = false;\n        if (this._completedOverride != null) {\n            this._completedOverride = false;\n        }\n        if (this._customError != null) {\n            this._customError = false;\n        }\n        if (this.stepControl) {\n            this.stepControl.reset();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        // Since basically all inputs of the MatStep get proxied through the view down to the\n        // underlying MatStepHeader, we have to make sure that change detection runs correctly.\n        this._stepper._stateChanged();\n    }\n}\nCdkStep.ɵfac = function CdkStep_Factory(t) { return new (t || CdkStep)(ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**\n                 * @return {?}\n                 */() => CdkStepper))), ɵngcc0.ɵɵdirectiveInject(STEPPER_GLOBAL_OPTIONS, 8)); };\nCdkStep.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkStep, selectors: [[\"cdk-step\"]], contentQueries: function CdkStep_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkStepLabel, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.stepLabel = _t.first);\n    } }, viewQuery: function CdkStep_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(TemplateRef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.content = _t.first);\n    } }, inputs: { editable: \"editable\", optional: \"optional\", completed: \"completed\", hasError: \"hasError\", stepControl: \"stepControl\", label: \"label\", errorMessage: \"errorMessage\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], state: \"state\" }, exportAs: [\"cdkStep\"], features: [ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function CdkStep_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, CdkStep_ng_template_0_Template, 1, 0, \"ng-template\");\n    } }, encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nCdkStep.ctorParameters = () => [\n    { type: CdkStepper, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => CdkStepper)),] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [STEPPER_GLOBAL_OPTIONS,] }] }\n];\nCdkStep.propDecorators = {\n    stepLabel: [{ type: ContentChild, args: [CdkStepLabel,] }],\n    content: [{ type: ViewChild, args: [TemplateRef, { static: true },] }],\n    stepControl: [{ type: Input }],\n    label: [{ type: Input }],\n    errorMessage: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    state: [{ type: Input }],\n    editable: [{ type: Input }],\n    optional: [{ type: Input }],\n    completed: [{ type: Input }],\n    hasError: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkStep, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-step',\n                exportAs: 'cdkStep',\n                template: '<ng-template><ng-content></ng-content></ng-template>',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: CdkStepper, decorators: [{\n                type: Inject,\n                args: [forwardRef(( /**\n                                     * @return {?}\n                                     */() => CdkStepper))]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [STEPPER_GLOBAL_OPTIONS]\n            }] }]; }, { editable: [{\n            type: Input\n        }], optional: [{\n            type: Input\n        }], completed: [{\n            type: Input\n        }], hasError: [{\n            type: Input\n        }], stepLabel: [{\n            type: ContentChild,\n            args: [CdkStepLabel]\n        }], content: [{\n            type: ViewChild,\n            args: [TemplateRef, { static: true }]\n        }], stepControl: [{\n            type: Input\n        }], label: [{\n            type: Input\n        }], errorMessage: [{\n            type: Input\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], state: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkStep.ngAcceptInputType_editable;\n    /** @type {?} */\n    CdkStep.ngAcceptInputType_hasError;\n    /** @type {?} */\n    CdkStep.ngAcceptInputType_optional;\n    /** @type {?} */\n    CdkStep.ngAcceptInputType_completed;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkStep.prototype._stepperOptions;\n    /** @type {?} */\n    CdkStep.prototype._showError;\n    /** @type {?} */\n    CdkStep.prototype._displayDefaultIndicatorType;\n    /**\n     * Template for step label if it exists.\n     * @type {?}\n     */\n    CdkStep.prototype.stepLabel;\n    /**\n     * Template for step content.\n     * @type {?}\n     */\n    CdkStep.prototype.content;\n    /**\n     * The top level abstract control of the step.\n     * @type {?}\n     */\n    CdkStep.prototype.stepControl;\n    /**\n     * Whether user has seen the expanded step content or not.\n     * @type {?}\n     */\n    CdkStep.prototype.interacted;\n    /**\n     * Plain text label of the step.\n     * @type {?}\n     */\n    CdkStep.prototype.label;\n    /**\n     * Error message to display when there's an error.\n     * @type {?}\n     */\n    CdkStep.prototype.errorMessage;\n    /**\n     * Aria label for the tab.\n     * @type {?}\n     */\n    CdkStep.prototype.ariaLabel;\n    /**\n     * Reference to the element that the tab is labelled by.\n     * Will be cleared if `aria-label` is set at the same time.\n     * @type {?}\n     */\n    CdkStep.prototype.ariaLabelledby;\n    /**\n     * State of the step.\n     * @type {?}\n     */\n    CdkStep.prototype.state;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkStep.prototype._editable;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkStep.prototype._optional;\n    /** @type {?} */\n    CdkStep.prototype._completedOverride;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkStep.prototype._customError;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkStep.prototype._stepper;\n}\nclass CdkStepper {\n    /**\n     * @param {?} _dir\n     * @param {?} _changeDetectorRef\n     * @param {?=} _elementRef\n     * @param {?=} _document\n     */\n    constructor(_dir, _changeDetectorRef, _elementRef, _document) {\n        this._dir = _dir;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        /**\n         * Emits when the component is destroyed.\n         */\n        this._destroyed = new Subject();\n        this._linear = false;\n        this._selectedIndex = 0;\n        /**\n         * Event emitted when the selected step has changed.\n         */\n        this.selectionChange = new EventEmitter();\n        this._orientation = 'horizontal';\n        this._groupId = nextId++;\n        this._document = _document;\n    }\n    /**\n     * The list of step components that the stepper is holding.\n     * @return {?}\n     */\n    get steps() {\n        return this._steps;\n    }\n    /**\n     * Whether the validity of previous steps should be checked or not.\n     * @return {?}\n     */\n    get linear() {\n        return this._linear;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set linear(value) {\n        this._linear = coerceBooleanProperty(value);\n    }\n    /**\n     * The index of the selected step.\n     * @return {?}\n     */\n    get selectedIndex() {\n        return this._selectedIndex;\n    }\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    set selectedIndex(index) {\n        /** @type {?} */\n        const newIndex = coerceNumberProperty(index);\n        if (this.steps) {\n            // Ensure that the index can't be out of bounds.\n            if (newIndex < 0 || newIndex > this.steps.length - 1) {\n                throw Error('cdkStepper: Cannot assign out-of-bounds value to `selectedIndex`.');\n            }\n            if (this._selectedIndex != newIndex && !this._anyControlsInvalidOrPending(newIndex) &&\n                (newIndex >= this._selectedIndex || this.steps.toArray()[newIndex].editable)) {\n                this._updateSelectedItemIndex(index);\n            }\n        }\n        else {\n            this._selectedIndex = newIndex;\n        }\n    }\n    /**\n     * The step that is selected.\n     * @return {?}\n     */\n    get selected() {\n        // @breaking-change 8.0.0 Change return type to `CdkStep | undefined`.\n        return this.steps ? this.steps.toArray()[this.selectedIndex] : (/** @type {?} */ (undefined));\n    }\n    /**\n     * @param {?} step\n     * @return {?}\n     */\n    set selected(step) {\n        this.selectedIndex = this.steps ? this.steps.toArray().indexOf(step) : -1;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        // Note that while the step headers are content children by default, any components that\n        // extend this one might have them as view children. We initialize the keyboard handling in\n        // AfterViewInit so we're guaranteed for both view and content children to be defined.\n        this._keyManager = new FocusKeyManager(this._stepHeader)\n            .withWrap()\n            .withVerticalOrientation(this._orientation === 'vertical');\n        (this._dir ? ((/** @type {?} */ (this._dir.change))) : of())\n            .pipe(startWith(this._layoutDirection()), takeUntil(this._destroyed))\n            .subscribe((/**\n         * @param {?} direction\n         * @return {?}\n         */\n        direction => this._keyManager.withHorizontalOrientation(direction)));\n        this._keyManager.updateActiveItem(this._selectedIndex);\n        this.steps.changes.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (!this.selected) {\n                this._selectedIndex = Math.max(this._selectedIndex - 1, 0);\n            }\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Selects and focuses the next step in list.\n     * @return {?}\n     */\n    next() {\n        this.selectedIndex = Math.min(this._selectedIndex + 1, this.steps.length - 1);\n    }\n    /**\n     * Selects and focuses the previous step in list.\n     * @return {?}\n     */\n    previous() {\n        this.selectedIndex = Math.max(this._selectedIndex - 1, 0);\n    }\n    /**\n     * Resets the stepper to its initial state. Note that this includes clearing form data.\n     * @return {?}\n     */\n    reset() {\n        this._updateSelectedItemIndex(0);\n        this.steps.forEach((/**\n         * @param {?} step\n         * @return {?}\n         */\n        step => step.reset()));\n        this._stateChanged();\n    }\n    /**\n     * Returns a unique id for each step label element.\n     * @param {?} i\n     * @return {?}\n     */\n    _getStepLabelId(i) {\n        return `cdk-step-label-${this._groupId}-${i}`;\n    }\n    /**\n     * Returns unique id for each step content element.\n     * @param {?} i\n     * @return {?}\n     */\n    _getStepContentId(i) {\n        return `cdk-step-content-${this._groupId}-${i}`;\n    }\n    /**\n     * Marks the component to be change detected.\n     * @return {?}\n     */\n    _stateChanged() {\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Returns position state of the step with the given index.\n     * @param {?} index\n     * @return {?}\n     */\n    _getAnimationDirection(index) {\n        /** @type {?} */\n        const position = index - this._selectedIndex;\n        if (position < 0) {\n            return this._layoutDirection() === 'rtl' ? 'next' : 'previous';\n        }\n        else if (position > 0) {\n            return this._layoutDirection() === 'rtl' ? 'previous' : 'next';\n        }\n        return 'current';\n    }\n    /**\n     * Returns the type of icon to be displayed.\n     * @param {?} index\n     * @param {?=} state\n     * @return {?}\n     */\n    _getIndicatorType(index, state = STEP_STATE.NUMBER) {\n        /** @type {?} */\n        const step = this.steps.toArray()[index];\n        /** @type {?} */\n        const isCurrentStep = this._isCurrentStep(index);\n        return step._displayDefaultIndicatorType ? this._getDefaultIndicatorLogic(step, isCurrentStep) :\n            this._getGuidelineLogic(step, isCurrentStep, state);\n    }\n    /**\n     * @private\n     * @param {?} step\n     * @param {?} isCurrentStep\n     * @return {?}\n     */\n    _getDefaultIndicatorLogic(step, isCurrentStep) {\n        if (step._showError && step.hasError && !isCurrentStep) {\n            return STEP_STATE.ERROR;\n        }\n        else if (!step.completed || isCurrentStep) {\n            return STEP_STATE.NUMBER;\n        }\n        else {\n            return step.editable ? STEP_STATE.EDIT : STEP_STATE.DONE;\n        }\n    }\n    /**\n     * @private\n     * @param {?} step\n     * @param {?} isCurrentStep\n     * @param {?=} state\n     * @return {?}\n     */\n    _getGuidelineLogic(step, isCurrentStep, state = STEP_STATE.NUMBER) {\n        if (step._showError && step.hasError && !isCurrentStep) {\n            return STEP_STATE.ERROR;\n        }\n        else if (step.completed && !isCurrentStep) {\n            return STEP_STATE.DONE;\n        }\n        else if (step.completed && isCurrentStep) {\n            return state;\n        }\n        else if (step.editable && isCurrentStep) {\n            return STEP_STATE.EDIT;\n        }\n        else {\n            return state;\n        }\n    }\n    /**\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _isCurrentStep(index) {\n        return this._selectedIndex === index;\n    }\n    /**\n     * Returns the index of the currently-focused step header.\n     * @return {?}\n     */\n    _getFocusIndex() {\n        return this._keyManager ? this._keyManager.activeItemIndex : this._selectedIndex;\n    }\n    /**\n     * @private\n     * @param {?} newIndex\n     * @return {?}\n     */\n    _updateSelectedItemIndex(newIndex) {\n        /** @type {?} */\n        const stepsArray = this.steps.toArray();\n        this.selectionChange.emit({\n            selectedIndex: newIndex,\n            previouslySelectedIndex: this._selectedIndex,\n            selectedStep: stepsArray[newIndex],\n            previouslySelectedStep: stepsArray[this._selectedIndex],\n        });\n        // If focus is inside the stepper, move it to the next header, otherwise it may become\n        // lost when the active step content is hidden. We can't be more granular with the check\n        // (e.g. checking whether focus is inside the active step), because we don't have a\n        // reference to the elements that are rendering out the content.\n        this._containsFocus() ? this._keyManager.setActiveItem(newIndex) :\n            this._keyManager.updateActiveItem(newIndex);\n        this._selectedIndex = newIndex;\n        this._stateChanged();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onKeydown(event) {\n        /** @type {?} */\n        const hasModifier = hasModifierKey(event);\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const manager = this._keyManager;\n        if (manager.activeItemIndex != null && !hasModifier &&\n            (keyCode === SPACE || keyCode === ENTER)) {\n            this.selectedIndex = manager.activeItemIndex;\n            event.preventDefault();\n        }\n        else if (keyCode === HOME) {\n            manager.setFirstItemActive();\n            event.preventDefault();\n        }\n        else if (keyCode === END) {\n            manager.setLastItemActive();\n            event.preventDefault();\n        }\n        else {\n            manager.onKeydown(event);\n        }\n    }\n    /**\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _anyControlsInvalidOrPending(index) {\n        /** @type {?} */\n        const steps = this.steps.toArray();\n        steps[this._selectedIndex].interacted = true;\n        if (this._linear && index >= 0) {\n            return steps.slice(0, index).some((/**\n             * @param {?} step\n             * @return {?}\n             */\n            step => {\n                /** @type {?} */\n                const control = step.stepControl;\n                /** @type {?} */\n                const isIncomplete = control ? (control.invalid || control.pending || !step.interacted) : !step.completed;\n                return isIncomplete && !step.optional && !step._completedOverride;\n            }));\n        }\n        return false;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _layoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /**\n     * Checks whether the stepper contains the focused element.\n     * @private\n     * @return {?}\n     */\n    _containsFocus() {\n        if (!this._document || !this._elementRef) {\n            return false;\n        }\n        /** @type {?} */\n        const stepperElement = this._elementRef.nativeElement;\n        /** @type {?} */\n        const focusedElement = this._document.activeElement;\n        return stepperElement === focusedElement || stepperElement.contains(focusedElement);\n    }\n}\nCdkStepper.ɵfac = function CdkStepper_Factory(t) { return new (t || CdkStepper)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nCdkStepper.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkStepper, selectors: [[\"\", \"cdkStepper\", \"\"]], contentQueries: function CdkStepper_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkStep, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkStepHeader, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._steps = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._stepHeader = _t);\n    } }, inputs: { linear: \"linear\", selectedIndex: \"selectedIndex\", selected: \"selected\" }, outputs: { selectionChange: \"selectionChange\" }, exportAs: [\"cdkStepper\"] });\n/** @nocollapse */\nCdkStepper.ctorParameters = () => [\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\nCdkStepper.propDecorators = {\n    _steps: [{ type: ContentChildren, args: [CdkStep, { descendants: true },] }],\n    _stepHeader: [{ type: ContentChildren, args: [CdkStepHeader, { descendants: true },] }],\n    linear: [{ type: Input }],\n    selectedIndex: [{ type: Input }],\n    selected: [{ type: Input }],\n    selectionChange: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkStepper, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkStepper]',\n                exportAs: 'cdkStepper'\n            }]\n    }], function () { return [{ type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { selectionChange: [{\n            type: Output\n        }], linear: [{\n            type: Input\n        }], selectedIndex: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], _steps: [{\n            type: ContentChildren,\n            args: [CdkStep, { descendants: true }]\n        }], _stepHeader: [{\n            type: ContentChildren,\n            args: [CdkStepHeader, { descendants: true }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkStepper.ngAcceptInputType_editable;\n    /** @type {?} */\n    CdkStepper.ngAcceptInputType_optional;\n    /** @type {?} */\n    CdkStepper.ngAcceptInputType_completed;\n    /** @type {?} */\n    CdkStepper.ngAcceptInputType_hasError;\n    /** @type {?} */\n    CdkStepper.ngAcceptInputType_linear;\n    /** @type {?} */\n    CdkStepper.ngAcceptInputType_selectedIndex;\n    /**\n     * Emits when the component is destroyed.\n     * @type {?}\n     * @protected\n     */\n    CdkStepper.prototype._destroyed;\n    /**\n     * Used for managing keyboard focus.\n     * @type {?}\n     * @private\n     */\n    CdkStepper.prototype._keyManager;\n    /**\n     * \\@breaking-change 8.0.0 Remove `| undefined` once the `_document`\n     * constructor param is required.\n     * @type {?}\n     * @private\n     */\n    CdkStepper.prototype._document;\n    /**\n     * The list of step components that the stepper is holding.\n     * @deprecated use `steps` instead\n     * \\@breaking-change 9.0.0 remove this property\n     * @type {?}\n     */\n    CdkStepper.prototype._steps;\n    /**\n     * The list of step headers of the steps in the stepper.\n     * @deprecated Type to be changed to `QueryList<CdkStepHeader>`.\n     * \\@breaking-change 8.0.0\n     * @type {?}\n     */\n    CdkStepper.prototype._stepHeader;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkStepper.prototype._linear;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkStepper.prototype._selectedIndex;\n    /**\n     * Event emitted when the selected step has changed.\n     * @type {?}\n     */\n    CdkStepper.prototype.selectionChange;\n    /**\n     * Used to track unique ID for each stepper component.\n     * @type {?}\n     */\n    CdkStepper.prototype._groupId;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkStepper.prototype._orientation;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkStepper.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkStepper.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkStepper.prototype._elementRef;\n}\n/**\n * Simplified representation of an \"AbstractControl\" from \\@angular/forms.\n * Used to avoid having to bring in \\@angular/forms for a single optional interface.\n * \\@docs-private\n * @record\n */\nfunction AbstractControlLike() { }\nif (false) {\n    /** @type {?} */\n    AbstractControlLike.prototype.asyncValidator;\n    /** @type {?} */\n    AbstractControlLike.prototype.dirty;\n    /** @type {?} */\n    AbstractControlLike.prototype.disabled;\n    /** @type {?} */\n    AbstractControlLike.prototype.enabled;\n    /** @type {?} */\n    AbstractControlLike.prototype.errors;\n    /** @type {?} */\n    AbstractControlLike.prototype.invalid;\n    /** @type {?} */\n    AbstractControlLike.prototype.parent;\n    /** @type {?} */\n    AbstractControlLike.prototype.pending;\n    /** @type {?} */\n    AbstractControlLike.prototype.pristine;\n    /** @type {?} */\n    AbstractControlLike.prototype.root;\n    /** @type {?} */\n    AbstractControlLike.prototype.status;\n    /** @type {?} */\n    AbstractControlLike.prototype.statusChanges;\n    /** @type {?} */\n    AbstractControlLike.prototype.touched;\n    /** @type {?} */\n    AbstractControlLike.prototype.untouched;\n    /** @type {?} */\n    AbstractControlLike.prototype.updateOn;\n    /** @type {?} */\n    AbstractControlLike.prototype.valid;\n    /** @type {?} */\n    AbstractControlLike.prototype.validator;\n    /** @type {?} */\n    AbstractControlLike.prototype.value;\n    /** @type {?} */\n    AbstractControlLike.prototype.valueChanges;\n    /**\n     * @return {?}\n     */\n    AbstractControlLike.prototype.clearAsyncValidators = function () { };\n    /**\n     * @return {?}\n     */\n    AbstractControlLike.prototype.clearValidators = function () { };\n    /**\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControlLike.prototype.disable = function (opts) { };\n    /**\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControlLike.prototype.enable = function (opts) { };\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    AbstractControlLike.prototype.get = function (path) { };\n    /**\n     * @param {?} errorCode\n     * @param {?=} path\n     * @return {?}\n     */\n    AbstractControlLike.prototype.getError = function (errorCode, path) { };\n    /**\n     * @param {?} errorCode\n     * @param {?=} path\n     * @return {?}\n     */\n    AbstractControlLike.prototype.hasError = function (errorCode, path) { };\n    /**\n     * @return {?}\n     */\n    AbstractControlLike.prototype.markAllAsTouched = function () { };\n    /**\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControlLike.prototype.markAsDirty = function (opts) { };\n    /**\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControlLike.prototype.markAsPending = function (opts) { };\n    /**\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControlLike.prototype.markAsPristine = function (opts) { };\n    /**\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControlLike.prototype.markAsTouched = function (opts) { };\n    /**\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControlLike.prototype.markAsUntouched = function (opts) { };\n    /**\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    AbstractControlLike.prototype.patchValue = function (value, options) { };\n    /**\n     * @param {?=} value\n     * @param {?=} options\n     * @return {?}\n     */\n    AbstractControlLike.prototype.reset = function (value, options) { };\n    /**\n     * @param {?} newValidator\n     * @return {?}\n     */\n    AbstractControlLike.prototype.setAsyncValidators = function (newValidator) { };\n    /**\n     * @param {?} errors\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControlLike.prototype.setErrors = function (errors, opts) { };\n    /**\n     * @param {?} parent\n     * @return {?}\n     */\n    AbstractControlLike.prototype.setParent = function (parent) { };\n    /**\n     * @param {?} newValidator\n     * @return {?}\n     */\n    AbstractControlLike.prototype.setValidators = function (newValidator) { };\n    /**\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    AbstractControlLike.prototype.setValue = function (value, options) { };\n    /**\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControlLike.prototype.updateValueAndValidity = function (opts) { };\n    /**\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    AbstractControlLike.prototype.patchValue = function (value, options) { };\n    /**\n     * @param {?=} formState\n     * @param {?=} options\n     * @return {?}\n     */\n    AbstractControlLike.prototype.reset = function (formState, options) { };\n    /**\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    AbstractControlLike.prototype.setValue = function (value, options) { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/stepper/stepper-button.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Button that moves to the next step in a stepper workflow.\n */\nclass CdkStepperNext {\n    /**\n     * @param {?} _stepper\n     */\n    constructor(_stepper) {\n        this._stepper = _stepper;\n        /**\n         * Type of the next button. Defaults to \"submit\" if not specified.\n         */\n        this.type = 'submit';\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    /**\n     * @return {?}\n     */\n    _handleClick() {\n        this._stepper.next();\n    }\n}\nCdkStepperNext.ɵfac = function CdkStepperNext_Factory(t) { return new (t || CdkStepperNext)(ɵngcc0.ɵɵdirectiveInject(CdkStepper)); };\nCdkStepperNext.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkStepperNext, selectors: [[\"button\", \"cdkStepperNext\", \"\"]], hostVars: 1, hostBindings: function CdkStepperNext_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function CdkStepperNext_click_HostBindingHandler() { return ctx._handleClick(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"type\", ctx.type);\n    } }, inputs: { type: \"type\" } });\n/** @nocollapse */\nCdkStepperNext.ctorParameters = () => [\n    { type: CdkStepper }\n];\nCdkStepperNext.propDecorators = {\n    type: [{ type: Input }],\n    _handleClick: [{ type: HostListener, args: ['click',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkStepperNext, [{\n        type: Directive,\n        args: [{\n                selector: 'button[cdkStepperNext]',\n                host: {\n                    '[type]': 'type'\n                }\n            }]\n    }], function () { return [{ type: CdkStepper }]; }, { type: [{\n            type: Input\n        }], _handleClick: [{\n            type: HostListener,\n            args: ['click']\n        }] }); })();\nif (false) {\n    /**\n     * Type of the next button. Defaults to \"submit\" if not specified.\n     * @type {?}\n     */\n    CdkStepperNext.prototype.type;\n    /** @type {?} */\n    CdkStepperNext.prototype._stepper;\n}\n/**\n * Button that moves to the previous step in a stepper workflow.\n */\nclass CdkStepperPrevious {\n    /**\n     * @param {?} _stepper\n     */\n    constructor(_stepper) {\n        this._stepper = _stepper;\n        /**\n         * Type of the previous button. Defaults to \"button\" if not specified.\n         */\n        this.type = 'button';\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    /**\n     * @return {?}\n     */\n    _handleClick() {\n        this._stepper.previous();\n    }\n}\nCdkStepperPrevious.ɵfac = function CdkStepperPrevious_Factory(t) { return new (t || CdkStepperPrevious)(ɵngcc0.ɵɵdirectiveInject(CdkStepper)); };\nCdkStepperPrevious.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkStepperPrevious, selectors: [[\"button\", \"cdkStepperPrevious\", \"\"]], hostVars: 1, hostBindings: function CdkStepperPrevious_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function CdkStepperPrevious_click_HostBindingHandler() { return ctx._handleClick(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"type\", ctx.type);\n    } }, inputs: { type: \"type\" } });\n/** @nocollapse */\nCdkStepperPrevious.ctorParameters = () => [\n    { type: CdkStepper }\n];\nCdkStepperPrevious.propDecorators = {\n    type: [{ type: Input }],\n    _handleClick: [{ type: HostListener, args: ['click',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkStepperPrevious, [{\n        type: Directive,\n        args: [{\n                selector: 'button[cdkStepperPrevious]',\n                host: {\n                    '[type]': 'type'\n                }\n            }]\n    }], function () { return [{ type: CdkStepper }]; }, { type: [{\n            type: Input\n        }], _handleClick: [{\n            type: HostListener,\n            args: ['click']\n        }] }); })();\nif (false) {\n    /**\n     * Type of the previous button. Defaults to \"button\" if not specified.\n     * @type {?}\n     */\n    CdkStepperPrevious.prototype.type;\n    /** @type {?} */\n    CdkStepperPrevious.prototype._stepper;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/stepper/stepper-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass CdkStepperModule {\n}\nCdkStepperModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: CdkStepperModule });\nCdkStepperModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function CdkStepperModule_Factory(t) { return new (t || CdkStepperModule)(); }, imports: [[BidiModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkStepperModule, { declarations: function () { return [CdkStep,\n        CdkStepper,\n        CdkStepHeader,\n        CdkStepLabel,\n        CdkStepperNext,\n        CdkStepperPrevious]; }, imports: function () { return [BidiModule]; }, exports: function () { return [CdkStep,\n        CdkStepper,\n        CdkStepHeader,\n        CdkStepLabel,\n        CdkStepperNext,\n        CdkStepperPrevious]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkStepperModule, [{\n        type: NgModule,\n        args: [{\n                imports: [BidiModule],\n                exports: [\n                    CdkStep,\n                    CdkStepper,\n                    CdkStepHeader,\n                    CdkStepLabel,\n                    CdkStepperNext,\n                    CdkStepperPrevious,\n                ],\n                declarations: [\n                    CdkStep,\n                    CdkStepper,\n                    CdkStepHeader,\n                    CdkStepLabel,\n                    CdkStepperNext,\n                    CdkStepperPrevious,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/stepper/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkStep, CdkStepHeader, CdkStepLabel, CdkStepper, CdkStepperModule, CdkStepperNext, CdkStepperPrevious, MAT_STEPPER_GLOBAL_OPTIONS, STEPPER_GLOBAL_OPTIONS, STEP_STATE, StepperSelectionEvent };\n\n//# sourceMappingURL=stepper.js.map","import { normalizePassiveListenerOptions, Platform, PlatformModule } from '@angular/cdk/platform';\nimport { Injectable, NgZone, ɵɵdefineInjectable, ɵɵinject, EventEmitter, Directive, ElementRef, Output, Optional, Inject, Input, HostListener, NgModule } from '@angular/core';\nimport { coerceElement, coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { EMPTY, Subject, fromEvent } from 'rxjs';\nimport { auditTime, takeUntil } from 'rxjs/operators';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/text-field/autofill.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Options to pass to the animationstart listener.\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nconst listenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * An injectable service that can be used to monitor the autofill state of an input.\n * Based on the following blog post:\n * https://medium.com/\\@brunn/detecting-autofilled-fields-in-javascript-aed598d25da7\n */\nclass AutofillMonitor {\n    /**\n     * @param {?} _platform\n     * @param {?} _ngZone\n     */\n    constructor(_platform, _ngZone) {\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._monitoredElements = new Map();\n    }\n    /**\n     * @param {?} elementOrRef\n     * @return {?}\n     */\n    monitor(elementOrRef) {\n        if (!this._platform.isBrowser) {\n            return EMPTY;\n        }\n        /** @type {?} */\n        const element = coerceElement(elementOrRef);\n        /** @type {?} */\n        const info = this._monitoredElements.get(element);\n        if (info) {\n            return info.subject.asObservable();\n        }\n        /** @type {?} */\n        const result = new Subject();\n        /** @type {?} */\n        const cssClass = 'cdk-text-field-autofilled';\n        /** @type {?} */\n        const listener = (/** @type {?} */ (((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            // Animation events fire on initial element render, we check for the presence of the autofill\n            // CSS class to make sure this is a real change in state, not just the initial render before\n            // we fire off events.\n            if (event.animationName === 'cdk-text-field-autofill-start' &&\n                !element.classList.contains(cssClass)) {\n                element.classList.add(cssClass);\n                this._ngZone.run((/**\n                 * @return {?}\n                 */\n                () => result.next({ target: (/** @type {?} */ (event.target)), isAutofilled: true })));\n            }\n            else if (event.animationName === 'cdk-text-field-autofill-end' &&\n                element.classList.contains(cssClass)) {\n                element.classList.remove(cssClass);\n                this._ngZone.run((/**\n                 * @return {?}\n                 */\n                () => result.next({ target: (/** @type {?} */ (event.target)), isAutofilled: false })));\n            }\n        }))));\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            element.addEventListener('animationstart', listener, listenerOptions);\n            element.classList.add('cdk-text-field-autofill-monitored');\n        }));\n        this._monitoredElements.set(element, {\n            subject: result,\n            unlisten: (/**\n             * @return {?}\n             */\n            () => {\n                element.removeEventListener('animationstart', listener, listenerOptions);\n            })\n        });\n        return result.asObservable();\n    }\n    /**\n     * @param {?} elementOrRef\n     * @return {?}\n     */\n    stopMonitoring(elementOrRef) {\n        /** @type {?} */\n        const element = coerceElement(elementOrRef);\n        /** @type {?} */\n        const info = this._monitoredElements.get(element);\n        if (info) {\n            info.unlisten();\n            info.subject.complete();\n            element.classList.remove('cdk-text-field-autofill-monitored');\n            element.classList.remove('cdk-text-field-autofilled');\n            this._monitoredElements.delete(element);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._monitoredElements.forEach((/**\n         * @param {?} _info\n         * @param {?} element\n         * @return {?}\n         */\n        (_info, element) => this.stopMonitoring(element)));\n    }\n}\nAutofillMonitor.ɵfac = function AutofillMonitor_Factory(t) { return new (t || AutofillMonitor)(ɵngcc0.ɵɵinject(ɵngcc1.Platform), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\n/** @nocollapse */\nAutofillMonitor.ctorParameters = () => [\n    { type: Platform },\n    { type: NgZone }\n];\n/** @nocollapse */ AutofillMonitor.ɵprov = ɵɵdefineInjectable({ factory: function AutofillMonitor_Factory() { return new AutofillMonitor(ɵɵinject(Platform), ɵɵinject(NgZone)); }, token: AutofillMonitor, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AutofillMonitor, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }, { type: ɵngcc0.NgZone }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    AutofillMonitor.prototype._monitoredElements;\n    /**\n     * @type {?}\n     * @private\n     */\n    AutofillMonitor.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    AutofillMonitor.prototype._ngZone;\n}\n/**\n * A directive that can be used to monitor the autofill state of an input.\n */\nclass CdkAutofill {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _autofillMonitor\n     */\n    constructor(_elementRef, _autofillMonitor) {\n        this._elementRef = _elementRef;\n        this._autofillMonitor = _autofillMonitor;\n        /**\n         * Emits when the autofill state of the element changes.\n         */\n        this.cdkAutofill = new EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._autofillMonitor\n            .monitor(this._elementRef)\n            .subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => this.cdkAutofill.emit(event)));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._autofillMonitor.stopMonitoring(this._elementRef);\n    }\n}\nCdkAutofill.ɵfac = function CdkAutofill_Factory(t) { return new (t || CdkAutofill)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(AutofillMonitor)); };\nCdkAutofill.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkAutofill, selectors: [[\"\", \"cdkAutofill\", \"\"]], outputs: { cdkAutofill: \"cdkAutofill\" } });\n/** @nocollapse */\nCdkAutofill.ctorParameters = () => [\n    { type: ElementRef },\n    { type: AutofillMonitor }\n];\nCdkAutofill.propDecorators = {\n    cdkAutofill: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkAutofill, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkAutofill]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: AutofillMonitor }]; }, { cdkAutofill: [{\n            type: Output\n        }] }); })();\nif (false) {\n    /**\n     * Emits when the autofill state of the element changes.\n     * @type {?}\n     */\n    CdkAutofill.prototype.cdkAutofill;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAutofill.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAutofill.prototype._autofillMonitor;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/text-field/autosize.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Directive to automatically resize a textarea to fit its content.\n */\nclass CdkTextareaAutosize {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _platform\n     * @param {?} _ngZone\n     * @param {?=} document\n     */\n    constructor(_elementRef, _platform, _ngZone, \n    /** @breaking-change 11.0.0 make document required */\n    document) {\n        this._elementRef = _elementRef;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._destroyed = new Subject();\n        this._enabled = true;\n        /**\n         * Value of minRows as of last resize. If the minRows has decreased, the\n         * height of the textarea needs to be recomputed to reflect the new minimum. The maxHeight\n         * does not have the same problem because it does not affect the textarea's scrollHeight.\n         */\n        this._previousMinRows = -1;\n        this._document = document;\n        this._textareaElement = (/** @type {?} */ (this._elementRef.nativeElement));\n    }\n    /**\n     * Minimum amount of rows in the textarea.\n     * @return {?}\n     */\n    get minRows() { return this._minRows; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set minRows(value) {\n        this._minRows = coerceNumberProperty(value);\n        this._setMinHeight();\n    }\n    /**\n     * Maximum amount of rows in the textarea.\n     * @return {?}\n     */\n    get maxRows() { return this._maxRows; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set maxRows(value) {\n        this._maxRows = coerceNumberProperty(value);\n        this._setMaxHeight();\n    }\n    /**\n     * Whether autosizing is enabled or not\n     * @return {?}\n     */\n    get enabled() { return this._enabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set enabled(value) {\n        value = coerceBooleanProperty(value);\n        // Only act if the actual value changed. This specifically helps to not run\n        // resizeToFitContent too early (i.e. before ngAfterViewInit)\n        if (this._enabled !== value) {\n            (this._enabled = value) ? this.resizeToFitContent(true) : this.reset();\n        }\n    }\n    /**\n     * Sets the minimum height of the textarea as determined by minRows.\n     * @return {?}\n     */\n    _setMinHeight() {\n        /** @type {?} */\n        const minHeight = this.minRows && this._cachedLineHeight ?\n            `${this.minRows * this._cachedLineHeight}px` : null;\n        if (minHeight) {\n            this._textareaElement.style.minHeight = minHeight;\n        }\n    }\n    /**\n     * Sets the maximum height of the textarea as determined by maxRows.\n     * @return {?}\n     */\n    _setMaxHeight() {\n        /** @type {?} */\n        const maxHeight = this.maxRows && this._cachedLineHeight ?\n            `${this.maxRows * this._cachedLineHeight}px` : null;\n        if (maxHeight) {\n            this._textareaElement.style.maxHeight = maxHeight;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            // Remember the height which we started with in case autosizing is disabled\n            this._initialHeight = this._textareaElement.style.height;\n            this.resizeToFitContent();\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                /** @type {?} */\n                const window = this._getWindow();\n                fromEvent(window, 'resize')\n                    .pipe(auditTime(16), takeUntil(this._destroyed))\n                    .subscribe((/**\n                 * @return {?}\n                 */\n                () => this.resizeToFitContent(true)));\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Cache the height of a single-row textarea if it has not already been cached.\n     *\n     * We need to know how large a single \"row\" of a textarea is in order to apply minRows and\n     * maxRows. For the initial version, we will assume that the height of a single line in the\n     * textarea does not ever change.\n     * @private\n     * @return {?}\n     */\n    _cacheTextareaLineHeight() {\n        if (this._cachedLineHeight) {\n            return;\n        }\n        // Use a clone element because we have to override some styles.\n        /** @type {?} */\n        let textareaClone = (/** @type {?} */ (this._textareaElement.cloneNode(false)));\n        textareaClone.rows = 1;\n        // Use `position: absolute` so that this doesn't cause a browser layout and use\n        // `visibility: hidden` so that nothing is rendered. Clear any other styles that\n        // would affect the height.\n        textareaClone.style.position = 'absolute';\n        textareaClone.style.visibility = 'hidden';\n        textareaClone.style.border = 'none';\n        textareaClone.style.padding = '0';\n        textareaClone.style.height = '';\n        textareaClone.style.minHeight = '';\n        textareaClone.style.maxHeight = '';\n        // In Firefox it happens that textarea elements are always bigger than the specified amount\n        // of rows. This is because Firefox tries to add extra space for the horizontal scrollbar.\n        // As a workaround that removes the extra space for the scrollbar, we can just set overflow\n        // to hidden. This ensures that there is no invalid calculation of the line height.\n        // See Firefox bug report: https://bugzilla.mozilla.org/show_bug.cgi?id=33654\n        textareaClone.style.overflow = 'hidden';\n        (/** @type {?} */ (this._textareaElement.parentNode)).appendChild(textareaClone);\n        this._cachedLineHeight = textareaClone.clientHeight;\n        (/** @type {?} */ (this._textareaElement.parentNode)).removeChild(textareaClone);\n        // Min and max heights have to be re-calculated if the cached line height changes\n        this._setMinHeight();\n        this._setMaxHeight();\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this._platform.isBrowser) {\n            this.resizeToFitContent();\n        }\n    }\n    /**\n     * Resize the textarea to fit its content.\n     * @param {?=} force Whether to force a height recalculation. By default the height will be\n     *    recalculated only if the value changed since the last call.\n     * @return {?}\n     */\n    resizeToFitContent(force = false) {\n        // If autosizing is disabled, just skip everything else\n        if (!this._enabled) {\n            return;\n        }\n        this._cacheTextareaLineHeight();\n        // If we haven't determined the line-height yet, we know we're still hidden and there's no point\n        // in checking the height of the textarea.\n        if (!this._cachedLineHeight) {\n            return;\n        }\n        /** @type {?} */\n        const textarea = (/** @type {?} */ (this._elementRef.nativeElement));\n        /** @type {?} */\n        const value = textarea.value;\n        // Only resize if the value or minRows have changed since these calculations can be expensive.\n        if (!force && this._minRows === this._previousMinRows && value === this._previousValue) {\n            return;\n        }\n        /** @type {?} */\n        const placeholderText = textarea.placeholder;\n        // Reset the textarea height to auto in order to shrink back to its default size.\n        // Also temporarily force overflow:hidden, so scroll bars do not interfere with calculations.\n        // Long placeholders that are wider than the textarea width may lead to a bigger scrollHeight\n        // value. To ensure that the scrollHeight is not bigger than the content, the placeholders\n        // need to be removed temporarily.\n        textarea.classList.add('cdk-textarea-autosize-measuring');\n        textarea.placeholder = '';\n        // The cdk-textarea-autosize-measuring class includes a 2px padding to workaround an issue with\n        // Chrome, so we account for that extra space here by subtracting 4 (2px top + 2px bottom).\n        /** @type {?} */\n        const height = textarea.scrollHeight - 4;\n        // Use the scrollHeight to know how large the textarea *would* be if fit its entire value.\n        textarea.style.height = `${height}px`;\n        textarea.classList.remove('cdk-textarea-autosize-measuring');\n        textarea.placeholder = placeholderText;\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            if (typeof requestAnimationFrame !== 'undefined') {\n                requestAnimationFrame((/**\n                 * @return {?}\n                 */\n                () => this._scrollToCaretPosition(textarea)));\n            }\n            else {\n                setTimeout((/**\n                 * @return {?}\n                 */\n                () => this._scrollToCaretPosition(textarea)));\n            }\n        }));\n        this._previousValue = value;\n        this._previousMinRows = this._minRows;\n    }\n    /**\n     * Resets the textarea to its original size\n     * @return {?}\n     */\n    reset() {\n        // Do not try to change the textarea, if the initialHeight has not been determined yet\n        // This might potentially remove styles when reset() is called before ngAfterViewInit\n        if (this._initialHeight !== undefined) {\n            this._textareaElement.style.height = this._initialHeight;\n        }\n    }\n    // In Ivy the `host` metadata will be merged, whereas in ViewEngine it is overridden. In order\n    // to avoid double event listeners, we need to use `HostListener`. Once Ivy is the default, we\n    // can move this back into `host`.\n    // tslint:disable:no-host-decorator-in-concrete\n    /**\n     * @return {?}\n     */\n    _noopInputHandler() {\n        // no-op handler that ensures we're running change detection on input events.\n    }\n    /**\n     * Access injected document if available or fallback to global document reference\n     * @private\n     * @return {?}\n     */\n    _getDocument() {\n        return this._document || document;\n    }\n    /**\n     * Use defaultView of injected document if available or fallback to global window reference\n     * @private\n     * @return {?}\n     */\n    _getWindow() {\n        /** @type {?} */\n        const doc = this._getDocument();\n        return doc.defaultView || window;\n    }\n    /**\n     * Scrolls a textarea to the caret position. On Firefox resizing the textarea will\n     * prevent it from scrolling to the caret position. We need to re-set the selection\n     * in order for it to scroll to the proper position.\n     * @private\n     * @param {?} textarea\n     * @return {?}\n     */\n    _scrollToCaretPosition(textarea) {\n        const { selectionStart, selectionEnd } = textarea;\n        /** @type {?} */\n        const document = this._getDocument();\n        // IE will throw an \"Unspecified error\" if we try to set the selection range after the\n        // element has been removed from the DOM. Assert that the directive hasn't been destroyed\n        // between the time we requested the animation frame and when it was executed.\n        // Also note that we have to assert that the textarea is focused before we set the\n        // selection range. Setting the selection range on a non-focused textarea will cause\n        // it to receive focus on IE and Edge.\n        if (!this._destroyed.isStopped && document.activeElement === textarea) {\n            textarea.setSelectionRange(selectionStart, selectionEnd);\n        }\n    }\n}\nCdkTextareaAutosize.ɵfac = function CdkTextareaAutosize_Factory(t) { return new (t || CdkTextareaAutosize)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8)); };\nCdkTextareaAutosize.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkTextareaAutosize, selectors: [[\"textarea\", \"cdkTextareaAutosize\", \"\"]], hostAttrs: [\"rows\", \"1\", 1, \"cdk-textarea-autosize\"], hostBindings: function CdkTextareaAutosize_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"input\", function CdkTextareaAutosize_input_HostBindingHandler() { return ctx._noopInputHandler(); });\n    } }, inputs: { minRows: [\"cdkAutosizeMinRows\", \"minRows\"], maxRows: [\"cdkAutosizeMaxRows\", \"maxRows\"], enabled: [\"cdkTextareaAutosize\", \"enabled\"] }, exportAs: [\"cdkTextareaAutosize\"] });\n/** @nocollapse */\nCdkTextareaAutosize.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\nCdkTextareaAutosize.propDecorators = {\n    minRows: [{ type: Input, args: ['cdkAutosizeMinRows',] }],\n    maxRows: [{ type: Input, args: ['cdkAutosizeMaxRows',] }],\n    enabled: [{ type: Input, args: ['cdkTextareaAutosize',] }],\n    _noopInputHandler: [{ type: HostListener, args: ['input',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTextareaAutosize, [{\n        type: Directive,\n        args: [{\n                selector: 'textarea[cdkTextareaAutosize]',\n                exportAs: 'cdkTextareaAutosize',\n                host: {\n                    'class': 'cdk-textarea-autosize',\n                    // Textarea elements that have the directive applied should have a single row by default.\n                    // Browsers normally show two rows by default and therefore this limits the minRows binding.\n                    'rows': '1'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { minRows: [{\n            type: Input,\n            args: ['cdkAutosizeMinRows']\n        }], maxRows: [{\n            type: Input,\n            args: ['cdkAutosizeMaxRows']\n        }], enabled: [{\n            type: Input,\n            args: ['cdkTextareaAutosize']\n        }], _noopInputHandler: [{\n            type: HostListener,\n            args: ['input']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkTextareaAutosize.ngAcceptInputType_minRows;\n    /** @type {?} */\n    CdkTextareaAutosize.ngAcceptInputType_maxRows;\n    /** @type {?} */\n    CdkTextareaAutosize.ngAcceptInputType_enabled;\n    /**\n     * Keep track of the previous textarea value to avoid resizing when the value hasn't changed.\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._previousValue;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._initialHeight;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._destroyed;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._minRows;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._maxRows;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._enabled;\n    /**\n     * Value of minRows as of last resize. If the minRows has decreased, the\n     * height of the textarea needs to be recomputed to reflect the new minimum. The maxHeight\n     * does not have the same problem because it does not affect the textarea's scrollHeight.\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._previousMinRows;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._textareaElement;\n    /**\n     * Cached height of a textarea with a single row.\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._cachedLineHeight;\n    /**\n     * Used to reference correct document/window\n     * @type {?}\n     * @protected\n     */\n    CdkTextareaAutosize.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._ngZone;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/text-field/text-field-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass TextFieldModule {\n}\nTextFieldModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: TextFieldModule });\nTextFieldModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function TextFieldModule_Factory(t) { return new (t || TextFieldModule)(); }, imports: [[PlatformModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TextFieldModule, { declarations: function () { return [CdkAutofill,\n        CdkTextareaAutosize]; }, imports: function () { return [PlatformModule]; }, exports: function () { return [CdkAutofill,\n        CdkTextareaAutosize]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TextFieldModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [CdkAutofill, CdkTextareaAutosize],\n                imports: [PlatformModule],\n                exports: [CdkAutofill, CdkTextareaAutosize]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/text-field/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AutofillMonitor, CdkAutofill, CdkTextareaAutosize, TextFieldModule };\n\n//# sourceMappingURL=text-field.js.map","import { Directive, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, NgModule } from '@angular/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { MatCommonModule } from '@angular/material/core';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/card/card.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Content of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\n\nconst _c0 = [\"*\", [[\"mat-card-footer\"]]];\nconst _c1 = [\"*\", \"mat-card-footer\"];\nconst _c2 = [[[\"\", \"mat-card-avatar\", \"\"], [\"\", \"matCardAvatar\", \"\"]], [[\"mat-card-title\"], [\"mat-card-subtitle\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardTitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], \"*\"];\nconst _c3 = [\"[mat-card-avatar], [matCardAvatar]\", \"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\", \"*\"];\nconst _c4 = [[[\"mat-card-title\"], [\"mat-card-subtitle\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardTitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], [[\"img\"]], \"*\"];\nconst _c5 = [\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\", \"img\", \"*\"];\nclass MatCardContent {\n}\nMatCardContent.ɵfac = function MatCardContent_Factory(t) { return new (t || MatCardContent)(); };\nMatCardContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardContent, selectors: [[\"mat-card-content\"], [\"\", \"mat-card-content\", \"\"], [\"\", \"matCardContent\", \"\"]], hostAttrs: [1, \"mat-card-content\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardContent, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-card-content, [mat-card-content], [matCardContent]',\n                host: { 'class': 'mat-card-content' }\n            }]\n    }], null, null); })();\n/**\n * Title of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nclass MatCardTitle {\n}\nMatCardTitle.ɵfac = function MatCardTitle_Factory(t) { return new (t || MatCardTitle)(); };\nMatCardTitle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardTitle, selectors: [[\"mat-card-title\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"matCardTitle\", \"\"]], hostAttrs: [1, \"mat-card-title\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardTitle, [{\n        type: Directive,\n        args: [{\n                selector: `mat-card-title, [mat-card-title], [matCardTitle]`,\n                host: {\n                    'class': 'mat-card-title'\n                }\n            }]\n    }], null, null); })();\n/**\n * Sub-title of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nclass MatCardSubtitle {\n}\nMatCardSubtitle.ɵfac = function MatCardSubtitle_Factory(t) { return new (t || MatCardSubtitle)(); };\nMatCardSubtitle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardSubtitle, selectors: [[\"mat-card-subtitle\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], hostAttrs: [1, \"mat-card-subtitle\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardSubtitle, [{\n        type: Directive,\n        args: [{\n                selector: `mat-card-subtitle, [mat-card-subtitle], [matCardSubtitle]`,\n                host: {\n                    'class': 'mat-card-subtitle'\n                }\n            }]\n    }], null, null); })();\n/**\n * Action section of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nclass MatCardActions {\n    constructor() {\n        /**\n         * Position of the actions inside the card.\n         */\n        this.align = 'start';\n    }\n}\nMatCardActions.ɵfac = function MatCardActions_Factory(t) { return new (t || MatCardActions)(); };\nMatCardActions.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardActions, selectors: [[\"mat-card-actions\"]], hostAttrs: [1, \"mat-card-actions\"], hostVars: 2, hostBindings: function MatCardActions_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-card-actions-align-end\", ctx.align === \"end\");\n    } }, inputs: { align: \"align\" }, exportAs: [\"matCardActions\"] });\nMatCardActions.propDecorators = {\n    align: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardActions, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-card-actions',\n                exportAs: 'matCardActions',\n                host: {\n                    'class': 'mat-card-actions',\n                    '[class.mat-card-actions-align-end]': 'align === \"end\"'\n                }\n            }]\n    }], function () { return []; }, { align: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * Position of the actions inside the card.\n     * @type {?}\n     */\n    MatCardActions.prototype.align;\n}\n/**\n * Footer of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nclass MatCardFooter {\n}\nMatCardFooter.ɵfac = function MatCardFooter_Factory(t) { return new (t || MatCardFooter)(); };\nMatCardFooter.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardFooter, selectors: [[\"mat-card-footer\"]], hostAttrs: [1, \"mat-card-footer\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardFooter, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-card-footer',\n                host: { 'class': 'mat-card-footer' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardImage {\n}\nMatCardImage.ɵfac = function MatCardImage_Factory(t) { return new (t || MatCardImage)(); };\nMatCardImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardImage, selectors: [[\"\", \"mat-card-image\", \"\"], [\"\", \"matCardImage\", \"\"]], hostAttrs: [1, \"mat-card-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-image], [matCardImage]',\n                host: { 'class': 'mat-card-image' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardSmImage {\n}\nMatCardSmImage.ɵfac = function MatCardSmImage_Factory(t) { return new (t || MatCardSmImage)(); };\nMatCardSmImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardSmImage, selectors: [[\"\", \"mat-card-sm-image\", \"\"], [\"\", \"matCardImageSmall\", \"\"]], hostAttrs: [1, \"mat-card-sm-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardSmImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-sm-image], [matCardImageSmall]',\n                host: { 'class': 'mat-card-sm-image' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardMdImage {\n}\nMatCardMdImage.ɵfac = function MatCardMdImage_Factory(t) { return new (t || MatCardMdImage)(); };\nMatCardMdImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardMdImage, selectors: [[\"\", \"mat-card-md-image\", \"\"], [\"\", \"matCardImageMedium\", \"\"]], hostAttrs: [1, \"mat-card-md-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardMdImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-md-image], [matCardImageMedium]',\n                host: { 'class': 'mat-card-md-image' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardLgImage {\n}\nMatCardLgImage.ɵfac = function MatCardLgImage_Factory(t) { return new (t || MatCardLgImage)(); };\nMatCardLgImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardLgImage, selectors: [[\"\", \"mat-card-lg-image\", \"\"], [\"\", \"matCardImageLarge\", \"\"]], hostAttrs: [1, \"mat-card-lg-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardLgImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-lg-image], [matCardImageLarge]',\n                host: { 'class': 'mat-card-lg-image' }\n            }]\n    }], null, null); })();\n/**\n * Large image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardXlImage {\n}\nMatCardXlImage.ɵfac = function MatCardXlImage_Factory(t) { return new (t || MatCardXlImage)(); };\nMatCardXlImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardXlImage, selectors: [[\"\", \"mat-card-xl-image\", \"\"], [\"\", \"matCardImageXLarge\", \"\"]], hostAttrs: [1, \"mat-card-xl-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardXlImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-xl-image], [matCardImageXLarge]',\n                host: { 'class': 'mat-card-xl-image' }\n            }]\n    }], null, null); })();\n/**\n * Avatar image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardAvatar {\n}\nMatCardAvatar.ɵfac = function MatCardAvatar_Factory(t) { return new (t || MatCardAvatar)(); };\nMatCardAvatar.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardAvatar, selectors: [[\"\", \"mat-card-avatar\", \"\"], [\"\", \"matCardAvatar\", \"\"]], hostAttrs: [1, \"mat-card-avatar\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardAvatar, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-avatar], [matCardAvatar]',\n                host: { 'class': 'mat-card-avatar' }\n            }]\n    }], null, null); })();\n/**\n * A basic content container component that adds the styles of a Material design card.\n *\n * While this component can be used alone, it also provides a number\n * of preset styles for common card sections, including:\n * - mat-card-title\n * - mat-card-subtitle\n * - mat-card-content\n * - mat-card-actions\n * - mat-card-footer\n */\nclass MatCard {\n    // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n    /**\n     * @param {?=} _animationMode\n     */\n    constructor(_animationMode) {\n        this._animationMode = _animationMode;\n    }\n}\nMatCard.ɵfac = function MatCard_Factory(t) { return new (t || MatCard)(ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatCard.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCard, selectors: [[\"mat-card\"]], hostAttrs: [1, \"mat-card\", \"mat-focus-indicator\"], hostVars: 2, hostBindings: function MatCard_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, exportAs: [\"matCard\"], ngContentSelectors: _c1, decls: 2, vars: 0, template: function MatCard_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵprojection(1, 1);\n    } }, styles: [\".mat-card{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:block;position:relative;padding:16px;border-radius:4px}._mat-animation-noopable.mat-card{transition:none;animation:none}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}.cdk-high-contrast-active .mat-card{outline:solid 1px}.mat-card-actions,.mat-card-subtitle,.mat-card-content{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button,.mat-card-actions .mat-stroked-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media(max-width: 599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card>:first-child,.mat-card-content>:first-child{margin-top:0}.mat-card>:last-child:not(.mat-card-footer),.mat-card-content>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions .mat-button:first-child,.mat-card-actions .mat-raised-button:first-child,.mat-card-actions .mat-stroked-button:first-child{margin-left:0;margin-right:0}.mat-card-title:not(:first-child),.mat-card-subtitle:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatCard.ctorParameters = () => [\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCard, [{\n        type: Component,\n        args: [{\n                selector: 'mat-card',\n                exportAs: 'matCard',\n                template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-card-footer\\\"></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'class': 'mat-card mat-focus-indicator',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                },\n                styles: [\".mat-card{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:block;position:relative;padding:16px;border-radius:4px}._mat-animation-noopable.mat-card{transition:none;animation:none}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}.cdk-high-contrast-active .mat-card{outline:solid 1px}.mat-card-actions,.mat-card-subtitle,.mat-card-content{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button,.mat-card-actions .mat-stroked-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media(max-width: 599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card>:first-child,.mat-card-content>:first-child{margin-top:0}.mat-card>:last-child:not(.mat-card-footer),.mat-card-content>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions .mat-button:first-child,.mat-card-actions .mat-raised-button:first-child,.mat-card-actions .mat-stroked-button:first-child{margin-left:0;margin-right:0}.mat-card-title:not(:first-child),.mat-card-subtitle:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\\n\"]\n            }]\n    }], function () { return [{ type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    MatCard.prototype._animationMode;\n}\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a\n * preset header section (i.e. a title, subtitle, and avatar layout).\n * \\@docs-private\n */\nclass MatCardHeader {\n}\nMatCardHeader.ɵfac = function MatCardHeader_Factory(t) { return new (t || MatCardHeader)(); };\nMatCardHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCardHeader, selectors: [[\"mat-card-header\"]], hostAttrs: [1, \"mat-card-header\"], ngContentSelectors: _c3, decls: 4, vars: 0, consts: [[1, \"mat-card-header-text\"]], template: function MatCardHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c2);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 0);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(3, 2);\n    } }, encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-card-header',\n                template: \"<ng-content select=\\\"[mat-card-avatar], [matCardAvatar]\\\"></ng-content>\\n<div class=\\\"mat-card-header-text\\\">\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: { 'class': 'mat-card-header' }\n            }]\n    }], null, null); })();\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a preset\n * layout that groups an image with a title section.\n * \\@docs-private\n */\nclass MatCardTitleGroup {\n}\nMatCardTitleGroup.ɵfac = function MatCardTitleGroup_Factory(t) { return new (t || MatCardTitleGroup)(); };\nMatCardTitleGroup.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCardTitleGroup, selectors: [[\"mat-card-title-group\"]], hostAttrs: [1, \"mat-card-title-group\"], ngContentSelectors: _c5, decls: 4, vars: 0, template: function MatCardTitleGroup_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵelementStart(0, \"div\");\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵprojection(3, 2);\n    } }, encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardTitleGroup, [{\n        type: Component,\n        args: [{\n                selector: 'mat-card-title-group',\n                template: \"<div>\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content select=\\\"img\\\"></ng-content>\\n<ng-content></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: { 'class': 'mat-card-title-group' }\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/card/card-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatCardModule {\n}\nMatCardModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatCardModule });\nMatCardModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatCardModule_Factory(t) { return new (t || MatCardModule)(); }, imports: [[MatCommonModule],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatCardModule, { declarations: function () { return [MatCard,\n        MatCardHeader,\n        MatCardTitleGroup,\n        MatCardContent,\n        MatCardTitle,\n        MatCardSubtitle,\n        MatCardActions,\n        MatCardFooter,\n        MatCardSmImage,\n        MatCardMdImage,\n        MatCardLgImage,\n        MatCardImage,\n        MatCardXlImage,\n        MatCardAvatar]; }, imports: function () { return [MatCommonModule]; }, exports: function () { return [MatCard,\n        MatCardHeader,\n        MatCardTitleGroup,\n        MatCardContent,\n        MatCardTitle,\n        MatCardSubtitle,\n        MatCardActions,\n        MatCardFooter,\n        MatCardSmImage,\n        MatCardMdImage,\n        MatCardLgImage,\n        MatCardImage,\n        MatCardXlImage,\n        MatCardAvatar,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [\n                    MatCard,\n                    MatCardHeader,\n                    MatCardTitleGroup,\n                    MatCardContent,\n                    MatCardTitle,\n                    MatCardSubtitle,\n                    MatCardActions,\n                    MatCardFooter,\n                    MatCardSmImage,\n                    MatCardMdImage,\n                    MatCardLgImage,\n                    MatCardImage,\n                    MatCardXlImage,\n                    MatCardAvatar,\n                    MatCommonModule,\n                ],\n                declarations: [\n                    MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle,\n                    MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage,\n                    MatCardXlImage, MatCardAvatar,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/card/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatCard, MatCardActions, MatCardAvatar, MatCardContent, MatCardFooter, MatCardHeader, MatCardImage, MatCardLgImage, MatCardMdImage, MatCardModule, MatCardSmImage, MatCardSubtitle, MatCardTitle, MatCardTitleGroup, MatCardXlImage };\n\n//# sourceMappingURL=card.js.map","import { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { InjectionToken, forwardRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, NgZone, Attribute, Optional, Inject, Input, Output, ViewChild, Directive, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, CheckboxRequiredValidator } from '@angular/forms';\nimport { mixinTabIndex, mixinColor, mixinDisableRipple, mixinDisabled, MatRipple, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { ObserversModule } from '@angular/cdk/observers';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/checkbox/checkbox-config.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default `mat-checkbox` options that can be overridden.\n * @record\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/observers';\n\nconst _c0 = [\"input\"];\nconst _c1 = function () { return { enterDuration: 150 }; };\nconst _c2 = [\"*\"];\nfunction MatCheckboxDefaultOptions() { }\nif (false) {\n    /** @type {?|undefined} */\n    MatCheckboxDefaultOptions.prototype.color;\n    /** @type {?|undefined} */\n    MatCheckboxDefaultOptions.prototype.clickAction;\n}\n/**\n * Injection token to be used to override the default options for `mat-checkbox`.\n * @type {?}\n */\nconst MAT_CHECKBOX_DEFAULT_OPTIONS = new InjectionToken('mat-checkbox-default-options', {\n    providedIn: 'root',\n    factory: MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        color: 'accent',\n        clickAction: 'check-indeterminate',\n    };\n}\n/**\n * Injection token that can be used to specify the checkbox click behavior.\n * @deprecated Injection token will be removed, use `MAT_CHECKBOX_DEFAULT_OPTIONS` instead.\n * \\@breaking-change 10.0.0\n * @type {?}\n */\nconst MAT_CHECKBOX_CLICK_ACTION = new InjectionToken('mat-checkbox-click-action');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/checkbox/checkbox.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Increasing integer for generating unique ids for checkbox components.\n/** @type {?} */\nlet nextUniqueId = 0;\n/**\n * Provider Expression that allows mat-checkbox to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * \\@docs-private\n * @type {?}\n */\nconst MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatCheckbox)),\n    multi: true\n};\n/** @enum {number} */\nconst TransitionCheckState = {\n    /** The initial state of the component before any user interaction. */\n    Init: 0,\n    /** The state representing the component when it's becoming checked. */\n    Checked: 1,\n    /** The state representing the component when it's becoming unchecked. */\n    Unchecked: 2,\n    /** The state representing the component when it's becoming indeterminate. */\n    Indeterminate: 3,\n};\n/**\n * Change event object emitted by MatCheckbox.\n */\nclass MatCheckboxChange {\n}\nif (false) {\n    /**\n     * The source MatCheckbox of the event.\n     * @type {?}\n     */\n    MatCheckboxChange.prototype.source;\n    /**\n     * The new `checked` value of the checkbox.\n     * @type {?}\n     */\n    MatCheckboxChange.prototype.checked;\n}\n// Boilerplate for applying mixins to MatCheckbox.\n/**\n * \\@docs-private\n */\nclass MatCheckboxBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatCheckboxBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatCheckboxMixinBase = mixinTabIndex(mixinColor(mixinDisableRipple(mixinDisabled(MatCheckboxBase))));\n/**\n * A material design checkbox component. Supports all of the functionality of an HTML5 checkbox,\n * and exposes a similar API. A MatCheckbox can be either checked, unchecked, indeterminate, or\n * disabled. Note that all additional accessibility attributes are taken care of by the component,\n * so there is no need to provide them yourself. However, if you want to omit a label and still\n * have the checkbox be accessible, you may supply an [aria-label] input.\n * See: https://material.io/design/components/selection-controls.html\n */\nclass MatCheckbox extends _MatCheckboxMixinBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?} _focusMonitor\n     * @param {?} _ngZone\n     * @param {?} tabIndex\n     * @param {?} _clickAction\n     * @param {?=} _animationMode\n     * @param {?=} _options\n     */\n    constructor(elementRef, _changeDetectorRef, _focusMonitor, _ngZone, tabIndex, _clickAction, _animationMode, _options) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._focusMonitor = _focusMonitor;\n        this._ngZone = _ngZone;\n        this._clickAction = _clickAction;\n        this._animationMode = _animationMode;\n        this._options = _options;\n        /**\n         * Attached to the aria-label attribute of the host element. In most cases, aria-labelledby will\n         * take precedence so this may be omitted.\n         */\n        this.ariaLabel = '';\n        /**\n         * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n         */\n        this.ariaLabelledby = null;\n        this._uniqueId = `mat-checkbox-${++nextUniqueId}`;\n        /**\n         * A unique id for the checkbox input. If none is supplied, it will be auto-generated.\n         */\n        this.id = this._uniqueId;\n        /**\n         * Whether the label should appear after or before the checkbox. Defaults to 'after'\n         */\n        this.labelPosition = 'after';\n        /**\n         * Name value will be applied to the input element if present\n         */\n        this.name = null;\n        /**\n         * Event emitted when the checkbox's `checked` value changes.\n         */\n        this.change = new EventEmitter();\n        /**\n         * Event emitted when the checkbox's `indeterminate` value changes.\n         */\n        this.indeterminateChange = new EventEmitter();\n        /**\n         * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n         * \\@docs-private\n         */\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        this._currentAnimationClass = '';\n        this._currentCheckState = 0 /* Init */;\n        this._controlValueAccessorChangeFn = (/**\n         * @return {?}\n         */\n        () => { });\n        this._checked = false;\n        this._disabled = false;\n        this._indeterminate = false;\n        this._options = this._options || {};\n        if (this._options.color) {\n            this.color = this._options.color;\n        }\n        this.tabIndex = parseInt(tabIndex) || 0;\n        this._focusMonitor.monitor(elementRef, true).subscribe((/**\n         * @param {?} focusOrigin\n         * @return {?}\n         */\n        focusOrigin => {\n            if (!focusOrigin) {\n                // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n                // Angular does not expect events to be raised during change detection, so any state change\n                // (such as a form control's 'ng-touched') will cause a changed-after-checked error.\n                // See https://github.com/angular/angular/issues/17793. To work around this, we defer\n                // telling the form control it has been touched until the next tick.\n                Promise.resolve().then((/**\n                 * @return {?}\n                 */\n                () => {\n                    this._onTouched();\n                    _changeDetectorRef.markForCheck();\n                }));\n            }\n        }));\n        // TODO: Remove this after the `_clickAction` parameter is removed as an injection parameter.\n        this._clickAction = this._clickAction || this._options.clickAction;\n    }\n    /**\n     * Returns the unique id for the visual hidden input.\n     * @return {?}\n     */\n    get inputId() { return `${this.id || this._uniqueId}-input`; }\n    /**\n     * Whether the checkbox is required.\n     * @return {?}\n     */\n    get required() { return this._required; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) { this._required = coerceBooleanProperty(value); }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        this._syncIndeterminate(this._indeterminate);\n    }\n    // TODO: Delete next major revision.\n    /**\n     * @return {?}\n     */\n    ngAfterViewChecked() { }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /**\n     * Whether the checkbox is checked.\n     * @return {?}\n     */\n    get checked() { return this._checked; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set checked(value) {\n        if (value != this.checked) {\n            this._checked = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Whether the checkbox is disabled. This fully overrides the implementation provided by\n     * mixinDisabled, but the mixin is still required because mixinTabIndex requires it.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this.disabled) {\n            this._disabled = newValue;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Whether the checkbox is indeterminate. This is also known as \"mixed\" mode and can be used to\n     * represent a checkbox with three states, e.g. a checkbox that represents a nested list of\n     * checkable items. Note that whenever checkbox is manually clicked, indeterminate is immediately\n     * set to false.\n     * @return {?}\n     */\n    get indeterminate() { return this._indeterminate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set indeterminate(value) {\n        /** @type {?} */\n        const changed = value != this._indeterminate;\n        this._indeterminate = coerceBooleanProperty(value);\n        if (changed) {\n            if (this._indeterminate) {\n                this._transitionCheckState(3 /* Indeterminate */);\n            }\n            else {\n                this._transitionCheckState(this.checked ? 1 /* Checked */ : 2 /* Unchecked */);\n            }\n            this.indeterminateChange.emit(this._indeterminate);\n        }\n        this._syncIndeterminate(this._indeterminate);\n    }\n    /**\n     * @return {?}\n     */\n    _isRippleDisabled() {\n        return this.disableRipple || this.disabled;\n    }\n    /**\n     * Method being called whenever the label text changes.\n     * @return {?}\n     */\n    _onLabelTextChange() {\n        // Since the event of the `cdkObserveContent` directive runs outside of the zone, the checkbox\n        // component will be only marked for check, but no actual change detection runs automatically.\n        // Instead of going back into the zone in order to trigger a change detection which causes\n        // *all* components to be checked (if explicitly marked or not using OnPush), we only trigger\n        // an explicit change detection for the checkbox view and its children.\n        this._changeDetectorRef.detectChanges();\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        this.checked = !!value;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /**\n     * @return {?}\n     */\n    _getAriaChecked() {\n        if (this.checked) {\n            return 'true';\n        }\n        return this.indeterminate ? 'mixed' : 'false';\n    }\n    /**\n     * @private\n     * @param {?} newState\n     * @return {?}\n     */\n    _transitionCheckState(newState) {\n        /** @type {?} */\n        let oldState = this._currentCheckState;\n        /** @type {?} */\n        let element = this._elementRef.nativeElement;\n        if (oldState === newState) {\n            return;\n        }\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.remove(this._currentAnimationClass);\n        }\n        this._currentAnimationClass = this._getAnimationClassForCheckStateTransition(oldState, newState);\n        this._currentCheckState = newState;\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.add(this._currentAnimationClass);\n            // Remove the animation class to avoid animation when the checkbox is moved between containers\n            /** @type {?} */\n            const animationClass = this._currentAnimationClass;\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                setTimeout((/**\n                 * @return {?}\n                 */\n                () => {\n                    element.classList.remove(animationClass);\n                }), 1000);\n            }));\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _emitChangeEvent() {\n        /** @type {?} */\n        const event = new MatCheckboxChange();\n        event.source = this;\n        event.checked = this.checked;\n        this._controlValueAccessorChangeFn(this.checked);\n        this.change.emit(event);\n    }\n    /**\n     * Toggles the `checked` state of the checkbox.\n     * @return {?}\n     */\n    toggle() {\n        this.checked = !this.checked;\n    }\n    /**\n     * Event handler for checkbox input element.\n     * Toggles checked state if element is not disabled.\n     * Do not toggle on (change) event since IE doesn't fire change event when\n     *   indeterminate checkbox is clicked.\n     * @param {?} event\n     * @return {?}\n     */\n    _onInputClick(event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `checkbox` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n        // If resetIndeterminate is false, and the current state is indeterminate, do nothing on click\n        if (!this.disabled && this._clickAction !== 'noop') {\n            // When user manually click on the checkbox, `indeterminate` is set to false.\n            if (this.indeterminate && this._clickAction !== 'check') {\n                Promise.resolve().then((/**\n                 * @return {?}\n                 */\n                () => {\n                    this._indeterminate = false;\n                    this.indeterminateChange.emit(this._indeterminate);\n                }));\n            }\n            this.toggle();\n            this._transitionCheckState(this._checked ? 1 /* Checked */ : 2 /* Unchecked */);\n            // Emit our custom change event if the native input emitted one.\n            // It is important to only emit it, if the native input triggered one, because\n            // we don't want to trigger a change event, when the `checked` variable changes for example.\n            this._emitChangeEvent();\n        }\n        else if (!this.disabled && this._clickAction === 'noop') {\n            // Reset native input when clicked with noop. The native checkbox becomes checked after\n            // click, reset it to be align with `checked` value of `mat-checkbox`.\n            this._inputElement.nativeElement.checked = this.checked;\n            this._inputElement.nativeElement.indeterminate = this.indeterminate;\n        }\n    }\n    /**\n     * Focuses the checkbox.\n     * @param {?=} origin\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(origin = 'keyboard', options) {\n        this._focusMonitor.focusVia(this._inputElement, origin, options);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onInteractionEvent(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n    }\n    /**\n     * @private\n     * @param {?} oldState\n     * @param {?} newState\n     * @return {?}\n     */\n    _getAnimationClassForCheckStateTransition(oldState, newState) {\n        // Don't transition if animations are disabled.\n        if (this._animationMode === 'NoopAnimations') {\n            return '';\n        }\n        /** @type {?} */\n        let animSuffix = '';\n        switch (oldState) {\n            case 0 /* Init */:\n                // Handle edge case where user interacts with checkbox that does not have [(ngModel)] or\n                // [checked] bound to it.\n                if (newState === 1 /* Checked */) {\n                    animSuffix = 'unchecked-checked';\n                }\n                else if (newState == 3 /* Indeterminate */) {\n                    animSuffix = 'unchecked-indeterminate';\n                }\n                else {\n                    return '';\n                }\n                break;\n            case 2 /* Unchecked */:\n                animSuffix = newState === 1 /* Checked */ ?\n                    'unchecked-checked' : 'unchecked-indeterminate';\n                break;\n            case 1 /* Checked */:\n                animSuffix = newState === 2 /* Unchecked */ ?\n                    'checked-unchecked' : 'checked-indeterminate';\n                break;\n            case 3 /* Indeterminate */:\n                animSuffix = newState === 1 /* Checked */ ?\n                    'indeterminate-checked' : 'indeterminate-unchecked';\n                break;\n        }\n        return `mat-checkbox-anim-${animSuffix}`;\n    }\n    /**\n     * Syncs the indeterminate value with the checkbox DOM node.\n     *\n     * We sync `indeterminate` directly on the DOM node, because in Ivy the check for whether a\n     * property is supported on an element boils down to `if (propName in element)`. Domino's\n     * HTMLInputElement doesn't have an `indeterminate` property so Ivy will warn during\n     * server-side rendering.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _syncIndeterminate(value) {\n        /** @type {?} */\n        const nativeCheckbox = this._inputElement;\n        if (nativeCheckbox) {\n            nativeCheckbox.nativeElement.indeterminate = value;\n        }\n    }\n}\nMatCheckbox.ɵfac = function MatCheckbox_Factory(t) { return new (t || MatCheckbox)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(MAT_CHECKBOX_CLICK_ACTION, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_CHECKBOX_DEFAULT_OPTIONS, 8)); };\nMatCheckbox.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCheckbox, selectors: [[\"mat-checkbox\"]], viewQuery: function MatCheckbox_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵviewQuery(MatRipple, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputElement = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.ripple = _t.first);\n    } }, hostAttrs: [1, \"mat-checkbox\"], hostVars: 12, hostBindings: function MatCheckbox_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"tabindex\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-checkbox-indeterminate\", ctx.indeterminate)(\"mat-checkbox-checked\", ctx.checked)(\"mat-checkbox-disabled\", ctx.disabled)(\"mat-checkbox-label-before\", ctx.labelPosition == \"before\")(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], id: \"id\", labelPosition: \"labelPosition\", name: \"name\", required: \"required\", checked: \"checked\", disabled: \"disabled\", indeterminate: \"indeterminate\", value: \"value\" }, outputs: { change: \"change\", indeterminateChange: \"indeterminateChange\" }, exportAs: [\"matCheckbox\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c2, decls: 17, vars: 19, consts: [[1, \"mat-checkbox-layout\"], [\"label\", \"\"], [1, \"mat-checkbox-inner-container\"], [\"type\", \"checkbox\", 1, \"mat-checkbox-input\", \"cdk-visually-hidden\", 3, \"id\", \"required\", \"checked\", \"disabled\", \"tabIndex\", \"change\", \"click\"], [\"input\", \"\"], [\"matRipple\", \"\", 1, \"mat-checkbox-ripple\", \"mat-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleRadius\", \"matRippleCentered\", \"matRippleAnimation\"], [1, \"mat-ripple-element\", \"mat-checkbox-persistent-ripple\"], [1, \"mat-checkbox-frame\"], [1, \"mat-checkbox-background\"], [\"version\", \"1.1\", \"focusable\", \"false\", \"viewBox\", \"0 0 24 24\", 0, \"xml\", \"space\", \"preserve\", 1, \"mat-checkbox-checkmark\"], [\"fill\", \"none\", \"stroke\", \"white\", \"d\", \"M4.1,12.7 9,17.6 20.3,6.3\", 1, \"mat-checkbox-checkmark-path\"], [1, \"mat-checkbox-mixedmark\"], [1, \"mat-checkbox-label\", 3, \"cdkObserveContent\"], [\"checkboxLabel\", \"\"], [2, \"display\", \"none\"]], template: function MatCheckbox_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"label\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"input\", 3, 4);\n        ɵngcc0.ɵɵlistener(\"change\", function MatCheckbox_Template_input_change_3_listener($event) { return ctx._onInteractionEvent($event); })(\"click\", function MatCheckbox_Template_input_click_3_listener($event) { return ctx._onInputClick($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5);\n        ɵngcc0.ɵɵelement(6, \"div\", 6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(7, \"div\", 7);\n        ɵngcc0.ɵɵelementStart(8, \"div\", 8);\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(9, \"svg\", 9);\n        ɵngcc0.ɵɵelement(10, \"path\", 10);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵnamespaceHTML();\n        ɵngcc0.ɵɵelement(11, \"div\", 11);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(12, \"span\", 12, 13);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatCheckbox_Template_span_cdkObserveContent_12_listener() { return ctx._onLabelTextChange(); });\n        ɵngcc0.ɵɵelementStart(14, \"span\", 14);\n        ɵngcc0.ɵɵtext(15, \"\\u00A0\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(16);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(1);\n        const _r2 = ɵngcc0.ɵɵreference(13);\n        ɵngcc0.ɵɵattribute(\"for\", ctx.inputId);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-checkbox-inner-container-no-side-margin\", !_r2.textContent || !_r2.textContent.trim());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.inputId)(\"required\", ctx.required)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled)(\"tabIndex\", ctx.tabIndex);\n        ɵngcc0.ɵɵattribute(\"value\", ctx.value)(\"name\", ctx.name)(\"aria-label\", ctx.ariaLabel || null)(\"aria-labelledby\", ctx.ariaLabelledby)(\"aria-checked\", ctx._getAriaChecked());\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", _r0)(\"matRippleDisabled\", ctx._isRippleDisabled())(\"matRippleRadius\", 20)(\"matRippleCentered\", true)(\"matRippleAnimation\", ɵngcc0.ɵɵpureFunction0(18, _c1));\n    } }, directives: [ɵngcc2.MatRipple, ɵngcc3.CdkObserveContent], styles: [\"@keyframes mat-checkbox-fade-in-background{0%{opacity:0}50%{opacity:1}}@keyframes mat-checkbox-fade-out-background{0%,50%{opacity:1}100%{opacity:0}}@keyframes mat-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:22.910259}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1)}100%{stroke-dashoffset:0}}@keyframes mat-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mat-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);stroke-dashoffset:0}to{stroke-dashoffset:-22.910259}}@keyframes mat-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(45deg)}}@keyframes mat-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:0;transform:rotate(45deg)}to{opacity:1;transform:rotate(360deg)}}@keyframes mat-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:0;transform:rotate(-45deg)}to{opacity:1;transform:rotate(0deg)}}@keyframes mat-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(315deg)}}@keyframes mat-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;opacity:1;transform:scaleX(1)}32.8%,100%{opacity:0;transform:scaleX(0)}}.mat-checkbox-background,.mat-checkbox-frame{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:2px;box-sizing:border-box;pointer-events:none}.mat-checkbox{transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);cursor:pointer;-webkit-tap-highlight-color:transparent}._mat-animation-noopable.mat-checkbox{transition:none;animation:none}.mat-checkbox .mat-ripple-element:not(.mat-checkbox-persistent-ripple){opacity:.16}.mat-checkbox-layout{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:inherit;align-items:baseline;vertical-align:middle;display:inline-flex;white-space:nowrap}.mat-checkbox-label{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto}.mat-checkbox-inner-container{display:inline-block;height:16px;line-height:0;margin:auto;margin-right:8px;order:0;position:relative;vertical-align:middle;white-space:nowrap;width:16px;flex-shrink:0}[dir=rtl] .mat-checkbox-inner-container{margin-left:8px;margin-right:auto}.mat-checkbox-inner-container-no-side-margin{margin-left:0;margin-right:0}.mat-checkbox-frame{background-color:transparent;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1);border-width:2px;border-style:solid}._mat-animation-noopable .mat-checkbox-frame{transition:none}.mat-checkbox.cdk-keyboard-focused .cdk-high-contrast-active .mat-checkbox-frame{border-style:dotted}.mat-checkbox-background{align-items:center;display:inline-flex;justify-content:center;transition:background-color 90ms cubic-bezier(0, 0, 0.2, 0.1),opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}._mat-animation-noopable .mat-checkbox-background{transition:none}.cdk-high-contrast-active .mat-checkbox .mat-checkbox-background{background:none}.mat-checkbox-persistent-ripple{width:100%;height:100%;transform:none}.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:.04}.mat-checkbox.cdk-keyboard-focused .mat-checkbox-persistent-ripple{opacity:.12}.mat-checkbox-persistent-ripple,.mat-checkbox.mat-checkbox-disabled .mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:0}@media(hover: none){.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{display:none}}.mat-checkbox-checkmark{top:0;left:0;right:0;bottom:0;position:absolute;width:100%}.mat-checkbox-checkmark-path{stroke-dashoffset:22.910259;stroke-dasharray:22.910259;stroke-width:2.1333333333px}.cdk-high-contrast-black-on-white .mat-checkbox-checkmark-path{stroke:#000 !important}.mat-checkbox-mixedmark{width:calc(100% - 6px);height:2px;opacity:0;transform:scaleX(0) rotate(0deg);border-radius:2px}.cdk-high-contrast-active .mat-checkbox-mixedmark{height:0;border-top:solid 2px;margin-top:2px}.mat-checkbox-label-before .mat-checkbox-inner-container{order:1;margin-left:8px;margin-right:auto}[dir=rtl] .mat-checkbox-label-before .mat-checkbox-inner-container{margin-left:auto;margin-right:8px}.mat-checkbox-checked .mat-checkbox-checkmark{opacity:1}.mat-checkbox-checked .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-checked .mat-checkbox-mixedmark{transform:scaleX(1) rotate(-45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark{opacity:0;transform:rotate(45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-indeterminate .mat-checkbox-mixedmark{opacity:1;transform:scaleX(1) rotate(0deg)}.mat-checkbox-unchecked .mat-checkbox-background{background-color:transparent}.mat-checkbox-disabled{cursor:default}.cdk-high-contrast-active .mat-checkbox-disabled{opacity:.5}.mat-checkbox-anim-unchecked-checked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-checked .mat-checkbox-checkmark-path{animation:180ms linear 0ms mat-checkbox-unchecked-checked-checkmark-path}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-unchecked-indeterminate-mixedmark}.mat-checkbox-anim-checked-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-checked-unchecked .mat-checkbox-checkmark-path{animation:90ms linear 0ms mat-checkbox-checked-unchecked-checkmark-path}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-checkmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-checkmark}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-mixedmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-checkmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-checkmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-mixedmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-mixedmark}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-mixedmark{animation:300ms linear 0ms mat-checkbox-indeterminate-unchecked-mixedmark}.mat-checkbox-input{bottom:0;left:50%}.mat-checkbox .mat-checkbox-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatCheckbox.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: FocusMonitor },\n    { type: NgZone },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_CHECKBOX_CLICK_ACTION,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_CHECKBOX_DEFAULT_OPTIONS,] }] }\n];\nMatCheckbox.propDecorators = {\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    id: [{ type: Input }],\n    required: [{ type: Input }],\n    labelPosition: [{ type: Input }],\n    name: [{ type: Input }],\n    change: [{ type: Output }],\n    indeterminateChange: [{ type: Output }],\n    value: [{ type: Input }],\n    _inputElement: [{ type: ViewChild, args: ['input',] }],\n    ripple: [{ type: ViewChild, args: [MatRipple,] }],\n    checked: [{ type: Input }],\n    disabled: [{ type: Input }],\n    indeterminate: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCheckbox, [{\n        type: Component,\n        args: [{\n                selector: 'mat-checkbox',\n                template: \"<label [attr.for]=\\\"inputId\\\" class=\\\"mat-checkbox-layout\\\" #label>\\n  <div class=\\\"mat-checkbox-inner-container\\\"\\n       [class.mat-checkbox-inner-container-no-side-margin]=\\\"!checkboxLabel.textContent || !checkboxLabel.textContent.trim()\\\">\\n    <input #input\\n           class=\\\"mat-checkbox-input cdk-visually-hidden\\\" type=\\\"checkbox\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [checked]=\\\"checked\\\"\\n           [attr.value]=\\\"value\\\"\\n           [disabled]=\\\"disabled\\\"\\n           [attr.name]=\\\"name\\\"\\n           [tabIndex]=\\\"tabIndex\\\"\\n           [attr.aria-label]=\\\"ariaLabel || null\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           [attr.aria-checked]=\\\"_getAriaChecked()\\\"\\n           (change)=\\\"_onInteractionEvent($event)\\\"\\n           (click)=\\\"_onInputClick($event)\\\">\\n    <div matRipple class=\\\"mat-checkbox-ripple mat-focus-indicator\\\"\\n         [matRippleTrigger]=\\\"label\\\"\\n         [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n         [matRippleRadius]=\\\"20\\\"\\n         [matRippleCentered]=\\\"true\\\"\\n         [matRippleAnimation]=\\\"{enterDuration: 150}\\\">\\n      <div class=\\\"mat-ripple-element mat-checkbox-persistent-ripple\\\"></div>\\n    </div>\\n    <div class=\\\"mat-checkbox-frame\\\"></div>\\n    <div class=\\\"mat-checkbox-background\\\">\\n      <svg version=\\\"1.1\\\"\\n           focusable=\\\"false\\\"\\n           class=\\\"mat-checkbox-checkmark\\\"\\n           viewBox=\\\"0 0 24 24\\\"\\n           xml:space=\\\"preserve\\\">\\n        <path class=\\\"mat-checkbox-checkmark-path\\\"\\n              fill=\\\"none\\\"\\n              stroke=\\\"white\\\"\\n              d=\\\"M4.1,12.7 9,17.6 20.3,6.3\\\"/>\\n      </svg>\\n      <!-- Element for rendering the indeterminate state checkbox. -->\\n      <div class=\\\"mat-checkbox-mixedmark\\\"></div>\\n    </div>\\n  </div>\\n  <span class=\\\"mat-checkbox-label\\\" #checkboxLabel (cdkObserveContent)=\\\"_onLabelTextChange()\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </span>\\n</label>\\n\",\n                exportAs: 'matCheckbox',\n                host: {\n                    'class': 'mat-checkbox',\n                    '[id]': 'id',\n                    '[attr.tabindex]': 'null',\n                    '[class.mat-checkbox-indeterminate]': 'indeterminate',\n                    '[class.mat-checkbox-checked]': 'checked',\n                    '[class.mat-checkbox-disabled]': 'disabled',\n                    '[class.mat-checkbox-label-before]': 'labelPosition == \"before\"',\n                    '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`\n                },\n                providers: [MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR],\n                inputs: ['disableRipple', 'color', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\"@keyframes mat-checkbox-fade-in-background{0%{opacity:0}50%{opacity:1}}@keyframes mat-checkbox-fade-out-background{0%,50%{opacity:1}100%{opacity:0}}@keyframes mat-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:22.910259}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1)}100%{stroke-dashoffset:0}}@keyframes mat-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mat-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);stroke-dashoffset:0}to{stroke-dashoffset:-22.910259}}@keyframes mat-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(45deg)}}@keyframes mat-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:0;transform:rotate(45deg)}to{opacity:1;transform:rotate(360deg)}}@keyframes mat-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:0;transform:rotate(-45deg)}to{opacity:1;transform:rotate(0deg)}}@keyframes mat-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(315deg)}}@keyframes mat-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;opacity:1;transform:scaleX(1)}32.8%,100%{opacity:0;transform:scaleX(0)}}.mat-checkbox-background,.mat-checkbox-frame{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:2px;box-sizing:border-box;pointer-events:none}.mat-checkbox{transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);cursor:pointer;-webkit-tap-highlight-color:transparent}._mat-animation-noopable.mat-checkbox{transition:none;animation:none}.mat-checkbox .mat-ripple-element:not(.mat-checkbox-persistent-ripple){opacity:.16}.mat-checkbox-layout{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:inherit;align-items:baseline;vertical-align:middle;display:inline-flex;white-space:nowrap}.mat-checkbox-label{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto}.mat-checkbox-inner-container{display:inline-block;height:16px;line-height:0;margin:auto;margin-right:8px;order:0;position:relative;vertical-align:middle;white-space:nowrap;width:16px;flex-shrink:0}[dir=rtl] .mat-checkbox-inner-container{margin-left:8px;margin-right:auto}.mat-checkbox-inner-container-no-side-margin{margin-left:0;margin-right:0}.mat-checkbox-frame{background-color:transparent;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1);border-width:2px;border-style:solid}._mat-animation-noopable .mat-checkbox-frame{transition:none}.mat-checkbox.cdk-keyboard-focused .cdk-high-contrast-active .mat-checkbox-frame{border-style:dotted}.mat-checkbox-background{align-items:center;display:inline-flex;justify-content:center;transition:background-color 90ms cubic-bezier(0, 0, 0.2, 0.1),opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}._mat-animation-noopable .mat-checkbox-background{transition:none}.cdk-high-contrast-active .mat-checkbox .mat-checkbox-background{background:none}.mat-checkbox-persistent-ripple{width:100%;height:100%;transform:none}.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:.04}.mat-checkbox.cdk-keyboard-focused .mat-checkbox-persistent-ripple{opacity:.12}.mat-checkbox-persistent-ripple,.mat-checkbox.mat-checkbox-disabled .mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:0}@media(hover: none){.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{display:none}}.mat-checkbox-checkmark{top:0;left:0;right:0;bottom:0;position:absolute;width:100%}.mat-checkbox-checkmark-path{stroke-dashoffset:22.910259;stroke-dasharray:22.910259;stroke-width:2.1333333333px}.cdk-high-contrast-black-on-white .mat-checkbox-checkmark-path{stroke:#000 !important}.mat-checkbox-mixedmark{width:calc(100% - 6px);height:2px;opacity:0;transform:scaleX(0) rotate(0deg);border-radius:2px}.cdk-high-contrast-active .mat-checkbox-mixedmark{height:0;border-top:solid 2px;margin-top:2px}.mat-checkbox-label-before .mat-checkbox-inner-container{order:1;margin-left:8px;margin-right:auto}[dir=rtl] .mat-checkbox-label-before .mat-checkbox-inner-container{margin-left:auto;margin-right:8px}.mat-checkbox-checked .mat-checkbox-checkmark{opacity:1}.mat-checkbox-checked .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-checked .mat-checkbox-mixedmark{transform:scaleX(1) rotate(-45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark{opacity:0;transform:rotate(45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-indeterminate .mat-checkbox-mixedmark{opacity:1;transform:scaleX(1) rotate(0deg)}.mat-checkbox-unchecked .mat-checkbox-background{background-color:transparent}.mat-checkbox-disabled{cursor:default}.cdk-high-contrast-active .mat-checkbox-disabled{opacity:.5}.mat-checkbox-anim-unchecked-checked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-checked .mat-checkbox-checkmark-path{animation:180ms linear 0ms mat-checkbox-unchecked-checked-checkmark-path}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-unchecked-indeterminate-mixedmark}.mat-checkbox-anim-checked-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-checked-unchecked .mat-checkbox-checkmark-path{animation:90ms linear 0ms mat-checkbox-checked-unchecked-checkmark-path}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-checkmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-checkmark}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-mixedmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-checkmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-checkmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-mixedmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-mixedmark}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-mixedmark{animation:300ms linear 0ms mat-checkbox-indeterminate-unchecked-mixedmark}.mat-checkbox-input{bottom:0;left:50%}.mat-checkbox .mat-checkbox-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.NgZone }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_CHECKBOX_CLICK_ACTION]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_CHECKBOX_DEFAULT_OPTIONS]\n            }] }]; }, { ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], id: [{\n            type: Input\n        }], labelPosition: [{\n            type: Input\n        }], name: [{\n            type: Input\n        }], change: [{\n            type: Output\n        }], indeterminateChange: [{\n            type: Output\n        }], required: [{\n            type: Input\n        }], checked: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], indeterminate: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], _inputElement: [{\n            type: ViewChild,\n            args: ['input']\n        }], ripple: [{\n            type: ViewChild,\n            args: [MatRipple]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatCheckbox.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatCheckbox.ngAcceptInputType_required;\n    /** @type {?} */\n    MatCheckbox.ngAcceptInputType_disableRipple;\n    /** @type {?} */\n    MatCheckbox.ngAcceptInputType_indeterminate;\n    /**\n     * Attached to the aria-label attribute of the host element. In most cases, aria-labelledby will\n     * take precedence so this may be omitted.\n     * @type {?}\n     */\n    MatCheckbox.prototype.ariaLabel;\n    /**\n     * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n     * @type {?}\n     */\n    MatCheckbox.prototype.ariaLabelledby;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._uniqueId;\n    /**\n     * A unique id for the checkbox input. If none is supplied, it will be auto-generated.\n     * @type {?}\n     */\n    MatCheckbox.prototype.id;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._required;\n    /**\n     * Whether the label should appear after or before the checkbox. Defaults to 'after'\n     * @type {?}\n     */\n    MatCheckbox.prototype.labelPosition;\n    /**\n     * Name value will be applied to the input element if present\n     * @type {?}\n     */\n    MatCheckbox.prototype.name;\n    /**\n     * Event emitted when the checkbox's `checked` value changes.\n     * @type {?}\n     */\n    MatCheckbox.prototype.change;\n    /**\n     * Event emitted when the checkbox's `indeterminate` value changes.\n     * @type {?}\n     */\n    MatCheckbox.prototype.indeterminateChange;\n    /**\n     * The value attribute of the native input element\n     * @type {?}\n     */\n    MatCheckbox.prototype.value;\n    /**\n     * The native `<input type=\"checkbox\">` element\n     * @type {?}\n     */\n    MatCheckbox.prototype._inputElement;\n    /**\n     * Reference to the ripple instance of the checkbox.\n     * @type {?}\n     */\n    MatCheckbox.prototype.ripple;\n    /**\n     * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatCheckbox.prototype._onTouched;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._currentAnimationClass;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._currentCheckState;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._controlValueAccessorChangeFn;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._checked;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._indeterminate;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._focusMonitor;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._ngZone;\n    /**\n     * @deprecated `_clickAction` parameter to be removed, use\n     * `MAT_CHECKBOX_DEFAULT_OPTIONS`\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._clickAction;\n    /** @type {?} */\n    MatCheckbox.prototype._animationMode;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._options;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/checkbox/checkbox-required-validator.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst MAT_CHECKBOX_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatCheckboxRequiredValidator)),\n    multi: true\n};\n/**\n * Validator for Material checkbox's required attribute in template-driven checkbox.\n * Current CheckboxRequiredValidator only work with `input type=checkbox` and does not\n * work with `mat-checkbox`.\n */\nclass MatCheckboxRequiredValidator extends CheckboxRequiredValidator {\n}\nMatCheckboxRequiredValidator.ɵfac = function MatCheckboxRequiredValidator_Factory(t) { return ɵMatCheckboxRequiredValidator_BaseFactory(t || MatCheckboxRequiredValidator); };\nMatCheckboxRequiredValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCheckboxRequiredValidator, selectors: [[\"mat-checkbox\", \"required\", \"\", \"formControlName\", \"\"], [\"mat-checkbox\", \"required\", \"\", \"formControl\", \"\"], [\"mat-checkbox\", \"required\", \"\", \"ngModel\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([MAT_CHECKBOX_REQUIRED_VALIDATOR]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatCheckboxRequiredValidator_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatCheckboxRequiredValidator);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCheckboxRequiredValidator, [{\n        type: Directive,\n        args: [{\n                selector: `mat-checkbox[required][formControlName],\n             mat-checkbox[required][formControl], mat-checkbox[required][ngModel]`,\n                providers: [MAT_CHECKBOX_REQUIRED_VALIDATOR]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/checkbox/checkbox-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * This module is used by both original and MDC-based checkbox implementations.\n */\n// tslint:disable-next-line:class-name\nclass _MatCheckboxRequiredValidatorModule {\n}\n_MatCheckboxRequiredValidatorModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: _MatCheckboxRequiredValidatorModule });\n_MatCheckboxRequiredValidatorModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function _MatCheckboxRequiredValidatorModule_Factory(t) { return new (t || _MatCheckboxRequiredValidatorModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(_MatCheckboxRequiredValidatorModule, { declarations: [MatCheckboxRequiredValidator], exports: [MatCheckboxRequiredValidator] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatCheckboxRequiredValidatorModule, [{\n        type: NgModule,\n        args: [{\n                exports: [MatCheckboxRequiredValidator],\n                declarations: [MatCheckboxRequiredValidator]\n            }]\n    }], null, null); })();\nclass MatCheckboxModule {\n}\nMatCheckboxModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatCheckboxModule });\nMatCheckboxModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatCheckboxModule_Factory(t) { return new (t || MatCheckboxModule)(); }, imports: [[\n            MatRippleModule, MatCommonModule, ObserversModule,\n            _MatCheckboxRequiredValidatorModule\n        ],\n        MatCommonModule,\n        _MatCheckboxRequiredValidatorModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatCheckboxModule, { declarations: function () { return [MatCheckbox]; }, imports: function () { return [MatRippleModule, MatCommonModule, ObserversModule,\n        _MatCheckboxRequiredValidatorModule]; }, exports: function () { return [MatCheckbox,\n        MatCommonModule,\n        _MatCheckboxRequiredValidatorModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCheckboxModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    MatRippleModule, MatCommonModule, ObserversModule,\n                    _MatCheckboxRequiredValidatorModule\n                ],\n                exports: [MatCheckbox, MatCommonModule, _MatCheckboxRequiredValidatorModule],\n                declarations: [MatCheckbox]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/checkbox/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_CHECKBOX_CLICK_ACTION, MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR, MAT_CHECKBOX_DEFAULT_OPTIONS, MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY, MAT_CHECKBOX_REQUIRED_VALIDATOR, MatCheckbox, MatCheckboxChange, MatCheckboxModule, MatCheckboxRequiredValidator, _MatCheckboxRequiredValidatorModule };\n\n//# sourceMappingURL=checkbox.js.map","import { CommonModule } from '@angular/common';\nimport { Directive, Input, InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Optional, Inject, NgZone, ViewChild, ContentChild, ContentChildren, NgModule } from '@angular/core';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { mixinColor, MAT_LABEL_GLOBAL_OPTIONS } from '@angular/material/core';\nimport { Subject, merge, fromEvent } from 'rxjs';\nimport { startWith, takeUntil, take } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { Platform } from '@angular/cdk/platform';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/error.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from '@angular/cdk/observers';\n\nconst _c0 = [\"underline\"];\nconst _c1 = [\"connectionContainer\"];\nconst _c2 = [\"inputContainer\"];\nconst _c3 = [\"label\"];\nfunction MatFormField_ng_container_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 14);\n    ɵngcc0.ɵɵelement(2, \"div\", 15);\n    ɵngcc0.ɵɵelement(3, \"div\", 16);\n    ɵngcc0.ɵɵelement(4, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(5, \"div\", 18);\n    ɵngcc0.ɵɵelement(6, \"div\", 15);\n    ɵngcc0.ɵɵelement(7, \"div\", 16);\n    ɵngcc0.ɵɵelement(8, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} }\nfunction MatFormField_div_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 19);\n    ɵngcc0.ɵɵprojection(1, 1);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_label_9_ng_container_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementStart(2, \"span\");\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r10 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r10._control.placeholder);\n} }\nfunction MatFormField_label_9_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 3, [\"*ngSwitchCase\", \"true\"]);\n} }\nfunction MatFormField_label_9_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 23);\n    ɵngcc0.ɵɵtext(1, \" *\");\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_label_9_Template(rf, ctx) { if (rf & 1) {\n    const _r14 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"label\", 20, 21);\n    ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatFormField_label_9_Template_label_cdkObserveContent_0_listener() { ɵngcc0.ɵɵrestoreView(_r14); const ctx_r13 = ɵngcc0.ɵɵnextContext(); return ctx_r13.updateOutlineGap(); });\n    ɵngcc0.ɵɵtemplate(2, MatFormField_label_9_ng_container_2_Template, 4, 1, \"ng-container\", 12);\n    ɵngcc0.ɵɵtemplate(3, MatFormField_label_9_3_Template, 1, 0, undefined, 12);\n    ɵngcc0.ɵɵtemplate(4, MatFormField_label_9_span_4_Template, 2, 0, \"span\", 22);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-empty\", ctx_r4._control.empty && !ctx_r4._shouldAlwaysFloat)(\"mat-form-field-empty\", ctx_r4._control.empty && !ctx_r4._shouldAlwaysFloat)(\"mat-accent\", ctx_r4.color == \"accent\")(\"mat-warn\", ctx_r4.color == \"warn\");\n    ɵngcc0.ɵɵproperty(\"cdkObserveContentDisabled\", ctx_r4.appearance != \"outline\")(\"id\", ctx_r4._labelId)(\"ngSwitch\", ctx_r4._hasLabel());\n    ɵngcc0.ɵɵattribute(\"for\", ctx_r4._control.id)(\"aria-owns\", ctx_r4._control.id);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r4.hideRequiredMarker && ctx_r4._control.required && !ctx_r4._control.disabled);\n} }\nfunction MatFormField_div_10_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 24);\n    ɵngcc0.ɵɵprojection(1, 4);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_div_11_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 25, 26);\n    ɵngcc0.ɵɵelement(2, \"span\", 27);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r6 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵclassProp(\"mat-accent\", ctx_r6.color == \"accent\")(\"mat-warn\", ctx_r6.color == \"warn\");\n} }\nfunction MatFormField_div_13_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵprojection(1, 5);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r7 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transitionMessages\", ctx_r7._subscriptAnimationState);\n} }\nfunction MatFormField_div_14_div_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 31);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r16 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r16._hintLabelId);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r16.hintLabel);\n} }\nfunction MatFormField_div_14_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 28);\n    ɵngcc0.ɵɵtemplate(1, MatFormField_div_14_div_1_Template, 2, 2, \"div\", 29);\n    ɵngcc0.ɵɵprojection(2, 6);\n    ɵngcc0.ɵɵelement(3, \"div\", 30);\n    ɵngcc0.ɵɵprojection(4, 7);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r8 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transitionMessages\", ctx_r8._subscriptAnimationState);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r8.hintLabel);\n} }\nconst _c4 = [\"*\", [[\"\", \"matPrefix\", \"\"]], [[\"mat-placeholder\"]], [[\"mat-label\"]], [[\"\", \"matSuffix\", \"\"]], [[\"mat-error\"]], [[\"mat-hint\", 3, \"align\", \"end\"]], [[\"mat-hint\", \"align\", \"end\"]]];\nconst _c5 = [\"*\", \"[matPrefix]\", \"mat-placeholder\", \"mat-label\", \"[matSuffix]\", \"mat-error\", \"mat-hint:not([align='end'])\", \"mat-hint[align='end']\"];\nlet nextUniqueId = 0;\n/**\n * Single error message to be shown underneath the form field.\n */\nclass MatError {\n    constructor() {\n        this.id = `mat-error-${nextUniqueId++}`;\n    }\n}\nMatError.ɵfac = function MatError_Factory(t) { return new (t || MatError)(); };\nMatError.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatError, selectors: [[\"mat-error\"]], hostAttrs: [\"role\", \"alert\", 1, \"mat-error\"], hostVars: 1, hostBindings: function MatError_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id);\n    } }, inputs: { id: \"id\" } });\nMatError.propDecorators = {\n    id: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatError, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-error',\n                host: {\n                    'class': 'mat-error',\n                    'role': 'alert',\n                    '[attr.id]': 'id'\n                }\n            }]\n    }], function () { return []; }, { id: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatError.prototype.id;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/form-field-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the MatFormField.\n * \\@docs-private\n * @type {?}\n */\nconst matFormFieldAnimations = {\n    /**\n     * Animation that transitions the form field's error and hint messages.\n     */\n    transitionMessages: trigger('transitionMessages', [\n        // TODO(mmalerba): Use angular animations for label animation as well.\n        state('enter', style({ opacity: 1, transform: 'translateY(0%)' })),\n        transition('void => enter', [\n            style({ opacity: 0, transform: 'translateY(-100%)' }),\n            animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)'),\n        ]),\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/form-field-control.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * An interface which allows a control to work inside of a `MatFormField`.\n * @abstract\n * @template T\n */\nclass MatFormFieldControl {\n}\nMatFormFieldControl.ɵfac = function MatFormFieldControl_Factory(t) { return new (t || MatFormFieldControl)(); };\nMatFormFieldControl.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatFormFieldControl });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFormFieldControl, [{\n        type: Directive\n    }], null, null); })();\nif (false) {\n    /**\n     * The value of the control.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.value;\n    /**\n     * Stream that emits whenever the state of the control changes such that the parent `MatFormField`\n     * needs to run change detection.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.stateChanges;\n    /**\n     * The element ID for this control.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.id;\n    /**\n     * The placeholder for this control.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.placeholder;\n    /**\n     * Gets the NgControl for this control.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.ngControl;\n    /**\n     * Whether the control is focused.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.focused;\n    /**\n     * Whether the control is empty.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.empty;\n    /**\n     * Whether the `MatFormField` label should try to float.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.shouldLabelFloat;\n    /**\n     * Whether the control is required.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.required;\n    /**\n     * Whether the control is disabled.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.disabled;\n    /**\n     * Whether the control is in an error state.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.errorState;\n    /**\n     * An optional name for the control type that can be used to distinguish `mat-form-field` elements\n     * based on their control type. The form field will add a class,\n     * `mat-form-field-type-{{controlType}}` to its root element.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.controlType;\n    /**\n     * Whether the input is currently in an autofilled state. If property is not present on the\n     * control it is assumed to be false.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.autofilled;\n    /**\n     * Sets the list of element IDs that currently describe this control.\n     * @abstract\n     * @param {?} ids\n     * @return {?}\n     */\n    MatFormFieldControl.prototype.setDescribedByIds = function (ids) { };\n    /**\n     * Handles a click on the control's container.\n     * @abstract\n     * @param {?} event\n     * @return {?}\n     */\n    MatFormFieldControl.prototype.onContainerClick = function (event) { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/form-field-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction getMatFormFieldPlaceholderConflictError() {\n    return Error('Placeholder attribute and child element were both specified.');\n}\n/**\n * \\@docs-private\n * @param {?} align\n * @return {?}\n */\nfunction getMatFormFieldDuplicatedHintError(align) {\n    return Error(`A hint was already declared for 'align=\"${align}\"'.`);\n}\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction getMatFormFieldMissingControlError() {\n    return Error('mat-form-field must contain a MatFormFieldControl.');\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/hint.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextUniqueId$1 = 0;\n/**\n * Hint text to be shown underneath the form field control.\n */\nclass MatHint {\n    constructor() {\n        /**\n         * Whether to align the hint label at the start or end of the line.\n         */\n        this.align = 'start';\n        /**\n         * Unique ID for the hint. Used for the aria-describedby on the form field control.\n         */\n        this.id = `mat-hint-${nextUniqueId$1++}`;\n    }\n}\nMatHint.ɵfac = function MatHint_Factory(t) { return new (t || MatHint)(); };\nMatHint.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatHint, selectors: [[\"mat-hint\"]], hostAttrs: [1, \"mat-hint\"], hostVars: 4, hostBindings: function MatHint_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"align\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-right\", ctx.align == \"end\");\n    } }, inputs: { align: \"align\", id: \"id\" } });\nMatHint.propDecorators = {\n    align: [{ type: Input }],\n    id: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHint, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-hint',\n                host: {\n                    'class': 'mat-hint',\n                    '[class.mat-right]': 'align == \"end\"',\n                    '[attr.id]': 'id',\n                    // Remove align attribute to prevent it from interfering with layout.\n                    '[attr.align]': 'null'\n                }\n            }]\n    }], function () { return []; }, { align: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * Whether to align the hint label at the start or end of the line.\n     * @type {?}\n     */\n    MatHint.prototype.align;\n    /**\n     * Unique ID for the hint. Used for the aria-describedby on the form field control.\n     * @type {?}\n     */\n    MatHint.prototype.id;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/label.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The floating label for a `mat-form-field`.\n */\nclass MatLabel {\n}\nMatLabel.ɵfac = function MatLabel_Factory(t) { return new (t || MatLabel)(); };\nMatLabel.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatLabel, selectors: [[\"mat-label\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatLabel, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-label'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/placeholder.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The placeholder text for an `MatFormField`.\n * @deprecated Use `<mat-label>` to specify the label and the `placeholder` attribute to specify the\n *     placeholder.\n * \\@breaking-change 8.0.0\n */\nclass MatPlaceholder {\n}\nMatPlaceholder.ɵfac = function MatPlaceholder_Factory(t) { return new (t || MatPlaceholder)(); };\nMatPlaceholder.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatPlaceholder, selectors: [[\"mat-placeholder\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPlaceholder, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-placeholder'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/prefix.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Prefix to be placed in front of the form field.\n */\nclass MatPrefix {\n}\nMatPrefix.ɵfac = function MatPrefix_Factory(t) { return new (t || MatPrefix)(); };\nMatPrefix.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatPrefix, selectors: [[\"\", \"matPrefix\", \"\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPrefix, [{\n        type: Directive,\n        args: [{\n                selector: '[matPrefix]'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/suffix.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Suffix to be placed at the end of the form field.\n */\nclass MatSuffix {\n}\nMatSuffix.ɵfac = function MatSuffix_Factory(t) { return new (t || MatSuffix)(); };\nMatSuffix.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSuffix, selectors: [[\"\", \"matSuffix\", \"\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSuffix, [{\n        type: Directive,\n        args: [{\n                selector: '[matSuffix]'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/form-field.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextUniqueId$2 = 0;\n/** @type {?} */\nconst floatingLabelScale = 0.75;\n/** @type {?} */\nconst outlineGapPadding = 5;\n/**\n * Boilerplate for applying mixins to MatFormField.\n * \\@docs-private\n */\nclass MatFormFieldBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatFormFieldBase.prototype._elementRef;\n}\n/**\n * Base class to which we're applying the form field mixins.\n * \\@docs-private\n * @type {?}\n */\nconst _MatFormFieldMixinBase = mixinColor(MatFormFieldBase, 'primary');\n/**\n * Represents the default options for the form field that can be configured\n * using the `MAT_FORM_FIELD_DEFAULT_OPTIONS` injection token.\n * @record\n */\nfunction MatFormFieldDefaultOptions() { }\nif (false) {\n    /** @type {?|undefined} */\n    MatFormFieldDefaultOptions.prototype.appearance;\n    /** @type {?|undefined} */\n    MatFormFieldDefaultOptions.prototype.hideRequiredMarker;\n    /**\n     * Whether the label for form-fields should by default float `always`,\n     * `never`, or `auto` (only when necessary).\n     * @type {?|undefined}\n     */\n    MatFormFieldDefaultOptions.prototype.floatLabel;\n}\n/**\n * Injection token that can be used to configure the\n * default options for all form field within an app.\n * @type {?}\n */\nconst MAT_FORM_FIELD_DEFAULT_OPTIONS = new InjectionToken('MAT_FORM_FIELD_DEFAULT_OPTIONS');\n/**\n * Injection token that can be used to inject an instances of `MatFormField`. It serves\n * as alternative token to the actual `MatFormField` class which would cause unnecessary\n * retention of the `MatFormField` class and its component metadata.\n * @type {?}\n */\nconst MAT_FORM_FIELD = new InjectionToken('MatFormField');\n/**\n * Container for form controls that applies Material Design styling and behavior.\n */\nclass MatFormField extends _MatFormFieldMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?} labelOptions\n     * @param {?} _dir\n     * @param {?} _defaults\n     * @param {?} _platform\n     * @param {?} _ngZone\n     * @param {?} _animationMode\n     */\n    constructor(_elementRef, _changeDetectorRef, labelOptions, _dir, _defaults, _platform, _ngZone, _animationMode) {\n        super(_elementRef);\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._defaults = _defaults;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        /**\n         * Whether the outline gap needs to be calculated\n         * immediately on the next change detection run.\n         */\n        this._outlineGapCalculationNeededImmediately = false;\n        /**\n         * Whether the outline gap needs to be calculated next time the zone has stabilized.\n         */\n        this._outlineGapCalculationNeededOnStable = false;\n        this._destroyed = new Subject();\n        /**\n         * Override for the logic that disables the label animation in certain cases.\n         */\n        this._showAlwaysAnimate = false;\n        /**\n         * State of the mat-hint and mat-error animations.\n         */\n        this._subscriptAnimationState = '';\n        this._hintLabel = '';\n        // Unique id for the hint label.\n        this._hintLabelId = `mat-hint-${nextUniqueId$2++}`;\n        // Unique id for the internal form field label.\n        this._labelId = `mat-form-field-label-${nextUniqueId$2++}`;\n        this._labelOptions = labelOptions ? labelOptions : {};\n        this.floatLabel = this._getDefaultFloatLabelState();\n        this._animationsEnabled = _animationMode !== 'NoopAnimations';\n        // Set the default through here so we invoke the setter on the first run.\n        this.appearance = (_defaults && _defaults.appearance) ? _defaults.appearance : 'legacy';\n        this._hideRequiredMarker = (_defaults && _defaults.hideRequiredMarker != null) ?\n            _defaults.hideRequiredMarker : false;\n    }\n    /**\n     * The form-field appearance style.\n     * @return {?}\n     */\n    get appearance() { return this._appearance; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set appearance(value) {\n        /** @type {?} */\n        const oldValue = this._appearance;\n        this._appearance = value || (this._defaults && this._defaults.appearance) || 'legacy';\n        if (this._appearance === 'outline' && oldValue !== value) {\n            this._outlineGapCalculationNeededOnStable = true;\n        }\n    }\n    /**\n     * Whether the required marker should be hidden.\n     * @return {?}\n     */\n    get hideRequiredMarker() { return this._hideRequiredMarker; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hideRequiredMarker(value) {\n        this._hideRequiredMarker = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the floating label should always float or not.\n     * @return {?}\n     */\n    get _shouldAlwaysFloat() {\n        return this.floatLabel === 'always' && !this._showAlwaysAnimate;\n    }\n    /**\n     * Whether the label can float or not.\n     * @return {?}\n     */\n    get _canLabelFloat() { return this.floatLabel !== 'never'; }\n    /**\n     * Text for the form field hint.\n     * @return {?}\n     */\n    get hintLabel() { return this._hintLabel; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hintLabel(value) {\n        this._hintLabel = value;\n        this._processHints();\n    }\n    /**\n     * Whether the label should always float, never float or float as the user types.\n     *\n     * Note: only the legacy appearance supports the `never` option. `never` was originally added as a\n     * way to make the floating label emulate the behavior of a standard input placeholder. However\n     * the form field now supports both floating labels and placeholders. Therefore in the non-legacy\n     * appearances the `never` option has been disabled in favor of just using the placeholder.\n     * @return {?}\n     */\n    get floatLabel() {\n        return this.appearance !== 'legacy' && this._floatLabel === 'never' ? 'auto' : this._floatLabel;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set floatLabel(value) {\n        if (value !== this._floatLabel) {\n            this._floatLabel = value || this._getDefaultFloatLabelState();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get _control() {\n        // TODO(crisbeto): we need this workaround in order to support both Ivy and ViewEngine.\n        //  We should clean this up once Ivy is the default renderer.\n        return this._explicitFormFieldControl || this._controlNonStatic || this._controlStatic;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set _control(value) {\n        this._explicitFormFieldControl = value;\n    }\n    /**\n     * @return {?}\n     */\n    get _labelChild() {\n        return this._labelChildNonStatic || this._labelChildStatic;\n    }\n    /**\n     * Gets an ElementRef for the element that a overlay attached to the form-field should be\n     * positioned relative to.\n     * @return {?}\n     */\n    getConnectedOverlayOrigin() {\n        return this._connectionContainerRef || this._elementRef;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._validateControlChild();\n        /** @type {?} */\n        const control = this._control;\n        if (control.controlType) {\n            this._elementRef.nativeElement.classList.add(`mat-form-field-type-${control.controlType}`);\n        }\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        control.stateChanges.pipe(startWith((/** @type {?} */ (null)))).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._validatePlaceholders();\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        }));\n        // Run change detection if the value changes.\n        if (control.ngControl && control.ngControl.valueChanges) {\n            control.ngControl.valueChanges\n                .pipe(takeUntil(this._destroyed))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => this._changeDetectorRef.markForCheck()));\n        }\n        // Note that we have to run outside of the `NgZone` explicitly,\n        // in order to avoid throwing users into an infinite loop\n        // if `zone-patch-rxjs` is included.\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._ngZone.onStable.asObservable().pipe(takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                if (this._outlineGapCalculationNeededOnStable) {\n                    this.updateOutlineGap();\n                }\n            }));\n        }));\n        // Run change detection and update the outline if the suffix or prefix changes.\n        merge(this._prefixChildren.changes, this._suffixChildren.changes).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._outlineGapCalculationNeededOnStable = true;\n            this._changeDetectorRef.markForCheck();\n        }));\n        // Re-validate when the number of hints changes.\n        this._hintChildren.changes.pipe(startWith(null)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._processHints();\n            this._changeDetectorRef.markForCheck();\n        }));\n        // Update the aria-described by when the number of errors changes.\n        this._errorChildren.changes.pipe(startWith(null)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        }));\n        if (this._dir) {\n            this._dir.change.pipe(takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                if (typeof requestAnimationFrame === 'function') {\n                    this._ngZone.runOutsideAngular((/**\n                     * @return {?}\n                     */\n                    () => {\n                        requestAnimationFrame((/**\n                         * @return {?}\n                         */\n                        () => this.updateOutlineGap()));\n                    }));\n                }\n                else {\n                    this.updateOutlineGap();\n                }\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        this._validateControlChild();\n        if (this._outlineGapCalculationNeededImmediately) {\n            this.updateOutlineGap();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        // Avoid animations on load.\n        this._subscriptAnimationState = 'enter';\n        this._changeDetectorRef.detectChanges();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Determines whether a class from the NgControl should be forwarded to the host element.\n     * @param {?} prop\n     * @return {?}\n     */\n    _shouldForward(prop) {\n        /** @type {?} */\n        const ngControl = this._control ? this._control.ngControl : null;\n        return ngControl && ngControl[prop];\n    }\n    /**\n     * @return {?}\n     */\n    _hasPlaceholder() {\n        return !!(this._control && this._control.placeholder || this._placeholderChild);\n    }\n    /**\n     * @return {?}\n     */\n    _hasLabel() {\n        return !!this._labelChild;\n    }\n    /**\n     * @return {?}\n     */\n    _shouldLabelFloat() {\n        return this._canLabelFloat && (this._control.shouldLabelFloat || this._shouldAlwaysFloat);\n    }\n    /**\n     * @return {?}\n     */\n    _hideControlPlaceholder() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this.appearance === 'legacy' && !this._hasLabel() ||\n            this._hasLabel() && !this._shouldLabelFloat();\n    }\n    /**\n     * @return {?}\n     */\n    _hasFloatingLabel() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this._hasLabel() || this.appearance === 'legacy' && this._hasPlaceholder();\n    }\n    /**\n     * Determines whether to display hints or errors.\n     * @return {?}\n     */\n    _getDisplayedMessages() {\n        return (this._errorChildren && this._errorChildren.length > 0 &&\n            this._control.errorState) ? 'error' : 'hint';\n    }\n    /**\n     * Animates the placeholder up and locks it in position.\n     * @return {?}\n     */\n    _animateAndLockLabel() {\n        if (this._hasFloatingLabel() && this._canLabelFloat) {\n            // If animations are disabled, we shouldn't go in here,\n            // because the `transitionend` will never fire.\n            if (this._animationsEnabled && this._label) {\n                this._showAlwaysAnimate = true;\n                fromEvent(this._label.nativeElement, 'transitionend').pipe(take(1)).subscribe((/**\n                 * @return {?}\n                 */\n                () => {\n                    this._showAlwaysAnimate = false;\n                }));\n            }\n            this.floatLabel = 'always';\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Ensure that there is only one placeholder (either `placeholder` attribute on the child control\n     * or child element with the `mat-placeholder` directive).\n     * @private\n     * @return {?}\n     */\n    _validatePlaceholders() {\n        if (this._control.placeholder && this._placeholderChild) {\n            throw getMatFormFieldPlaceholderConflictError();\n        }\n    }\n    /**\n     * Does any extra processing that is required when handling the hints.\n     * @private\n     * @return {?}\n     */\n    _processHints() {\n        this._validateHints();\n        this._syncDescribedByIds();\n    }\n    /**\n     * Ensure that there is a maximum of one of each `<mat-hint>` alignment specified, with the\n     * attribute being considered as `align=\"start\"`.\n     * @private\n     * @return {?}\n     */\n    _validateHints() {\n        if (this._hintChildren) {\n            /** @type {?} */\n            let startHint;\n            /** @type {?} */\n            let endHint;\n            this._hintChildren.forEach((/**\n             * @param {?} hint\n             * @return {?}\n             */\n            (hint) => {\n                if (hint.align === 'start') {\n                    if (startHint || this.hintLabel) {\n                        throw getMatFormFieldDuplicatedHintError('start');\n                    }\n                    startHint = hint;\n                }\n                else if (hint.align === 'end') {\n                    if (endHint) {\n                        throw getMatFormFieldDuplicatedHintError('end');\n                    }\n                    endHint = hint;\n                }\n            }));\n        }\n    }\n    /**\n     * Gets the default float label state.\n     * @private\n     * @return {?}\n     */\n    _getDefaultFloatLabelState() {\n        return (this._defaults && this._defaults.floatLabel) || this._labelOptions.float || 'auto';\n    }\n    /**\n     * Sets the list of element IDs that describe the child control. This allows the control to update\n     * its `aria-describedby` attribute accordingly.\n     * @private\n     * @return {?}\n     */\n    _syncDescribedByIds() {\n        if (this._control) {\n            /** @type {?} */\n            let ids = [];\n            if (this._getDisplayedMessages() === 'hint') {\n                /** @type {?} */\n                const startHint = this._hintChildren ?\n                    this._hintChildren.find((/**\n                     * @param {?} hint\n                     * @return {?}\n                     */\n                    hint => hint.align === 'start')) : null;\n                /** @type {?} */\n                const endHint = this._hintChildren ?\n                    this._hintChildren.find((/**\n                     * @param {?} hint\n                     * @return {?}\n                     */\n                    hint => hint.align === 'end')) : null;\n                if (startHint) {\n                    ids.push(startHint.id);\n                }\n                else if (this._hintLabel) {\n                    ids.push(this._hintLabelId);\n                }\n                if (endHint) {\n                    ids.push(endHint.id);\n                }\n            }\n            else if (this._errorChildren) {\n                ids = this._errorChildren.map((/**\n                 * @param {?} error\n                 * @return {?}\n                 */\n                error => error.id));\n            }\n            this._control.setDescribedByIds(ids);\n        }\n    }\n    /**\n     * Throws an error if the form field's control is missing.\n     * @protected\n     * @return {?}\n     */\n    _validateControlChild() {\n        if (!this._control) {\n            throw getMatFormFieldMissingControlError();\n        }\n    }\n    /**\n     * Updates the width and position of the gap in the outline. Only relevant for the outline\n     * appearance.\n     * @return {?}\n     */\n    updateOutlineGap() {\n        /** @type {?} */\n        const labelEl = this._label ? this._label.nativeElement : null;\n        if (this.appearance !== 'outline' || !labelEl || !labelEl.children.length ||\n            !labelEl.textContent.trim()) {\n            return;\n        }\n        if (!this._platform.isBrowser) {\n            // getBoundingClientRect isn't available on the server.\n            return;\n        }\n        // If the element is not present in the DOM, the outline gap will need to be calculated\n        // the next time it is checked and in the DOM.\n        if (!this._isAttachedToDOM()) {\n            this._outlineGapCalculationNeededImmediately = true;\n            return;\n        }\n        /** @type {?} */\n        let startWidth = 0;\n        /** @type {?} */\n        let gapWidth = 0;\n        /** @type {?} */\n        const container = this._connectionContainerRef.nativeElement;\n        /** @type {?} */\n        const startEls = container.querySelectorAll('.mat-form-field-outline-start');\n        /** @type {?} */\n        const gapEls = container.querySelectorAll('.mat-form-field-outline-gap');\n        if (this._label && this._label.nativeElement.children.length) {\n            /** @type {?} */\n            const containerRect = container.getBoundingClientRect();\n            // If the container's width and height are zero, it means that the element is\n            // invisible and we can't calculate the outline gap. Mark the element as needing\n            // to be checked the next time the zone stabilizes. We can't do this immediately\n            // on the next change detection, because even if the element becomes visible,\n            // the `ClientRect` won't be reclaculated immediately. We reset the\n            // `_outlineGapCalculationNeededImmediately` flag some we don't run the checks twice.\n            if (containerRect.width === 0 && containerRect.height === 0) {\n                this._outlineGapCalculationNeededOnStable = true;\n                this._outlineGapCalculationNeededImmediately = false;\n                return;\n            }\n            /** @type {?} */\n            const containerStart = this._getStartEnd(containerRect);\n            /** @type {?} */\n            const labelStart = this._getStartEnd(labelEl.children[0].getBoundingClientRect());\n            /** @type {?} */\n            let labelWidth = 0;\n            for (const child of labelEl.children) {\n                labelWidth += child.offsetWidth;\n            }\n            startWidth = Math.abs(labelStart - containerStart) - outlineGapPadding;\n            gapWidth = labelWidth > 0 ? labelWidth * floatingLabelScale + outlineGapPadding * 2 : 0;\n        }\n        for (let i = 0; i < startEls.length; i++) {\n            startEls[i].style.width = `${startWidth}px`;\n        }\n        for (let i = 0; i < gapEls.length; i++) {\n            gapEls[i].style.width = `${gapWidth}px`;\n        }\n        this._outlineGapCalculationNeededOnStable =\n            this._outlineGapCalculationNeededImmediately = false;\n    }\n    /**\n     * Gets the start end of the rect considering the current directionality.\n     * @private\n     * @param {?} rect\n     * @return {?}\n     */\n    _getStartEnd(rect) {\n        return (this._dir && this._dir.value === 'rtl') ? rect.right : rect.left;\n    }\n    /**\n     * Checks whether the form field is attached to the DOM.\n     * @private\n     * @return {?}\n     */\n    _isAttachedToDOM() {\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        if (element.getRootNode) {\n            /** @type {?} */\n            const rootNode = element.getRootNode();\n            // If the element is inside the DOM the root node will be either the document\n            // or the closest shadow root, otherwise it'll be the element itself.\n            return rootNode && rootNode !== element;\n        }\n        // Otherwise fall back to checking if it's in the document. This doesn't account for\n        // shadow DOM, however browser that support shadow DOM should support `getRootNode` as well.\n        return (/** @type {?} */ (document.documentElement)).contains(element);\n    }\n}\nMatFormField.ɵfac = function MatFormField_Factory(t) { return new (t || MatFormField)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_LABEL_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatFormField.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatFormField, selectors: [[\"mat-form-field\"]], contentQueries: function MatFormField_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatFormFieldControl, true);\n        ɵngcc0.ɵɵstaticContentQuery(dirIndex, MatFormFieldControl, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLabel, true);\n        ɵngcc0.ɵɵstaticContentQuery(dirIndex, MatLabel, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatPlaceholder, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatError, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatHint, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatPrefix, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSuffix, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._controlNonStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._controlStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._labelChildNonStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._labelChildStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._placeholderChild = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._errorChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._hintChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._prefixChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._suffixChildren = _t);\n    } }, viewQuery: function MatFormField_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c1, true);\n        ɵngcc0.ɵɵviewQuery(_c2, true);\n        ɵngcc0.ɵɵviewQuery(_c3, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.underlineRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._connectionContainerRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputContainerRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._label = _t.first);\n    } }, hostAttrs: [1, \"mat-form-field\"], hostVars: 44, hostBindings: function MatFormField_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-form-field-appearance-standard\", ctx.appearance == \"standard\")(\"mat-form-field-appearance-fill\", ctx.appearance == \"fill\")(\"mat-form-field-appearance-outline\", ctx.appearance == \"outline\")(\"mat-form-field-appearance-legacy\", ctx.appearance == \"legacy\")(\"mat-form-field-invalid\", ctx._control.errorState)(\"mat-form-field-can-float\", ctx._canLabelFloat)(\"mat-form-field-should-float\", ctx._shouldLabelFloat())(\"mat-form-field-has-label\", ctx._hasFloatingLabel())(\"mat-form-field-hide-placeholder\", ctx._hideControlPlaceholder())(\"mat-form-field-disabled\", ctx._control.disabled)(\"mat-form-field-autofilled\", ctx._control.autofilled)(\"mat-focused\", ctx._control.focused)(\"mat-accent\", ctx.color == \"accent\")(\"mat-warn\", ctx.color == \"warn\")(\"ng-untouched\", ctx._shouldForward(\"untouched\"))(\"ng-touched\", ctx._shouldForward(\"touched\"))(\"ng-pristine\", ctx._shouldForward(\"pristine\"))(\"ng-dirty\", ctx._shouldForward(\"dirty\"))(\"ng-valid\", ctx._shouldForward(\"valid\"))(\"ng-invalid\", ctx._shouldForward(\"invalid\"))(\"ng-pending\", ctx._shouldForward(\"pending\"))(\"_mat-animation-noopable\", !ctx._animationsEnabled);\n    } }, inputs: { color: \"color\", floatLabel: \"floatLabel\", appearance: \"appearance\", hideRequiredMarker: \"hideRequiredMarker\", hintLabel: \"hintLabel\" }, exportAs: [\"matFormField\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MAT_FORM_FIELD, useExisting: MatFormField },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c5, decls: 15, vars: 8, consts: [[1, \"mat-form-field-wrapper\"], [1, \"mat-form-field-flex\", 3, \"click\"], [\"connectionContainer\", \"\"], [4, \"ngIf\"], [\"class\", \"mat-form-field-prefix\", 4, \"ngIf\"], [1, \"mat-form-field-infix\"], [\"inputContainer\", \"\"], [1, \"mat-form-field-label-wrapper\"], [\"class\", \"mat-form-field-label\", 3, \"cdkObserveContentDisabled\", \"id\", \"mat-empty\", \"mat-form-field-empty\", \"mat-accent\", \"mat-warn\", \"ngSwitch\", \"cdkObserveContent\", 4, \"ngIf\"], [\"class\", \"mat-form-field-suffix\", 4, \"ngIf\"], [\"class\", \"mat-form-field-underline\", 4, \"ngIf\"], [1, \"mat-form-field-subscript-wrapper\", 3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [\"class\", \"mat-form-field-hint-wrapper\", 4, \"ngSwitchCase\"], [1, \"mat-form-field-outline\"], [1, \"mat-form-field-outline-start\"], [1, \"mat-form-field-outline-gap\"], [1, \"mat-form-field-outline-end\"], [1, \"mat-form-field-outline\", \"mat-form-field-outline-thick\"], [1, \"mat-form-field-prefix\"], [1, \"mat-form-field-label\", 3, \"cdkObserveContentDisabled\", \"id\", \"ngSwitch\", \"cdkObserveContent\"], [\"label\", \"\"], [\"class\", \"mat-placeholder-required mat-form-field-required-marker\", \"aria-hidden\", \"true\", 4, \"ngIf\"], [\"aria-hidden\", \"true\", 1, \"mat-placeholder-required\", \"mat-form-field-required-marker\"], [1, \"mat-form-field-suffix\"], [1, \"mat-form-field-underline\"], [\"underline\", \"\"], [1, \"mat-form-field-ripple\"], [1, \"mat-form-field-hint-wrapper\"], [\"class\", \"mat-hint\", 3, \"id\", 4, \"ngIf\"], [1, \"mat-form-field-hint-spacer\"], [1, \"mat-hint\", 3, \"id\"]], template: function MatFormField_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1, 2);\n        ɵngcc0.ɵɵlistener(\"click\", function MatFormField_Template_div_click_1_listener($event) { return ctx._control.onContainerClick && ctx._control.onContainerClick($event); });\n        ɵngcc0.ɵɵtemplate(3, MatFormField_ng_container_3_Template, 9, 0, \"ng-container\", 3);\n        ɵngcc0.ɵɵtemplate(4, MatFormField_div_4_Template, 2, 0, \"div\", 4);\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵprojection(7);\n        ɵngcc0.ɵɵelementStart(8, \"span\", 7);\n        ɵngcc0.ɵɵtemplate(9, MatFormField_label_9_Template, 5, 16, \"label\", 8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(10, MatFormField_div_10_Template, 2, 0, \"div\", 9);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(11, MatFormField_div_11_Template, 3, 4, \"div\", 10);\n        ɵngcc0.ɵɵelementStart(12, \"div\", 11);\n        ɵngcc0.ɵɵtemplate(13, MatFormField_div_13_Template, 2, 1, \"div\", 12);\n        ɵngcc0.ɵɵtemplate(14, MatFormField_div_14_Template, 5, 2, \"div\", 13);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.appearance == \"outline\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._prefixChildren.length);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._hasFloatingLabel());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._suffixChildren.length);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.appearance != \"outline\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx._getDisplayedMessages());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"error\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"hint\");\n    } }, directives: [ɵngcc3.NgIf, ɵngcc3.NgSwitch, ɵngcc3.NgSwitchCase, ɵngcc4.CdkObserveContent], styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:scaleX(1);transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\\n\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\\n\", \".mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:none}.mat-focused .cdk-high-contrast-active select.mat-input-element::-ms-value{color:inherit}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\\n\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\\n\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\\n\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\\n\"], encapsulation: 2, data: { animation: [matFormFieldAnimations.transitionMessages] }, changeDetection: 0 });\n/** @nocollapse */\nMatFormField.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_LABEL_GLOBAL_OPTIONS,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD_DEFAULT_OPTIONS,] }] },\n    { type: Platform },\n    { type: NgZone },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatFormField.propDecorators = {\n    appearance: [{ type: Input }],\n    hideRequiredMarker: [{ type: Input }],\n    hintLabel: [{ type: Input }],\n    floatLabel: [{ type: Input }],\n    underlineRef: [{ type: ViewChild, args: ['underline',] }],\n    _connectionContainerRef: [{ type: ViewChild, args: ['connectionContainer', { static: true },] }],\n    _inputContainerRef: [{ type: ViewChild, args: ['inputContainer',] }],\n    _label: [{ type: ViewChild, args: ['label',] }],\n    _controlNonStatic: [{ type: ContentChild, args: [MatFormFieldControl,] }],\n    _controlStatic: [{ type: ContentChild, args: [MatFormFieldControl, { static: true },] }],\n    _labelChildNonStatic: [{ type: ContentChild, args: [MatLabel,] }],\n    _labelChildStatic: [{ type: ContentChild, args: [MatLabel, { static: true },] }],\n    _placeholderChild: [{ type: ContentChild, args: [MatPlaceholder,] }],\n    _errorChildren: [{ type: ContentChildren, args: [MatError, { descendants: true },] }],\n    _hintChildren: [{ type: ContentChildren, args: [MatHint, { descendants: true },] }],\n    _prefixChildren: [{ type: ContentChildren, args: [MatPrefix, { descendants: true },] }],\n    _suffixChildren: [{ type: ContentChildren, args: [MatSuffix, { descendants: true },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFormField, [{\n        type: Component,\n        args: [{\n                selector: 'mat-form-field',\n                exportAs: 'matFormField',\n                template: \"<div class=\\\"mat-form-field-wrapper\\\">\\n  <div class=\\\"mat-form-field-flex\\\" #connectionContainer\\n       (click)=\\\"_control.onContainerClick && _control.onContainerClick($event)\\\">\\n\\n    <!-- Outline used for outline appearance. -->\\n    <ng-container *ngIf=\\\"appearance == 'outline'\\\">\\n      <div class=\\\"mat-form-field-outline\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n      <div class=\\\"mat-form-field-outline mat-form-field-outline-thick\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n    </ng-container>\\n\\n    <div class=\\\"mat-form-field-prefix\\\" *ngIf=\\\"_prefixChildren.length\\\">\\n      <ng-content select=\\\"[matPrefix]\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-infix\\\" #inputContainer>\\n      <ng-content></ng-content>\\n\\n      <span class=\\\"mat-form-field-label-wrapper\\\">\\n        <!-- We add aria-owns as a workaround for an issue in JAWS & NVDA where the label isn't\\n             read if it comes before the control in the DOM. -->\\n        <label class=\\\"mat-form-field-label\\\"\\n               (cdkObserveContent)=\\\"updateOutlineGap()\\\"\\n               [cdkObserveContentDisabled]=\\\"appearance != 'outline'\\\"\\n               [id]=\\\"_labelId\\\"\\n               [attr.for]=\\\"_control.id\\\"\\n               [attr.aria-owns]=\\\"_control.id\\\"\\n               [class.mat-empty]=\\\"_control.empty && !_shouldAlwaysFloat\\\"\\n               [class.mat-form-field-empty]=\\\"_control.empty && !_shouldAlwaysFloat\\\"\\n               [class.mat-accent]=\\\"color == 'accent'\\\"\\n               [class.mat-warn]=\\\"color == 'warn'\\\"\\n               #label\\n               *ngIf=\\\"_hasFloatingLabel()\\\"\\n               [ngSwitch]=\\\"_hasLabel()\\\">\\n\\n          <!-- @breaking-change 8.0.0 remove in favor of mat-label element an placeholder attr. -->\\n          <ng-container *ngSwitchCase=\\\"false\\\">\\n            <ng-content select=\\\"mat-placeholder\\\"></ng-content>\\n            <span>{{_control.placeholder}}</span>\\n          </ng-container>\\n\\n          <ng-content select=\\\"mat-label\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n\\n          <!-- @breaking-change 8.0.0 remove `mat-placeholder-required` class -->\\n          <span\\n            class=\\\"mat-placeholder-required mat-form-field-required-marker\\\"\\n            aria-hidden=\\\"true\\\"\\n            *ngIf=\\\"!hideRequiredMarker && _control.required && !_control.disabled\\\">&#32;*</span>\\n        </label>\\n      </span>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-suffix\\\" *ngIf=\\\"_suffixChildren.length\\\">\\n      <ng-content select=\\\"[matSuffix]\\\"></ng-content>\\n    </div>\\n  </div>\\n\\n  <!-- Underline used for legacy, standard, and box appearances. -->\\n  <div class=\\\"mat-form-field-underline\\\" #underline\\n       *ngIf=\\\"appearance != 'outline'\\\">\\n    <span class=\\\"mat-form-field-ripple\\\"\\n          [class.mat-accent]=\\\"color == 'accent'\\\"\\n          [class.mat-warn]=\\\"color == 'warn'\\\"></span>\\n  </div>\\n\\n  <div class=\\\"mat-form-field-subscript-wrapper\\\"\\n       [ngSwitch]=\\\"_getDisplayedMessages()\\\">\\n    <div *ngSwitchCase=\\\"'error'\\\" [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <ng-content select=\\\"mat-error\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-hint-wrapper\\\" *ngSwitchCase=\\\"'hint'\\\"\\n      [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <!-- TODO(mmalerba): use an actual <mat-hint> once all selectors are switched to mat-* -->\\n      <div *ngIf=\\\"hintLabel\\\" [id]=\\\"_hintLabelId\\\" class=\\\"mat-hint\\\">{{hintLabel}}</div>\\n      <ng-content select=\\\"mat-hint:not([align='end'])\\\"></ng-content>\\n      <div class=\\\"mat-form-field-hint-spacer\\\"></div>\\n      <ng-content select=\\\"mat-hint[align='end']\\\"></ng-content>\\n    </div>\\n  </div>\\n</div>\\n\",\n                animations: [matFormFieldAnimations.transitionMessages],\n                host: {\n                    'class': 'mat-form-field',\n                    '[class.mat-form-field-appearance-standard]': 'appearance == \"standard\"',\n                    '[class.mat-form-field-appearance-fill]': 'appearance == \"fill\"',\n                    '[class.mat-form-field-appearance-outline]': 'appearance == \"outline\"',\n                    '[class.mat-form-field-appearance-legacy]': 'appearance == \"legacy\"',\n                    '[class.mat-form-field-invalid]': '_control.errorState',\n                    '[class.mat-form-field-can-float]': '_canLabelFloat',\n                    '[class.mat-form-field-should-float]': '_shouldLabelFloat()',\n                    '[class.mat-form-field-has-label]': '_hasFloatingLabel()',\n                    '[class.mat-form-field-hide-placeholder]': '_hideControlPlaceholder()',\n                    '[class.mat-form-field-disabled]': '_control.disabled',\n                    '[class.mat-form-field-autofilled]': '_control.autofilled',\n                    '[class.mat-focused]': '_control.focused',\n                    '[class.mat-accent]': 'color == \"accent\"',\n                    '[class.mat-warn]': 'color == \"warn\"',\n                    '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n                    '[class.ng-touched]': '_shouldForward(\"touched\")',\n                    '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n                    '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n                    '[class.ng-valid]': '_shouldForward(\"valid\")',\n                    '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n                    '[class.ng-pending]': '_shouldForward(\"pending\")',\n                    '[class._mat-animation-noopable]': '!_animationsEnabled'\n                },\n                inputs: ['color'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                providers: [\n                    { provide: MAT_FORM_FIELD, useExisting: MatFormField },\n                ],\n                styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:scaleX(1);transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\\n\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\\n\", \".mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:none}.mat-focused .cdk-high-contrast-active select.mat-input-element::-ms-value{color:inherit}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\\n\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\\n\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\\n\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_LABEL_GLOBAL_OPTIONS]\n            }] }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD_DEFAULT_OPTIONS]\n            }] }, { type: ɵngcc2.Platform }, { type: ɵngcc0.NgZone }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { floatLabel: [{\n            type: Input\n        }], appearance: [{\n            type: Input\n        }], hideRequiredMarker: [{\n            type: Input\n        }], hintLabel: [{\n            type: Input\n        }], underlineRef: [{\n            type: ViewChild,\n            args: ['underline']\n        }], _connectionContainerRef: [{\n            type: ViewChild,\n            args: ['connectionContainer', { static: true }]\n        }], _inputContainerRef: [{\n            type: ViewChild,\n            args: ['inputContainer']\n        }], _label: [{\n            type: ViewChild,\n            args: ['label']\n        }], _controlNonStatic: [{\n            type: ContentChild,\n            args: [MatFormFieldControl]\n        }], _controlStatic: [{\n            type: ContentChild,\n            args: [MatFormFieldControl, { static: true }]\n        }], _labelChildNonStatic: [{\n            type: ContentChild,\n            args: [MatLabel]\n        }], _labelChildStatic: [{\n            type: ContentChild,\n            args: [MatLabel, { static: true }]\n        }], _placeholderChild: [{\n            type: ContentChild,\n            args: [MatPlaceholder]\n        }], _errorChildren: [{\n            type: ContentChildren,\n            args: [MatError, { descendants: true }]\n        }], _hintChildren: [{\n            type: ContentChildren,\n            args: [MatHint, { descendants: true }]\n        }], _prefixChildren: [{\n            type: ContentChildren,\n            args: [MatPrefix, { descendants: true }]\n        }], _suffixChildren: [{\n            type: ContentChildren,\n            args: [MatSuffix, { descendants: true }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatFormField.ngAcceptInputType_hideRequiredMarker;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._labelOptions;\n    /**\n     * Whether the outline gap needs to be calculated\n     * immediately on the next change detection run.\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._outlineGapCalculationNeededImmediately;\n    /**\n     * Whether the outline gap needs to be calculated next time the zone has stabilized.\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._outlineGapCalculationNeededOnStable;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._destroyed;\n    /** @type {?} */\n    MatFormField.prototype._appearance;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._hideRequiredMarker;\n    /**\n     * Override for the logic that disables the label animation in certain cases.\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._showAlwaysAnimate;\n    /**\n     * State of the mat-hint and mat-error animations.\n     * @type {?}\n     */\n    MatFormField.prototype._subscriptAnimationState;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._hintLabel;\n    /** @type {?} */\n    MatFormField.prototype._hintLabelId;\n    /** @type {?} */\n    MatFormField.prototype._labelId;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._floatLabel;\n    /**\n     * Whether the Angular animations are enabled.\n     * @type {?}\n     */\n    MatFormField.prototype._animationsEnabled;\n    /**\n     * @deprecated\n     * \\@breaking-change 8.0.0\n     * @type {?}\n     */\n    MatFormField.prototype.underlineRef;\n    /** @type {?} */\n    MatFormField.prototype._connectionContainerRef;\n    /** @type {?} */\n    MatFormField.prototype._inputContainerRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._label;\n    /** @type {?} */\n    MatFormField.prototype._controlNonStatic;\n    /** @type {?} */\n    MatFormField.prototype._controlStatic;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._explicitFormFieldControl;\n    /** @type {?} */\n    MatFormField.prototype._labelChildNonStatic;\n    /** @type {?} */\n    MatFormField.prototype._labelChildStatic;\n    /** @type {?} */\n    MatFormField.prototype._placeholderChild;\n    /** @type {?} */\n    MatFormField.prototype._errorChildren;\n    /** @type {?} */\n    MatFormField.prototype._hintChildren;\n    /** @type {?} */\n    MatFormField.prototype._prefixChildren;\n    /** @type {?} */\n    MatFormField.prototype._suffixChildren;\n    /** @type {?} */\n    MatFormField.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._defaults;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._ngZone;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/form-field-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatFormFieldModule {\n}\nMatFormFieldModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatFormFieldModule });\nMatFormFieldModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatFormFieldModule_Factory(t) { return new (t || MatFormFieldModule)(); }, imports: [[\n            CommonModule,\n            ObserversModule,\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatFormFieldModule, { declarations: function () { return [MatError,\n        MatFormField,\n        MatHint,\n        MatLabel,\n        MatPlaceholder,\n        MatPrefix,\n        MatSuffix]; }, imports: function () { return [CommonModule,\n        ObserversModule]; }, exports: function () { return [MatError,\n        MatFormField,\n        MatHint,\n        MatLabel,\n        MatPlaceholder,\n        MatPrefix,\n        MatSuffix]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFormFieldModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    MatError,\n                    MatFormField,\n                    MatHint,\n                    MatLabel,\n                    MatPlaceholder,\n                    MatPrefix,\n                    MatSuffix,\n                ],\n                imports: [\n                    CommonModule,\n                    ObserversModule,\n                ],\n                exports: [\n                    MatError,\n                    MatFormField,\n                    MatHint,\n                    MatLabel,\n                    MatPlaceholder,\n                    MatPrefix,\n                    MatSuffix,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_FORM_FIELD, MAT_FORM_FIELD_DEFAULT_OPTIONS, MatError, MatFormField, MatFormFieldControl, MatFormFieldModule, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix, getMatFormFieldDuplicatedHintError, getMatFormFieldMissingControlError, getMatFormFieldPlaceholderConflictError, matFormFieldAnimations };\n\n//# sourceMappingURL=form-field.js.map","import { CdkTextareaAutosize, AutofillMonitor, TextFieldModule } from '@angular/cdk/text-field';\nimport { Directive, Input, InjectionToken, ElementRef, Optional, Self, Inject, NgZone, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { getSupportedInputTypes, Platform } from '@angular/cdk/platform';\nimport { NgControl, NgForm, FormGroupDirective } from '@angular/forms';\nimport { mixinErrorState, ErrorStateMatcher } from '@angular/material/core';\nimport { MatFormFieldControl, MatFormFieldModule } from '@angular/material/form-field';\nimport { Subject } from 'rxjs';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/input/autosize.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Directive to automatically resize a textarea to fit its content.\n * @deprecated Use `cdkTextareaAutosize` from `\\@angular/cdk/text-field` instead.\n * \\@breaking-change 8.0.0\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/forms';\nimport * as ɵngcc3 from '@angular/material/core';\nimport * as ɵngcc4 from '@angular/cdk/text-field';\nclass MatTextareaAutosize extends CdkTextareaAutosize {\n    /**\n     * @return {?}\n     */\n    get matAutosizeMinRows() { return this.minRows; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set matAutosizeMinRows(value) { this.minRows = value; }\n    /**\n     * @return {?}\n     */\n    get matAutosizeMaxRows() { return this.maxRows; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set matAutosizeMaxRows(value) { this.maxRows = value; }\n    /**\n     * @return {?}\n     */\n    get matAutosize() { return this.enabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set matAutosize(value) { this.enabled = value; }\n    /**\n     * @return {?}\n     */\n    get matTextareaAutosize() { return this.enabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set matTextareaAutosize(value) { this.enabled = value; }\n}\nMatTextareaAutosize.ɵfac = function MatTextareaAutosize_Factory(t) { return ɵMatTextareaAutosize_BaseFactory(t || MatTextareaAutosize); };\nMatTextareaAutosize.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTextareaAutosize, selectors: [[\"textarea\", \"mat-autosize\", \"\"], [\"textarea\", \"matTextareaAutosize\", \"\"]], hostAttrs: [\"rows\", \"1\", 1, \"cdk-textarea-autosize\", \"mat-autosize\"], inputs: { cdkAutosizeMinRows: \"cdkAutosizeMinRows\", cdkAutosizeMaxRows: \"cdkAutosizeMaxRows\", matAutosizeMinRows: \"matAutosizeMinRows\", matAutosizeMaxRows: \"matAutosizeMaxRows\", matAutosize: [\"mat-autosize\", \"matAutosize\"], matTextareaAutosize: \"matTextareaAutosize\" }, exportAs: [\"matTextareaAutosize\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTextareaAutosize.propDecorators = {\n    matAutosizeMinRows: [{ type: Input }],\n    matAutosizeMaxRows: [{ type: Input }],\n    matAutosize: [{ type: Input, args: ['mat-autosize',] }],\n    matTextareaAutosize: [{ type: Input }]\n};\nconst ɵMatTextareaAutosize_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTextareaAutosize);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTextareaAutosize, [{\n        type: Directive,\n        args: [{\n                selector: 'textarea[mat-autosize], textarea[matTextareaAutosize]',\n                exportAs: 'matTextareaAutosize',\n                inputs: ['cdkAutosizeMinRows', 'cdkAutosizeMaxRows'],\n                host: {\n                    'class': 'cdk-textarea-autosize mat-autosize',\n                    // Textarea elements that have the directive applied should have a single row by default.\n                    // Browsers normally show two rows by default and therefore this limits the minRows binding.\n                    'rows': '1'\n                }\n            }]\n    }], null, { matAutosizeMinRows: [{\n            type: Input\n        }], matAutosizeMaxRows: [{\n            type: Input\n        }], matAutosize: [{\n            type: Input,\n            args: ['mat-autosize']\n        }], matTextareaAutosize: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/input/input-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@docs-private\n * @param {?} type\n * @return {?}\n */\nfunction getMatInputUnsupportedTypeError(type) {\n    return Error(`Input type \"${type}\" isn't supported by matInput.`);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/input/input-value-accessor.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * This token is used to inject the object whose value should be set into `MatInput`. If none is\n * provided, the native `HTMLInputElement` is used. Directives like `MatDatepickerInput` can provide\n * themselves for this token, in order to make `MatInput` delegate the getting and setting of the\n * value to them.\n * @type {?}\n */\nconst MAT_INPUT_VALUE_ACCESSOR = new InjectionToken('MAT_INPUT_VALUE_ACCESSOR');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/input/input.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Invalid input type. Using one of these will throw an MatInputUnsupportedTypeError.\n/** @type {?} */\nconst MAT_INPUT_INVALID_TYPES = [\n    'button',\n    'checkbox',\n    'file',\n    'hidden',\n    'image',\n    'radio',\n    'range',\n    'reset',\n    'submit'\n];\n/** @type {?} */\nlet nextUniqueId = 0;\n// Boilerplate for applying mixins to MatInput.\n/**\n * \\@docs-private\n */\nclass MatInputBase {\n    /**\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} ngControl\n     */\n    constructor(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl) {\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatInputBase.prototype._defaultErrorStateMatcher;\n    /** @type {?} */\n    MatInputBase.prototype._parentForm;\n    /** @type {?} */\n    MatInputBase.prototype._parentFormGroup;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInputBase.prototype.ngControl;\n}\n/** @type {?} */\nconst _MatInputMixinBase = mixinErrorState(MatInputBase);\n/**\n * Directive that allows a native input to work inside a `MatFormField`.\n */\nclass MatInput extends _MatInputMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _platform\n     * @param {?} ngControl\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} inputValueAccessor\n     * @param {?} _autofillMonitor\n     * @param {?} ngZone\n     */\n    constructor(_elementRef, _platform, ngControl, _parentForm, _parentFormGroup, _defaultErrorStateMatcher, inputValueAccessor, _autofillMonitor, ngZone) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._elementRef = _elementRef;\n        this._platform = _platform;\n        this.ngControl = ngControl;\n        this._autofillMonitor = _autofillMonitor;\n        this._uid = `mat-input-${nextUniqueId++}`;\n        /**\n         * Whether the component is being rendered on the server.\n         */\n        this._isServer = false;\n        /**\n         * Whether the component is a native html select.\n         */\n        this._isNativeSelect = false;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        this.focused = false;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        this.stateChanges = new Subject();\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        this.controlType = 'mat-input';\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        this.autofilled = false;\n        this._disabled = false;\n        this._required = false;\n        this._type = 'text';\n        this._readonly = false;\n        this._neverEmptyInputTypes = [\n            'date',\n            'datetime',\n            'datetime-local',\n            'month',\n            'time',\n            'week'\n        ].filter((/**\n         * @param {?} t\n         * @return {?}\n         */\n        t => getSupportedInputTypes().has(t)));\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this._inputValueAccessor = inputValueAccessor || element;\n        this._previousNativeValue = this.value;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n        // On some versions of iOS the caret gets stuck in the wrong place when holding down the delete\n        // key. In order to get around this we need to \"jiggle\" the caret loose. Since this bug only\n        // exists on iOS, we only bother to install the listener on iOS.\n        if (_platform.IOS) {\n            ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                _elementRef.nativeElement.addEventListener('keyup', (/**\n                 * @param {?} event\n                 * @return {?}\n                 */\n                (event) => {\n                    /** @type {?} */\n                    let el = (/** @type {?} */ (event.target));\n                    if (!el.value && !el.selectionStart && !el.selectionEnd) {\n                        // Note: Just setting `0, 0` doesn't fix the issue. Setting\n                        // `1, 1` fixes it for the first time that you type text and\n                        // then hold delete. Toggling to `1, 1` and then back to\n                        // `0, 0` seems to completely fix it.\n                        el.setSelectionRange(1, 1);\n                        el.setSelectionRange(0, 0);\n                    }\n                }));\n            }));\n        }\n        this._isServer = !this._platform.isBrowser;\n        this._isNativeSelect = element.nodeName.toLowerCase() === 'select';\n        if (this._isNativeSelect) {\n            this.controlType = ((/** @type {?} */ (element))).multiple ? 'mat-native-select-multiple' :\n                'mat-native-select';\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get disabled() {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n        return this._disabled;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get id() { return this._id; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set id(value) { this._id = value || this._uid; }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get required() { return this._required; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) { this._required = coerceBooleanProperty(value); }\n    /**\n     * Input type of the element.\n     * @return {?}\n     */\n    get type() { return this._type; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set type(value) {\n        this._type = value || 'text';\n        this._validateType();\n        // When using Angular inputs, developers are no longer able to set the properties on the native\n        // input element. To ensure that bindings for `type` work, we need to sync the setter\n        // with the native property. Textarea elements don't support the type property or attribute.\n        if (!this._isTextarea() && getSupportedInputTypes().has(this._type)) {\n            ((/** @type {?} */ (this._elementRef.nativeElement))).type = this._type;\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get value() { return this._inputValueAccessor.value; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set value(value) {\n        if (value !== this.value) {\n            this._inputValueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Whether the element is readonly.\n     * @return {?}\n     */\n    get readonly() { return this._readonly; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set readonly(value) { this._readonly = coerceBooleanProperty(value); }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this._platform.isBrowser) {\n            this._autofillMonitor.monitor(this._elementRef.nativeElement).subscribe((/**\n             * @param {?} event\n             * @return {?}\n             */\n            event => {\n                this.autofilled = event.isAutofilled;\n                this.stateChanges.next();\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.stateChanges.complete();\n        if (this._platform.isBrowser) {\n            this._autofillMonitor.stopMonitoring(this._elementRef.nativeElement);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this._dirtyCheckNativeValue();\n    }\n    /**\n     * Focuses the input.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /**\n     * Callback for the cases where the focused state of the input changes.\n     * @param {?} isFocused\n     * @return {?}\n     */\n    _focusChanged(isFocused) {\n        if (isFocused !== this.focused && (!this.readonly || !isFocused)) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _onInput() {\n        // This is a noop function and is used to let Angular know whenever the value changes.\n        // Angular will run a new change detection each time the `input` event has been dispatched.\n        // It's necessary that Angular recognizes the value change, because when floatingLabel\n        // is set to false and Angular forms aren't used, the placeholder won't recognize the\n        // value changes and will not disappear.\n        // Listening to the input event wouldn't be necessary when the input is using the\n        // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n    }\n    /**\n     * Determines if the component host is a textarea.\n     * @return {?}\n     */\n    _isTextarea() {\n        return this._elementRef.nativeElement.nodeName.toLowerCase() === 'textarea';\n    }\n    /**\n     * Does some manual dirty checking on the native input `value` property.\n     * @protected\n     * @return {?}\n     */\n    _dirtyCheckNativeValue() {\n        /** @type {?} */\n        const newValue = this._elementRef.nativeElement.value;\n        if (this._previousNativeValue !== newValue) {\n            this._previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Make sure the input is a supported type.\n     * @protected\n     * @return {?}\n     */\n    _validateType() {\n        if (MAT_INPUT_INVALID_TYPES.indexOf(this._type) > -1) {\n            throw getMatInputUnsupportedTypeError(this._type);\n        }\n    }\n    /**\n     * Checks whether the input type is one of the types that are never empty.\n     * @protected\n     * @return {?}\n     */\n    _isNeverEmpty() {\n        return this._neverEmptyInputTypes.indexOf(this._type) > -1;\n    }\n    /**\n     * Checks whether the input is invalid based on the native validation.\n     * @protected\n     * @return {?}\n     */\n    _isBadInput() {\n        // The `validity` property won't be present on platform-server.\n        /** @type {?} */\n        let validity = ((/** @type {?} */ (this._elementRef.nativeElement))).validity;\n        return validity && validity.badInput;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get empty() {\n        return !this._isNeverEmpty() && !this._elementRef.nativeElement.value && !this._isBadInput() &&\n            !this.autofilled;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get shouldLabelFloat() {\n        if (this._isNativeSelect) {\n            // For a single-selection `<select>`, the label should float when the selected option has\n            // a non-empty display value. For a `<select multiple>`, the label *always* floats to avoid\n            // overlapping the label with the options.\n            /** @type {?} */\n            const selectElement = (/** @type {?} */ (this._elementRef.nativeElement));\n            /** @type {?} */\n            const firstOption = selectElement.options[0];\n            // On most browsers the `selectedIndex` will always be 0, however on IE and Edge it'll be\n            // -1 if the `value` is set to something, that isn't in the list of options, at a later point.\n            return this.focused || selectElement.multiple || !this.empty ||\n                !!(selectElement.selectedIndex > -1 && firstOption && firstOption.label);\n        }\n        else {\n            return this.focused || !this.empty;\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @param {?} ids\n     * @return {?}\n     */\n    setDescribedByIds(ids) {\n        this._ariaDescribedby = ids.join(' ');\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    onContainerClick() {\n        // Do not re-focus the input element if the element is already focused. Otherwise it can happen\n        // that someone clicks on a time input and the cursor resets to the \"hours\" field while the\n        // \"minutes\" field was actually clicked. See: https://github.com/angular/components/issues/12849\n        if (!this.focused) {\n            this.focus();\n        }\n    }\n}\nMatInput.ɵfac = function MatInput_Factory(t) { return new (t || MatInput)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NgControl, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(MAT_INPUT_VALUE_ACCESSOR, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.AutofillMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nMatInput.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatInput, selectors: [[\"input\", \"matInput\", \"\"], [\"textarea\", \"matInput\", \"\"], [\"select\", \"matNativeControl\", \"\"], [\"input\", \"matNativeControl\", \"\"], [\"textarea\", \"matNativeControl\", \"\"]], hostAttrs: [1, \"mat-input-element\", \"mat-form-field-autofill-control\"], hostVars: 10, hostBindings: function MatInput_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"blur\", function MatInput_blur_HostBindingHandler() { return ctx._focusChanged(false); })(\"focus\", function MatInput_focus_HostBindingHandler() { return ctx._focusChanged(true); })(\"input\", function MatInput_input_HostBindingHandler() { return ctx._onInput(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"disabled\", ctx.disabled)(\"required\", ctx.required);\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"placeholder\", ctx.placeholder)(\"readonly\", ctx.readonly && !ctx._isNativeSelect || null)(\"aria-describedby\", ctx._ariaDescribedby || null)(\"aria-invalid\", ctx.errorState)(\"aria-required\", ctx.required.toString());\n        ɵngcc0.ɵɵclassProp(\"mat-input-server\", ctx._isServer);\n    } }, inputs: { id: \"id\", disabled: \"disabled\", required: \"required\", type: \"type\", value: \"value\", readonly: \"readonly\", placeholder: \"placeholder\", errorStateMatcher: \"errorStateMatcher\" }, exportAs: [\"matInput\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MatFormFieldControl, useExisting: MatInput }]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nMatInput.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: NgControl, decorators: [{ type: Optional }, { type: Self }] },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: ErrorStateMatcher },\n    { type: undefined, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [MAT_INPUT_VALUE_ACCESSOR,] }] },\n    { type: AutofillMonitor },\n    { type: NgZone }\n];\nMatInput.propDecorators = {\n    disabled: [{ type: Input }],\n    id: [{ type: Input }],\n    placeholder: [{ type: Input }],\n    required: [{ type: Input }],\n    type: [{ type: Input }],\n    errorStateMatcher: [{ type: Input }],\n    value: [{ type: Input }],\n    readonly: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatInput, [{\n        type: Directive,\n        args: [{\n                selector: `input[matInput], textarea[matInput], select[matNativeControl],\n      input[matNativeControl], textarea[matNativeControl]`,\n                exportAs: 'matInput',\n                host: {\n                    /**\n                     * \\@breaking-change 8.0.0 remove .mat-form-field-autofill-control in favor of AutofillMonitor.\n                     */\n                    'class': 'mat-input-element mat-form-field-autofill-control',\n                    '[class.mat-input-server]': '_isServer',\n                    // Native input properties that are overwritten by Angular inputs need to be synced with\n                    // the native input element. Otherwise property bindings for those don't work.\n                    '[attr.id]': 'id',\n                    '[attr.placeholder]': 'placeholder',\n                    '[disabled]': 'disabled',\n                    '[required]': 'required',\n                    '[attr.readonly]': 'readonly && !_isNativeSelect || null',\n                    '[attr.aria-describedby]': '_ariaDescribedby || null',\n                    '[attr.aria-invalid]': 'errorState',\n                    '[attr.aria-required]': 'required.toString()',\n                    '(blur)': '_focusChanged(false)',\n                    '(focus)': '_focusChanged(true)',\n                    '(input)': '_onInput()'\n                },\n                providers: [{ provide: MatFormFieldControl, useExisting: MatInput }]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: ɵngcc2.NgControl, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }] }, { type: ɵngcc2.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc2.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.ErrorStateMatcher }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [MAT_INPUT_VALUE_ACCESSOR]\n            }] }, { type: ɵngcc4.AutofillMonitor }, { type: ɵngcc0.NgZone }]; }, { id: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], type: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], readonly: [{\n            type: Input\n        }], placeholder: [{\n            type: Input\n        }], errorStateMatcher: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatInput.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatInput.ngAcceptInputType_readonly;\n    /** @type {?} */\n    MatInput.ngAcceptInputType_required;\n    /** @type {?} */\n    MatInput.ngAcceptInputType_value;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._uid;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._previousNativeValue;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatInput.prototype._inputValueAccessor;\n    /**\n     * The aria-describedby attribute on the input for improved a11y.\n     * @type {?}\n     */\n    MatInput.prototype._ariaDescribedby;\n    /**\n     * Whether the component is being rendered on the server.\n     * @type {?}\n     */\n    MatInput.prototype._isServer;\n    /**\n     * Whether the component is a native html select.\n     * @type {?}\n     */\n    MatInput.prototype._isNativeSelect;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInput.prototype.focused;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInput.prototype.stateChanges;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInput.prototype.controlType;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInput.prototype.autofilled;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._disabled;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._id;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInput.prototype.placeholder;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._required;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._type;\n    /**\n     * An object used to control when error messages are shown.\n     * @type {?}\n     */\n    MatInput.prototype.errorStateMatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatInput.prototype._readonly;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._neverEmptyInputTypes;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._elementRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._platform;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInput.prototype.ngControl;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatInput.prototype._autofillMonitor;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/input/input-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatInputModule {\n}\nMatInputModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatInputModule });\nMatInputModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatInputModule_Factory(t) { return new (t || MatInputModule)(); }, providers: [ErrorStateMatcher], imports: [[\n            TextFieldModule,\n            MatFormFieldModule,\n        ],\n        TextFieldModule,\n        // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n        // be used together with `MatFormField`.\n        MatFormFieldModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatInputModule, { declarations: function () { return [MatInput,\n        MatTextareaAutosize]; }, imports: function () { return [TextFieldModule,\n        MatFormFieldModule]; }, exports: function () { return [TextFieldModule,\n        // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n        // be used together with `MatFormField`.\n        MatFormFieldModule,\n        MatInput,\n        MatTextareaAutosize]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatInputModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [MatInput, MatTextareaAutosize],\n                imports: [\n                    TextFieldModule,\n                    MatFormFieldModule,\n                ],\n                exports: [\n                    TextFieldModule,\n                    // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n                    // be used together with `MatFormField`.\n                    MatFormFieldModule,\n                    MatInput,\n                    MatTextareaAutosize,\n                ],\n                providers: [ErrorStateMatcher]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/input/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_INPUT_VALUE_ACCESSOR, MatInput, MatInputModule, MatTextareaAutosize, getMatInputUnsupportedTypeError };\n\n//# sourceMappingURL=input.js.map","import { Overlay, CdkConnectedOverlay, OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, EventEmitter, isDevMode, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, NgZone, ElementRef, Optional, Inject, Self, Attribute, ViewChild, ContentChildren, Input, ContentChild, Output, NgModule } from '@angular/core';\nimport { mixinDisableRipple, mixinTabIndex, mixinDisabled, mixinErrorState, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MAT_OPTION_PARENT_COMPONENT, ErrorStateMatcher, MatOption, MatOptgroup, MatOptionModule, MatCommonModule } from '@angular/material/core';\nimport { MatFormFieldControl, MatFormField, MAT_FORM_FIELD, MatFormFieldModule } from '@angular/material/form-field';\nimport { ActiveDescendantKeyManager, LiveAnnouncer } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { DOWN_ARROW, UP_ARROW, LEFT_ARROW, RIGHT_ARROW, ENTER, SPACE, hasModifierKey, HOME, END, A } from '@angular/cdk/keycodes';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { NgForm, FormGroupDirective, NgControl } from '@angular/forms';\nimport { Subject, defer, merge } from 'rxjs';\nimport { startWith, switchMap, take, filter, map, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { trigger, transition, query, animateChild, state, style, animate } from '@angular/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/select-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The following are all the animations for the mat-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mat-select animation.\n * \\@docs-private\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/forms';\nimport * as ɵngcc5 from '@angular/cdk/a11y';\nimport * as ɵngcc6 from '@angular/cdk/overlay';\nimport * as ɵngcc7 from '@angular/common';\nimport * as ɵngcc8 from '@angular/material/form-field';\n\nconst _c0 = [\"trigger\"];\nconst _c1 = [\"panel\"];\nfunction MatSelect_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 8);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r2.placeholder || \"\\u00A0\");\n} }\nfunction MatSelect_span_5_span_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r5.triggerValue || \"\\u00A0\");\n} }\nfunction MatSelect_span_5_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 0, [\"*ngSwitchCase\", \"true\"]);\n} }\nfunction MatSelect_span_5_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 9);\n    ɵngcc0.ɵɵtemplate(1, MatSelect_span_5_span_1_Template, 2, 1, \"span\", 10);\n    ɵngcc0.ɵɵtemplate(2, MatSelect_span_5_2_Template, 1, 0, undefined, 11);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngSwitch\", !!ctx_r3.customTrigger);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n} }\nfunction MatSelect_ng_template_8_Template(rf, ctx) { if (rf & 1) {\n    const _r9 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 12);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 13, 14);\n    ɵngcc0.ɵɵlistener(\"@transformPanel.done\", function MatSelect_ng_template_8_Template_div_animation_transformPanel_done_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r8 = ɵngcc0.ɵɵnextContext(); return ctx_r8._panelDoneAnimatingStream.next($event.toState); })(\"keydown\", function MatSelect_ng_template_8_Template_div_keydown_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10._handleKeydown($event); });\n    ɵngcc0.ɵɵprojection(3, 1);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transformPanelWrap\", undefined);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassMapInterpolate1(\"mat-select-panel \", ctx_r4._getPanelTheme(), \"\");\n    ɵngcc0.ɵɵstyleProp(\"transform-origin\", ctx_r4._transformOrigin)(\"font-size\", ctx_r4._triggerFontSize, \"px\");\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r4.panelClass)(\"@transformPanel\", ctx_r4.multiple ? \"showing-multiple\" : \"showing\");\n} }\nconst _c2 = [[[\"mat-select-trigger\"]], \"*\"];\nconst _c3 = [\"mat-select-trigger\", \"*\"];\nconst matSelectAnimations = {\n    /**\n     * This animation ensures the select's overlay panel animation (transformPanel) is called when\n     * closing the select.\n     * This is needed due to https://github.com/angular/angular/issues/23302\n     */\n    transformPanelWrap: trigger('transformPanelWrap', [\n        transition('* => void', query('@transformPanel', [animateChild()], { optional: true }))\n    ]),\n    /**\n     * This animation transforms the select's overlay panel on and off the page.\n     *\n     * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\n     * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\n     * side to ensure the option text correctly overlaps the trigger text.\n     *\n     * When the panel is removed from the DOM, it simply fades out linearly.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            transform: 'scaleY(0.8)',\n            minWidth: '100%',\n            opacity: 0\n        })),\n        state('showing', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 32px)',\n            // 32px = 2 * 16px padding\n            transform: 'scaleY(1)'\n        })),\n        state('showing-multiple', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 64px)',\n            // 64px = 48px padding on the left + 16px padding on the right\n            transform: 'scaleY(1)'\n        })),\n        transition('void => *', animate('120ms cubic-bezier(0, 0, 0.2, 1)')),\n        transition('* => void', animate('100ms 25ms linear', style({ opacity: 0 })))\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/select-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * \\@docs-private\n * @return {?}\n */\nfunction getMatSelectDynamicMultipleError() {\n    return Error('Cannot change `multiple` mode of select after initialization.');\n}\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * \\@docs-private\n * @return {?}\n */\nfunction getMatSelectNonArrayValueError() {\n    return Error('Value must be an array in multiple-selection mode.');\n}\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n * @return {?}\n */\nfunction getMatSelectNonFunctionValueError() {\n    return Error('`compareWith` must be a function.');\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/select.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextUniqueId = 0;\n/**\n * The max height of the select's overlay panel\n * @type {?}\n */\nconst SELECT_PANEL_MAX_HEIGHT = 256;\n/**\n * The panel's padding on the x-axis\n * @type {?}\n */\nconst SELECT_PANEL_PADDING_X = 16;\n/**\n * The panel's x axis padding if it is indented (e.g. there is an option group).\n * @type {?}\n */\nconst SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\n/**\n * The height of the select items in `em` units.\n * @type {?}\n */\nconst SELECT_ITEM_HEIGHT_EM = 3;\n// TODO(josephperrott): Revert to a constant after 2018 spec updates are fully merged.\n/**\n * Distance between the panel edge and the option text in\n * multi-selection mode.\n *\n * Calculated as:\n * (SELECT_PANEL_PADDING_X * 1.5) + 16 = 40\n * The padding is multiplied by 1.5 because the checkbox's margin is half the padding.\n * The checkbox width is 16px.\n * @type {?}\n */\nconst SELECT_MULTIPLE_PANEL_PADDING_X = SELECT_PANEL_PADDING_X * 1.5 + 16;\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n * @type {?}\n */\nconst SELECT_PANEL_VIEWPORT_PADDING = 8;\n/**\n * Injection token that determines the scroll handling while a select is open.\n * @type {?}\n */\nconst MAT_SELECT_SCROLL_STRATEGY = new InjectionToken('mat-select-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.reposition());\n}\n/**\n * Object that can be used to configure the default options for the select module.\n * @record\n */\nfunction MatSelectConfig() { }\nif (false) {\n    /**\n     * Whether option centering should be disabled.\n     * @type {?|undefined}\n     */\n    MatSelectConfig.prototype.disableOptionCentering;\n    /**\n     * Time to wait in milliseconds after the last keystroke before moving focus to an item.\n     * @type {?|undefined}\n     */\n    MatSelectConfig.prototype.typeaheadDebounceInterval;\n}\n/**\n * Injection token that can be used to provide the default options the select module.\n * @type {?}\n */\nconst MAT_SELECT_CONFIG = new InjectionToken('MAT_SELECT_CONFIG');\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_SELECT_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_SELECT_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/**\n * Change event object that is emitted when the select value has changed.\n */\nclass MatSelectChange {\n    /**\n     * @param {?} source\n     * @param {?} value\n     */\n    constructor(source, value) {\n        this.source = source;\n        this.value = value;\n    }\n}\nif (false) {\n    /**\n     * Reference to the select that emitted the change event.\n     * @type {?}\n     */\n    MatSelectChange.prototype.source;\n    /**\n     * Current value of the select that emitted the event.\n     * @type {?}\n     */\n    MatSelectChange.prototype.value;\n}\n// Boilerplate for applying mixins to MatSelect.\n/**\n * \\@docs-private\n */\nclass MatSelectBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} ngControl\n     */\n    constructor(_elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl) {\n        this._elementRef = _elementRef;\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatSelectBase.prototype._elementRef;\n    /** @type {?} */\n    MatSelectBase.prototype._defaultErrorStateMatcher;\n    /** @type {?} */\n    MatSelectBase.prototype._parentForm;\n    /** @type {?} */\n    MatSelectBase.prototype._parentFormGroup;\n    /** @type {?} */\n    MatSelectBase.prototype.ngControl;\n}\n/** @type {?} */\nconst _MatSelectMixinBase = mixinDisableRipple(mixinTabIndex(mixinDisabled(mixinErrorState(MatSelectBase))));\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\nclass MatSelectTrigger {\n}\nMatSelectTrigger.ɵfac = function MatSelectTrigger_Factory(t) { return new (t || MatSelectTrigger)(); };\nMatSelectTrigger.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSelectTrigger, selectors: [[\"mat-select-trigger\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelectTrigger, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-select-trigger'\n            }]\n    }], null, null); })();\nclass MatSelect extends _MatSelectMixinBase {\n    /**\n     * @param {?} _viewportRuler\n     * @param {?} _changeDetectorRef\n     * @param {?} _ngZone\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} elementRef\n     * @param {?} _dir\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} _parentFormField\n     * @param {?} ngControl\n     * @param {?} tabIndex\n     * @param {?} scrollStrategyFactory\n     * @param {?} _liveAnnouncer\n     * @param {?=} defaults\n     */\n    constructor(_viewportRuler, _changeDetectorRef, _ngZone, _defaultErrorStateMatcher, elementRef, _dir, _parentForm, _parentFormGroup, _parentFormField, ngControl, tabIndex, scrollStrategyFactory, _liveAnnouncer, defaults) {\n        super(elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._viewportRuler = _viewportRuler;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._ngZone = _ngZone;\n        this._dir = _dir;\n        this._parentFormField = _parentFormField;\n        this.ngControl = ngControl;\n        this._liveAnnouncer = _liveAnnouncer;\n        /**\n         * Whether or not the overlay panel is open.\n         */\n        this._panelOpen = false;\n        /**\n         * Whether filling out the select is required in the form.\n         */\n        this._required = false;\n        /**\n         * The scroll position of the overlay panel, calculated to center the selected option.\n         */\n        this._scrollTop = 0;\n        /**\n         * Whether the component is in multiple selection mode.\n         */\n        this._multiple = false;\n        /**\n         * Comparison function to specify which option is displayed. Defaults to object equality.\n         */\n        this._compareWith = (/**\n         * @param {?} o1\n         * @param {?} o2\n         * @return {?}\n         */\n        (o1, o2) => o1 === o2);\n        /**\n         * Unique id for this input.\n         */\n        this._uid = `mat-select-${nextUniqueId++}`;\n        /**\n         * Emits whenever the component is destroyed.\n         */\n        this._destroy = new Subject();\n        /**\n         * The cached font-size of the trigger element.\n         */\n        this._triggerFontSize = 0;\n        /**\n         * `View -> model callback called when value changes`\n         */\n        this._onChange = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * `View -> model callback called when select has been touched`\n         */\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * The IDs of child options to be passed to the aria-owns attribute.\n         */\n        this._optionIds = '';\n        /**\n         * The value of the select panel's transform-origin property.\n         */\n        this._transformOrigin = 'top';\n        /**\n         * Emits when the panel element is finished transforming in.\n         */\n        this._panelDoneAnimatingStream = new Subject();\n        /**\n         * The y-offset of the overlay panel in relation to the trigger's top start corner.\n         * This must be adjusted to align the selected option text over the trigger text.\n         * when the panel opens. Will change based on the y-position of the selected option.\n         */\n        this._offsetY = 0;\n        /**\n         * This position config ensures that the top \"start\" corner of the overlay\n         * is aligned with with the top \"start\" of the origin by default (overlapping\n         * the trigger completely). If the panel cannot fit below the trigger, it\n         * will fall back to a position above the trigger.\n         */\n        this._positions = [\n            {\n                originX: 'start',\n                originY: 'top',\n                overlayX: 'start',\n                overlayY: 'top',\n            },\n            {\n                originX: 'start',\n                originY: 'bottom',\n                overlayX: 'start',\n                overlayY: 'bottom',\n            },\n        ];\n        /**\n         * Whether the component is disabling centering of the active option over the trigger.\n         */\n        this._disableOptionCentering = false;\n        this._focused = false;\n        /**\n         * A name for this control that can be used by `mat-form-field`.\n         */\n        this.controlType = 'mat-select';\n        /**\n         * Aria label of the select. If not specified, the placeholder will be used as label.\n         */\n        this.ariaLabel = '';\n        /**\n         * Combined stream of all of the child options' change events.\n         */\n        this.optionSelectionChanges = (/** @type {?} */ (defer((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const options = this.options;\n            if (options) {\n                return options.changes.pipe(startWith(options), switchMap((/**\n                 * @return {?}\n                 */\n                () => merge(...options.map((/**\n                 * @param {?} option\n                 * @return {?}\n                 */\n                option => option.onSelectionChange))))));\n            }\n            return this._ngZone.onStable\n                .asObservable()\n                .pipe(take(1), switchMap((/**\n             * @return {?}\n             */\n            () => this.optionSelectionChanges)));\n        }))));\n        /**\n         * Event emitted when the select panel has been toggled.\n         */\n        this.openedChange = new EventEmitter();\n        /**\n         * Event emitted when the select has been opened.\n         */\n        this._openedStream = this.openedChange.pipe(filter((/**\n         * @param {?} o\n         * @return {?}\n         */\n        o => o)), map((/**\n         * @return {?}\n         */\n        () => { })));\n        /**\n         * Event emitted when the select has been closed.\n         */\n        this._closedStream = this.openedChange.pipe(filter((/**\n         * @param {?} o\n         * @return {?}\n         */\n        o => !o)), map((/**\n         * @return {?}\n         */\n        () => { })));\n        /**\n         * Event emitted when the selected value has been changed by the user.\n         */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Event that emits whenever the raw value of the select changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * \\@docs-private\n         */\n        this.valueChange = new EventEmitter();\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n        this._scrollStrategyFactory = scrollStrategyFactory;\n        this._scrollStrategy = this._scrollStrategyFactory();\n        this.tabIndex = parseInt(tabIndex) || 0;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n        if (defaults) {\n            if (defaults.disableOptionCentering != null) {\n                this.disableOptionCentering = defaults.disableOptionCentering;\n            }\n            if (defaults.typeaheadDebounceInterval != null) {\n                this.typeaheadDebounceInterval = defaults.typeaheadDebounceInterval;\n            }\n        }\n    }\n    /**\n     * Whether the select is focused.\n     * @return {?}\n     */\n    get focused() {\n        return this._focused || this._panelOpen;\n    }\n    /**\n     * Placeholder to be shown if no value has been selected.\n     * @return {?}\n     */\n    get placeholder() { return this._placeholder; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set placeholder(value) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n    /**\n     * Whether the component is required.\n     * @return {?}\n     */\n    get required() { return this._required; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n    /**\n     * Whether the user should be allowed to select multiple options.\n     * @return {?}\n     */\n    get multiple() { return this._multiple; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set multiple(value) {\n        if (this._selectionModel) {\n            throw getMatSelectDynamicMultipleError();\n        }\n        this._multiple = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether to center the active option over the trigger.\n     * @return {?}\n     */\n    get disableOptionCentering() { return this._disableOptionCentering; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disableOptionCentering(value) {\n        this._disableOptionCentering = coerceBooleanProperty(value);\n    }\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     * @return {?}\n     */\n    get compareWith() { return this._compareWith; }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    set compareWith(fn) {\n        if (typeof fn !== 'function') {\n            throw getMatSelectNonFunctionValueError();\n        }\n        this._compareWith = fn;\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n    /**\n     * Value of the select control.\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    set value(newValue) {\n        if (newValue !== this._value) {\n            this.writeValue(newValue);\n            this._value = newValue;\n        }\n    }\n    /**\n     * Time to wait in milliseconds after the last keystroke before moving focus to an item.\n     * @return {?}\n     */\n    get typeaheadDebounceInterval() { return this._typeaheadDebounceInterval; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set typeaheadDebounceInterval(value) {\n        this._typeaheadDebounceInterval = coerceNumberProperty(value);\n    }\n    /**\n     * Unique id of the element.\n     * @return {?}\n     */\n    get id() { return this._id; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set id(value) {\n        this._id = value || this._uid;\n        this.stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._selectionModel = new SelectionModel(this.multiple);\n        this.stateChanges.next();\n        // We need `distinctUntilChanged` here, because some browsers will\n        // fire the animation end event twice for the same animation. See:\n        // https://github.com/angular/angular/issues/24084\n        this._panelDoneAnimatingStream\n            .pipe(distinctUntilChanged(), takeUntil(this._destroy))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this.panelOpen) {\n                this._scrollTop = 0;\n                this.openedChange.emit(true);\n            }\n            else {\n                this.openedChange.emit(false);\n                this.overlayDir.offsetX = 0;\n                this._changeDetectorRef.markForCheck();\n            }\n        }));\n        this._viewportRuler.change()\n            .pipe(takeUntil(this._destroy))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._panelOpen) {\n                this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n                this._changeDetectorRef.markForCheck();\n            }\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._initKeyManager();\n        this._selectionModel.changed.pipe(takeUntil(this._destroy)).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            event.added.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.select()));\n            event.removed.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.deselect()));\n        }));\n        this.options.changes.pipe(startWith(null), takeUntil(this._destroy)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._resetOptions();\n            this._initializeSelection();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this.ngControl) {\n            this.updateErrorState();\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes['disabled']) {\n            this.stateChanges.next();\n        }\n        if (changes['typeaheadDebounceInterval'] && this._keyManager) {\n            this._keyManager.withTypeAhead(this._typeaheadDebounceInterval);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroy.next();\n        this._destroy.complete();\n        this.stateChanges.complete();\n    }\n    /**\n     * Toggles the overlay panel open or closed.\n     * @return {?}\n     */\n    toggle() {\n        this.panelOpen ? this.close() : this.open();\n    }\n    /**\n     * Opens the overlay panel.\n     * @return {?}\n     */\n    open() {\n        if (this.disabled || !this.options || !this.options.length || this._panelOpen) {\n            return;\n        }\n        this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n        // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n        // `parseInt` ignores the trailing 'px' and converts this to a number.\n        this._triggerFontSize = parseInt(getComputedStyle(this.trigger.nativeElement).fontSize || '0');\n        this._panelOpen = true;\n        this._keyManager.withHorizontalOrientation(null);\n        this._calculateOverlayPosition();\n        this._highlightCorrectOption();\n        this._changeDetectorRef.markForCheck();\n        // Set the font size on the panel element once it exists.\n        this._ngZone.onStable.asObservable().pipe(take(1)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._triggerFontSize && this.overlayDir.overlayRef &&\n                this.overlayDir.overlayRef.overlayElement) {\n                this.overlayDir.overlayRef.overlayElement.style.fontSize = `${this._triggerFontSize}px`;\n            }\n        }));\n    }\n    /**\n     * Closes the overlay panel and focuses the host element.\n     * @return {?}\n     */\n    close() {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n            this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n            this._changeDetectorRef.markForCheck();\n            this._onTouched();\n        }\n    }\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param {?} value New value to be written to the model.\n     * @return {?}\n     */\n    writeValue(value) {\n        if (this.options) {\n            this._setSelectionByValue(value);\n        }\n    }\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param {?} fn Callback to be triggered when the value changes.\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param {?} fn Callback to be triggered when the component has been touched.\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param {?} isDisabled Sets whether the component is disabled.\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n    /**\n     * Whether or not the overlay panel is open.\n     * @return {?}\n     */\n    get panelOpen() {\n        return this._panelOpen;\n    }\n    /**\n     * The currently selected option.\n     * @return {?}\n     */\n    get selected() {\n        return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n    }\n    /**\n     * The value displayed in the trigger.\n     * @return {?}\n     */\n    get triggerValue() {\n        if (this.empty) {\n            return '';\n        }\n        if (this._multiple) {\n            /** @type {?} */\n            const selectedOptions = this._selectionModel.selected.map((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.viewValue));\n            if (this._isRtl()) {\n                selectedOptions.reverse();\n            }\n            // TODO(crisbeto): delimiter should be configurable for proper localization.\n            return selectedOptions.join(', ');\n        }\n        return this._selectionModel.selected[0].viewValue;\n    }\n    /**\n     * Whether the element is in RTL mode.\n     * @return {?}\n     */\n    _isRtl() {\n        return this._dir ? this._dir.value === 'rtl' : false;\n    }\n    /**\n     * Handles all keydown events on the select.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        if (!this.disabled) {\n            this.panelOpen ? this._handleOpenKeydown(event) : this._handleClosedKeydown(event);\n        }\n    }\n    /**\n     * Handles keyboard events while the select is closed.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _handleClosedKeydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n        /** @type {?} */\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n        /** @type {?} */\n        const manager = this._keyManager;\n        // Open the select on ALT + arrow key to match the native <select>\n        if (!manager.isTyping() && (isOpenKey && !hasModifierKey(event)) ||\n            ((this.multiple || event.altKey) && isArrowKey)) {\n            event.preventDefault(); // prevents the page from scrolling down when pressing space\n            this.open();\n        }\n        else if (!this.multiple) {\n            /** @type {?} */\n            const previouslySelectedOption = this.selected;\n            if (keyCode === HOME || keyCode === END) {\n                keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n                event.preventDefault();\n            }\n            else {\n                manager.onKeydown(event);\n            }\n            /** @type {?} */\n            const selectedOption = this.selected;\n            // Since the value has changed, we need to announce it ourselves.\n            if (selectedOption && previouslySelectedOption !== selectedOption) {\n                // We set a duration on the live announcement, because we want the live element to be\n                // cleared after a while so that users can't navigate to it using the arrow keys.\n                this._liveAnnouncer.announce(((/** @type {?} */ (selectedOption))).viewValue, 10000);\n            }\n        }\n    }\n    /**\n     * Handles keyboard events when the selected is open.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _handleOpenKeydown(event) {\n        /** @type {?} */\n        const manager = this._keyManager;\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n        /** @type {?} */\n        const isTyping = manager.isTyping();\n        if (keyCode === HOME || keyCode === END) {\n            event.preventDefault();\n            keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n        }\n        else if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n            this.close();\n            // Don't do anything in this case if the user is typing,\n            // because the typing sequence can include the space key.\n        }\n        else if (!isTyping && (keyCode === ENTER || keyCode === SPACE) && manager.activeItem &&\n            !hasModifierKey(event)) {\n            event.preventDefault();\n            manager.activeItem._selectViaInteraction();\n        }\n        else if (!isTyping && this._multiple && keyCode === A && event.ctrlKey) {\n            event.preventDefault();\n            /** @type {?} */\n            const hasDeselectedOptions = this.options.some((/**\n             * @param {?} opt\n             * @return {?}\n             */\n            opt => !opt.disabled && !opt.selected));\n            this.options.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => {\n                if (!option.disabled) {\n                    hasDeselectedOptions ? option.select() : option.deselect();\n                }\n            }));\n        }\n        else {\n            /** @type {?} */\n            const previouslyFocusedIndex = manager.activeItemIndex;\n            manager.onKeydown(event);\n            if (this._multiple && isArrowKey && event.shiftKey && manager.activeItem &&\n                manager.activeItemIndex !== previouslyFocusedIndex) {\n                manager.activeItem._selectViaInteraction();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     * @return {?}\n     */\n    _onBlur() {\n        this._focused = false;\n        if (!this.disabled && !this.panelOpen) {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Callback that is invoked when the overlay panel has been attached.\n     * @return {?}\n     */\n    _onAttached() {\n        this.overlayDir.positionChange.pipe(take(1)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._changeDetectorRef.detectChanges();\n            this._calculateOverlayOffsetX();\n            this.panel.nativeElement.scrollTop = this._scrollTop;\n        }));\n    }\n    /**\n     * Returns the theme to be used on the panel.\n     * @return {?}\n     */\n    _getPanelTheme() {\n        return this._parentFormField ? `mat-${this._parentFormField.color}` : '';\n    }\n    /**\n     * Whether the select has a value.\n     * @return {?}\n     */\n    get empty() {\n        return !this._selectionModel || this._selectionModel.isEmpty();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _initializeSelection() {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => {\n            this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value);\n            this.stateChanges.next();\n        }));\n    }\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _setSelectionByValue(value) {\n        if (this.multiple && value) {\n            if (!Array.isArray(value)) {\n                throw getMatSelectNonArrayValueError();\n            }\n            this._selectionModel.clear();\n            value.forEach((/**\n             * @param {?} currentValue\n             * @return {?}\n             */\n            (currentValue) => this._selectValue(currentValue)));\n            this._sortValues();\n        }\n        else {\n            this._selectionModel.clear();\n            /** @type {?} */\n            const correspondingOption = this._selectValue(value);\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this._keyManager.setActiveItem(correspondingOption);\n            }\n            else if (!this.panelOpen) {\n                // Otherwise reset the highlighted option. Note that we only want to do this while\n                // closed, because doing it while open can shift the user's focus unnecessarily.\n                this._keyManager.setActiveItem(-1);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Finds and selects and option based on its value.\n     * @private\n     * @param {?} value\n     * @return {?} Option that has the corresponding value.\n     */\n    _selectValue(value) {\n        /** @type {?} */\n        const correspondingOption = this.options.find((/**\n         * @param {?} option\n         * @return {?}\n         */\n        (option) => {\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && this._compareWith(option.value, value);\n            }\n            catch (error) {\n                if (isDevMode()) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n                return false;\n            }\n        }));\n        if (correspondingOption) {\n            this._selectionModel.select(correspondingOption);\n        }\n        return correspondingOption;\n    }\n    /**\n     * Sets up a key manager to listen to keyboard events on the overlay panel.\n     * @private\n     * @return {?}\n     */\n    _initKeyManager() {\n        this._keyManager = new ActiveDescendantKeyManager(this.options)\n            .withTypeAhead(this._typeaheadDebounceInterval)\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr')\n            .withAllowedModifierKeys(['shiftKey']);\n        this._keyManager.tabOut.pipe(takeUntil(this._destroy)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            // Select the active item when tabbing away. This is consistent with how the native\n            // select behaves. Note that we only want to do this in single selection mode.\n            if (!this.multiple && this._keyManager.activeItem) {\n                this._keyManager.activeItem._selectViaInteraction();\n            }\n            // Restore focus to the trigger before closing. Ensures that the focus\n            // position won't be lost if the user got focus into the overlay.\n            this.focus();\n            this.close();\n        }));\n        this._keyManager.change.pipe(takeUntil(this._destroy)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._panelOpen && this.panel) {\n                this._scrollActiveOptionIntoView();\n            }\n            else if (!this._panelOpen && !this.multiple && this._keyManager.activeItem) {\n                this._keyManager.activeItem._selectViaInteraction();\n            }\n        }));\n    }\n    /**\n     * Drops current option subscriptions and IDs and resets from scratch.\n     * @private\n     * @return {?}\n     */\n    _resetOptions() {\n        /** @type {?} */\n        const changedOrDestroyed = merge(this.options.changes, this._destroy);\n        this.optionSelectionChanges.pipe(takeUntil(changedOrDestroyed)).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this._onSelect(event.source, event.isUserInput);\n            if (event.isUserInput && !this.multiple && this._panelOpen) {\n                this.close();\n                this.focus();\n            }\n        }));\n        // Listen to changes in the internal state of the options and react accordingly.\n        // Handles cases like the labels of the selected options changing.\n        merge(...this.options.map((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option._stateChanges)))\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }));\n        this._setOptionIds();\n    }\n    /**\n     * Invoked when an option is clicked.\n     * @private\n     * @param {?} option\n     * @param {?} isUserInput\n     * @return {?}\n     */\n    _onSelect(option, isUserInput) {\n        /** @type {?} */\n        const wasSelected = this._selectionModel.isSelected(option);\n        if (option.value == null && !this._multiple) {\n            option.deselect();\n            this._selectionModel.clear();\n            this._propagateChanges(option.value);\n        }\n        else {\n            if (wasSelected !== option.selected) {\n                option.selected ? this._selectionModel.select(option) :\n                    this._selectionModel.deselect(option);\n            }\n            if (isUserInput) {\n                this._keyManager.setActiveItem(option);\n            }\n            if (this.multiple) {\n                this._sortValues();\n                if (isUserInput) {\n                    // In case the user selected the option with their mouse, we\n                    // want to restore focus back to the trigger, in order to\n                    // prevent the select keyboard controls from clashing with\n                    // the ones from `mat-option`.\n                    this.focus();\n                }\n            }\n        }\n        if (wasSelected !== this._selectionModel.isSelected(option)) {\n            this._propagateChanges();\n        }\n        this.stateChanges.next();\n    }\n    /**\n     * Sorts the selected values in the selected based on their order in the panel.\n     * @private\n     * @return {?}\n     */\n    _sortValues() {\n        if (this.multiple) {\n            /** @type {?} */\n            const options = this.options.toArray();\n            this._selectionModel.sort((/**\n             * @param {?} a\n             * @param {?} b\n             * @return {?}\n             */\n            (a, b) => {\n                return this.sortComparator ? this.sortComparator(a, b, options) :\n                    options.indexOf(a) - options.indexOf(b);\n            }));\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Emits change event to set the model value.\n     * @private\n     * @param {?=} fallbackValue\n     * @return {?}\n     */\n    _propagateChanges(fallbackValue) {\n        /** @type {?} */\n        let valueToEmit = null;\n        if (this.multiple) {\n            valueToEmit = ((/** @type {?} */ (this.selected))).map((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.value));\n        }\n        else {\n            valueToEmit = this.selected ? ((/** @type {?} */ (this.selected))).value : fallbackValue;\n        }\n        this._value = valueToEmit;\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this.selectionChange.emit(new MatSelectChange(this, valueToEmit));\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Records option IDs to pass to the aria-owns property.\n     * @private\n     * @return {?}\n     */\n    _setOptionIds() {\n        this._optionIds = this.options.map((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option.id)).join(' ');\n    }\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     * @private\n     * @return {?}\n     */\n    _highlightCorrectOption() {\n        if (this._keyManager) {\n            if (this.empty) {\n                this._keyManager.setFirstItemActive();\n            }\n            else {\n                this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n            }\n        }\n    }\n    /**\n     * Scrolls the active option into view.\n     * @private\n     * @return {?}\n     */\n    _scrollActiveOptionIntoView() {\n        /** @type {?} */\n        const activeOptionIndex = this._keyManager.activeItemIndex || 0;\n        /** @type {?} */\n        const labelCount = _countGroupLabelsBeforeOption(activeOptionIndex, this.options, this.optionGroups);\n        this.panel.nativeElement.scrollTop = _getOptionScrollPosition(activeOptionIndex + labelCount, this._getItemHeight(), this.panel.nativeElement.scrollTop, SELECT_PANEL_MAX_HEIGHT);\n    }\n    /**\n     * Focuses the select element.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /**\n     * Gets the index of the provided option in the option list.\n     * @private\n     * @param {?} option\n     * @return {?}\n     */\n    _getOptionIndex(option) {\n        return this.options.reduce((/**\n         * @param {?} result\n         * @param {?} current\n         * @param {?} index\n         * @return {?}\n         */\n        (result, current, index) => {\n            if (result !== undefined) {\n                return result;\n            }\n            return option === current ? index : undefined;\n        }), undefined);\n    }\n    /**\n     * Calculates the scroll position and x- and y-offsets of the overlay panel.\n     * @private\n     * @return {?}\n     */\n    _calculateOverlayPosition() {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const items = this._getItemCount();\n        /** @type {?} */\n        const panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        /** @type {?} */\n        const scrollContainerHeight = items * itemHeight;\n        // The farthest the panel can be scrolled before it hits the bottom\n        /** @type {?} */\n        const maxScroll = scrollContainerHeight - panelHeight;\n        // If no value is selected we open the popup to the first item.\n        /** @type {?} */\n        let selectedOptionOffset = this.empty ? 0 : (/** @type {?} */ (this._getOptionIndex(this._selectionModel.selected[0])));\n        selectedOptionOffset += _countGroupLabelsBeforeOption(selectedOptionOffset, this.options, this.optionGroups);\n        // We must maintain a scroll buffer so the selected option will be scrolled to the\n        // center of the overlay panel rather than the top.\n        /** @type {?} */\n        const scrollBuffer = panelHeight / 2;\n        this._scrollTop = this._calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._offsetY = this._calculateOverlayOffsetY(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._checkOverlayWithinViewport(maxScroll);\n    }\n    /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     * @param {?} selectedIndex\n     * @param {?} scrollBuffer\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _calculateOverlayScroll(selectedIndex, scrollBuffer, maxScroll) {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const optionOffsetFromScrollTop = itemHeight * selectedIndex;\n        /** @type {?} */\n        const halfOptionHeight = itemHeight / 2;\n        // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n        // scroll container, then subtracts the scroll buffer to scroll the option down to\n        // the center of the overlay panel. Half the option height must be re-added to the\n        // scrollTop so the option is centered based on its middle, not its top edge.\n        /** @type {?} */\n        const optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n        return Math.min(Math.max(0, optimalScrollPosition), maxScroll);\n    }\n    /**\n     * Returns the aria-label of the select component.\n     * @return {?}\n     */\n    _getAriaLabel() {\n        // If an ariaLabelledby value has been set by the consumer, the select should not overwrite the\n        // `aria-labelledby` value by setting the ariaLabel to the placeholder.\n        return this.ariaLabelledby ? null : this.ariaLabel || this.placeholder;\n    }\n    /**\n     * Returns the aria-labelledby of the select component.\n     * @return {?}\n     */\n    _getAriaLabelledby() {\n        if (this.ariaLabelledby) {\n            return this.ariaLabelledby;\n        }\n        // Note: we use `_getAriaLabel` here, because we want to check whether there's a\n        // computed label. `this.ariaLabel` is only the user-specified label.\n        if (!this._parentFormField || !this._parentFormField._hasFloatingLabel() ||\n            this._getAriaLabel()) {\n            return null;\n        }\n        return this._parentFormField._labelId || null;\n    }\n    /**\n     * Determines the `aria-activedescendant` to be set on the host.\n     * @return {?}\n     */\n    _getAriaActiveDescendant() {\n        if (this.panelOpen && this._keyManager && this._keyManager.activeItem) {\n            return this._keyManager.activeItem.id;\n        }\n        return null;\n    }\n    /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     * @private\n     * @return {?}\n     */\n    _calculateOverlayOffsetX() {\n        /** @type {?} */\n        const overlayRect = this.overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n        /** @type {?} */\n        const viewportSize = this._viewportRuler.getViewportSize();\n        /** @type {?} */\n        const isRtl = this._isRtl();\n        /** @type {?} */\n        const paddingWidth = this.multiple ? SELECT_MULTIPLE_PANEL_PADDING_X + SELECT_PANEL_PADDING_X :\n            SELECT_PANEL_PADDING_X * 2;\n        /** @type {?} */\n        let offsetX;\n        // Adjust the offset, depending on the option padding.\n        if (this.multiple) {\n            offsetX = SELECT_MULTIPLE_PANEL_PADDING_X;\n        }\n        else {\n            /** @type {?} */\n            let selected = this._selectionModel.selected[0] || this.options.first;\n            offsetX = selected && selected.group ? SELECT_PANEL_INDENT_PADDING_X : SELECT_PANEL_PADDING_X;\n        }\n        // Invert the offset in LTR.\n        if (!isRtl) {\n            offsetX *= -1;\n        }\n        // Determine how much the select overflows on each side.\n        /** @type {?} */\n        const leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n        /** @type {?} */\n        const rightOverflow = overlayRect.right + offsetX - viewportSize.width\n            + (isRtl ? 0 : paddingWidth);\n        // If the element overflows on either side, reduce the offset to allow it to fit.\n        if (leftOverflow > 0) {\n            offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        else if (rightOverflow > 0) {\n            offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        // Set the offset directly in order to avoid having to go through change detection and\n        // potentially triggering \"changed after it was checked\" errors. Round the value to avoid\n        // blurry content in some browsers.\n        this.overlayDir.offsetX = Math.round(offsetX);\n        this.overlayDir.overlayRef.updatePosition();\n    }\n    /**\n     * Calculates the y-offset of the select's overlay panel in relation to the\n     * top start corner of the trigger. It has to be adjusted in order for the\n     * selected option to be aligned over the trigger when the panel opens.\n     * @private\n     * @param {?} selectedIndex\n     * @param {?} scrollBuffer\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _calculateOverlayOffsetY(selectedIndex, scrollBuffer, maxScroll) {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        /** @type {?} */\n        const maxOptionsDisplayed = Math.floor(SELECT_PANEL_MAX_HEIGHT / itemHeight);\n        /** @type {?} */\n        let optionOffsetFromPanelTop;\n        // Disable offset if requested by user by returning 0 as value to offset\n        if (this._disableOptionCentering) {\n            return 0;\n        }\n        if (this._scrollTop === 0) {\n            optionOffsetFromPanelTop = selectedIndex * itemHeight;\n        }\n        else if (this._scrollTop === maxScroll) {\n            /** @type {?} */\n            const firstDisplayedIndex = this._getItemCount() - maxOptionsDisplayed;\n            /** @type {?} */\n            const selectedDisplayIndex = selectedIndex - firstDisplayedIndex;\n            // The first item is partially out of the viewport. Therefore we need to calculate what\n            // portion of it is shown in the viewport and account for it in our offset.\n            /** @type {?} */\n            let partialItemHeight = itemHeight - (this._getItemCount() * itemHeight - SELECT_PANEL_MAX_HEIGHT) % itemHeight;\n            // Because the panel height is longer than the height of the options alone,\n            // there is always extra padding at the top or bottom of the panel. When\n            // scrolled to the very bottom, this padding is at the top of the panel and\n            // must be added to the offset.\n            optionOffsetFromPanelTop = selectedDisplayIndex * itemHeight + partialItemHeight;\n        }\n        else {\n            // If the option was scrolled to the middle of the panel using a scroll buffer,\n            // its offset will be the scroll buffer minus the half height that was added to\n            // center it.\n            optionOffsetFromPanelTop = scrollBuffer - itemHeight / 2;\n        }\n        // The final offset is the option's offset from the top, adjusted for the height difference,\n        // multiplied by -1 to ensure that the overlay moves in the correct direction up the page.\n        // The value is rounded to prevent some browsers from blurring the content.\n        return Math.round(optionOffsetFromPanelTop * -1 - optionHeightAdjustment);\n    }\n    /**\n     * Checks that the attempted overlay position will fit within the viewport.\n     * If it will not fit, tries to adjust the scroll position and the associated\n     * y-offset so the panel can open fully on-screen. If it still won't fit,\n     * sets the offset back to 0 to allow the fallback position to take over.\n     * @private\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _checkOverlayWithinViewport(maxScroll) {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const viewportSize = this._viewportRuler.getViewportSize();\n        /** @type {?} */\n        const topSpaceAvailable = this._triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n        /** @type {?} */\n        const bottomSpaceAvailable = viewportSize.height - this._triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n        /** @type {?} */\n        const panelHeightTop = Math.abs(this._offsetY);\n        /** @type {?} */\n        const totalPanelHeight = Math.min(this._getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        /** @type {?} */\n        const panelHeightBottom = totalPanelHeight - panelHeightTop - this._triggerRect.height;\n        if (panelHeightBottom > bottomSpaceAvailable) {\n            this._adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n        }\n        else if (panelHeightTop > topSpaceAvailable) {\n            this._adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n        }\n        else {\n            this._transformOrigin = this._getOriginBasedOnOption();\n        }\n    }\n    /**\n     * Adjusts the overlay panel up to fit in the viewport.\n     * @private\n     * @param {?} panelHeightBottom\n     * @param {?} bottomSpaceAvailable\n     * @return {?}\n     */\n    _adjustPanelUp(panelHeightBottom, bottomSpaceAvailable) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        /** @type {?} */\n        const distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable);\n        // Scrolls the panel up by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel up into the viewport.\n        this._scrollTop -= distanceBelowViewport;\n        this._offsetY -= distanceBelowViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very top, it won't be able to fit the panel\n        // by scrolling, so set the offset to 0 to allow the fallback position to take\n        // effect.\n        if (this._scrollTop <= 0) {\n            this._scrollTop = 0;\n            this._offsetY = 0;\n            this._transformOrigin = `50% bottom 0px`;\n        }\n    }\n    /**\n     * Adjusts the overlay panel down to fit in the viewport.\n     * @private\n     * @param {?} panelHeightTop\n     * @param {?} topSpaceAvailable\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        /** @type {?} */\n        const distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable);\n        // Scrolls the panel down by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel down into the viewport.\n        this._scrollTop += distanceAboveViewport;\n        this._offsetY += distanceAboveViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very bottom, it won't be able to fit the\n        // panel by scrolling, so set the offset to 0 to allow the fallback position\n        // to take effect.\n        if (this._scrollTop >= maxScroll) {\n            this._scrollTop = maxScroll;\n            this._offsetY = 0;\n            this._transformOrigin = `50% top 0px`;\n            return;\n        }\n    }\n    /**\n     * Sets the transform origin point based on the selected option.\n     * @private\n     * @return {?}\n     */\n    _getOriginBasedOnOption() {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        /** @type {?} */\n        const originY = Math.abs(this._offsetY) - optionHeightAdjustment + itemHeight / 2;\n        return `50% ${originY}px 0px`;\n    }\n    /**\n     * Calculates the amount of items in the select. This includes options and group labels.\n     * @private\n     * @return {?}\n     */\n    _getItemCount() {\n        return this.options.length + this.optionGroups.length;\n    }\n    /**\n     * Calculates the height of the select's options.\n     * @private\n     * @return {?}\n     */\n    _getItemHeight() {\n        return this._triggerFontSize * SELECT_ITEM_HEIGHT_EM;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @param {?} ids\n     * @return {?}\n     */\n    setDescribedByIds(ids) {\n        this._ariaDescribedby = ids.join(' ');\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    onContainerClick() {\n        this.focus();\n        this.open();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get shouldLabelFloat() {\n        return this._panelOpen || !this.empty;\n    }\n}\nMatSelect.ɵfac = function MatSelect_Factory(t) { return new (t || MatSelect)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.NgControl, 10), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(MAT_SELECT_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.LiveAnnouncer), ɵngcc0.ɵɵdirectiveInject(MAT_SELECT_CONFIG, 8)); };\nMatSelect.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSelect, selectors: [[\"mat-select\"]], contentQueries: function MatSelect_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSelectTrigger, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatOption, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatOptgroup, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.customTrigger = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.options = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.optionGroups = _t);\n    } }, viewQuery: function MatSelect_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵviewQuery(_c1, true);\n        ɵngcc0.ɵɵviewQuery(CdkConnectedOverlay, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.trigger = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.panel = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.overlayDir = _t.first);\n    } }, hostAttrs: [\"role\", \"listbox\", 1, \"mat-select\"], hostVars: 19, hostBindings: function MatSelect_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatSelect_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); })(\"focus\", function MatSelect_focus_HostBindingHandler() { return ctx._onFocus(); })(\"blur\", function MatSelect_blur_HostBindingHandler() { return ctx._onBlur(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"tabindex\", ctx.tabIndex)(\"aria-label\", ctx._getAriaLabel())(\"aria-labelledby\", ctx._getAriaLabelledby())(\"aria-required\", ctx.required.toString())(\"aria-disabled\", ctx.disabled.toString())(\"aria-invalid\", ctx.errorState)(\"aria-owns\", ctx.panelOpen ? ctx._optionIds : null)(\"aria-multiselectable\", ctx.multiple)(\"aria-describedby\", ctx._ariaDescribedby || null)(\"aria-activedescendant\", ctx._getAriaActiveDescendant());\n        ɵngcc0.ɵɵclassProp(\"mat-select-disabled\", ctx.disabled)(\"mat-select-invalid\", ctx.errorState)(\"mat-select-required\", ctx.required)(\"mat-select-empty\", ctx.empty);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\", ariaLabel: [\"aria-label\", \"ariaLabel\"], id: \"id\", disableOptionCentering: \"disableOptionCentering\", typeaheadDebounceInterval: \"typeaheadDebounceInterval\", placeholder: \"placeholder\", required: \"required\", multiple: \"multiple\", compareWith: \"compareWith\", value: \"value\", panelClass: \"panelClass\", ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], errorStateMatcher: \"errorStateMatcher\", sortComparator: \"sortComparator\" }, outputs: { openedChange: \"openedChange\", _openedStream: \"opened\", _closedStream: \"closed\", selectionChange: \"selectionChange\", valueChange: \"valueChange\" }, exportAs: [\"matSelect\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MatFormFieldControl, useExisting: MatSelect },\n            { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c3, decls: 9, vars: 9, consts: [[\"cdk-overlay-origin\", \"\", \"aria-hidden\", \"true\", 1, \"mat-select-trigger\", 3, \"click\"], [\"origin\", \"cdkOverlayOrigin\", \"trigger\", \"\"], [1, \"mat-select-value\", 3, \"ngSwitch\"], [\"class\", \"mat-select-placeholder\", 4, \"ngSwitchCase\"], [\"class\", \"mat-select-value-text\", 3, \"ngSwitch\", 4, \"ngSwitchCase\"], [1, \"mat-select-arrow-wrapper\"], [1, \"mat-select-arrow\"], [\"cdk-connected-overlay\", \"\", \"cdkConnectedOverlayLockPosition\", \"\", \"cdkConnectedOverlayHasBackdrop\", \"\", \"cdkConnectedOverlayBackdropClass\", \"cdk-overlay-transparent-backdrop\", 3, \"cdkConnectedOverlayScrollStrategy\", \"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayOpen\", \"cdkConnectedOverlayPositions\", \"cdkConnectedOverlayMinWidth\", \"cdkConnectedOverlayOffsetY\", \"backdropClick\", \"attach\", \"detach\"], [1, \"mat-select-placeholder\"], [1, \"mat-select-value-text\", 3, \"ngSwitch\"], [4, \"ngSwitchDefault\"], [4, \"ngSwitchCase\"], [1, \"mat-select-panel-wrap\"], [3, \"ngClass\", \"keydown\"], [\"panel\", \"\"]], template: function MatSelect_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c2);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatSelect_Template_div_click_0_listener() { return ctx.toggle(); });\n        ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n        ɵngcc0.ɵɵtemplate(4, MatSelect_span_4_Template, 2, 1, \"span\", 3);\n        ɵngcc0.ɵɵtemplate(5, MatSelect_span_5_Template, 3, 2, \"span\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"div\", 5);\n        ɵngcc0.ɵɵelement(7, \"div\", 6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(8, MatSelect_ng_template_8_Template, 4, 10, \"ng-template\", 7);\n        ɵngcc0.ɵɵlistener(\"backdropClick\", function MatSelect_Template_ng_template_backdropClick_8_listener() { return ctx.close(); })(\"attach\", function MatSelect_Template_ng_template_attach_8_listener() { return ctx._onAttached(); })(\"detach\", function MatSelect_Template_ng_template_detach_8_listener() { return ctx.close(); });\n    } if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(1);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.empty);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"cdkConnectedOverlayScrollStrategy\", ctx._scrollStrategy)(\"cdkConnectedOverlayOrigin\", _r0)(\"cdkConnectedOverlayOpen\", ctx.panelOpen)(\"cdkConnectedOverlayPositions\", ctx._positions)(\"cdkConnectedOverlayMinWidth\", ctx._triggerRect == null ? null : ctx._triggerRect.width)(\"cdkConnectedOverlayOffsetY\", ctx._offsetY);\n    } }, directives: [ɵngcc6.CdkOverlayOrigin, ɵngcc7.NgSwitch, ɵngcc7.NgSwitchCase, ɵngcc6.CdkConnectedOverlay, ɵngcc7.NgSwitchDefault, ɵngcc7.NgClass], styles: [\".mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}\\n\"], encapsulation: 2, data: { animation: [\n            matSelectAnimations.transformPanelWrap,\n            matSelectAnimations.transformPanel\n        ] }, changeDetection: 0 });\n/** @nocollapse */\nMatSelect.ctorParameters = () => [\n    { type: ViewportRuler },\n    { type: ChangeDetectorRef },\n    { type: NgZone },\n    { type: ErrorStateMatcher },\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: MatFormField, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD,] }] },\n    { type: NgControl, decorators: [{ type: Self }, { type: Optional }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_SELECT_SCROLL_STRATEGY,] }] },\n    { type: LiveAnnouncer },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_SELECT_CONFIG,] }] }\n];\nMatSelect.propDecorators = {\n    trigger: [{ type: ViewChild, args: ['trigger',] }],\n    panel: [{ type: ViewChild, args: ['panel',] }],\n    overlayDir: [{ type: ViewChild, args: [CdkConnectedOverlay,] }],\n    options: [{ type: ContentChildren, args: [MatOption, { descendants: true },] }],\n    optionGroups: [{ type: ContentChildren, args: [MatOptgroup, { descendants: true },] }],\n    panelClass: [{ type: Input }],\n    customTrigger: [{ type: ContentChild, args: [MatSelectTrigger,] }],\n    placeholder: [{ type: Input }],\n    required: [{ type: Input }],\n    multiple: [{ type: Input }],\n    disableOptionCentering: [{ type: Input }],\n    compareWith: [{ type: Input }],\n    value: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    errorStateMatcher: [{ type: Input }],\n    typeaheadDebounceInterval: [{ type: Input }],\n    sortComparator: [{ type: Input }],\n    id: [{ type: Input }],\n    openedChange: [{ type: Output }],\n    _openedStream: [{ type: Output, args: ['opened',] }],\n    _closedStream: [{ type: Output, args: ['closed',] }],\n    selectionChange: [{ type: Output }],\n    valueChange: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelect, [{\n        type: Component,\n        args: [{\n                selector: 'mat-select',\n                exportAs: 'matSelect',\n                template: \"<div cdk-overlay-origin\\n     class=\\\"mat-select-trigger\\\"\\n     aria-hidden=\\\"true\\\"\\n     (click)=\\\"toggle()\\\"\\n     #origin=\\\"cdkOverlayOrigin\\\"\\n     #trigger>\\n  <div class=\\\"mat-select-value\\\" [ngSwitch]=\\\"empty\\\">\\n    <span class=\\\"mat-select-placeholder\\\" *ngSwitchCase=\\\"true\\\">{{placeholder || '\\\\u00A0'}}</span>\\n    <span class=\\\"mat-select-value-text\\\" *ngSwitchCase=\\\"false\\\" [ngSwitch]=\\\"!!customTrigger\\\">\\n      <span *ngSwitchDefault>{{triggerValue || '\\\\u00A0'}}</span>\\n      <ng-content select=\\\"mat-select-trigger\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n    </span>\\n  </div>\\n\\n  <div class=\\\"mat-select-arrow-wrapper\\\"><div class=\\\"mat-select-arrow\\\"></div></div>\\n</div>\\n\\n<ng-template\\n  cdk-connected-overlay\\n  cdkConnectedOverlayLockPosition\\n  cdkConnectedOverlayHasBackdrop\\n  cdkConnectedOverlayBackdropClass=\\\"cdk-overlay-transparent-backdrop\\\"\\n  [cdkConnectedOverlayScrollStrategy]=\\\"_scrollStrategy\\\"\\n  [cdkConnectedOverlayOrigin]=\\\"origin\\\"\\n  [cdkConnectedOverlayOpen]=\\\"panelOpen\\\"\\n  [cdkConnectedOverlayPositions]=\\\"_positions\\\"\\n  [cdkConnectedOverlayMinWidth]=\\\"_triggerRect?.width\\\"\\n  [cdkConnectedOverlayOffsetY]=\\\"_offsetY\\\"\\n  (backdropClick)=\\\"close()\\\"\\n  (attach)=\\\"_onAttached()\\\"\\n  (detach)=\\\"close()\\\">\\n  <div class=\\\"mat-select-panel-wrap\\\" [@transformPanelWrap]>\\n    <div\\n      #panel\\n      class=\\\"mat-select-panel {{ _getPanelTheme() }}\\\"\\n      [ngClass]=\\\"panelClass\\\"\\n      [@transformPanel]=\\\"multiple ? 'showing-multiple' : 'showing'\\\"\\n      (@transformPanel.done)=\\\"_panelDoneAnimatingStream.next($event.toState)\\\"\\n      [style.transformOrigin]=\\\"_transformOrigin\\\"\\n      [style.font-size.px]=\\\"_triggerFontSize\\\"\\n      (keydown)=\\\"_handleKeydown($event)\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\",\n                inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'role': 'listbox',\n                    '[attr.id]': 'id',\n                    '[attr.tabindex]': 'tabIndex',\n                    '[attr.aria-label]': '_getAriaLabel()',\n                    '[attr.aria-labelledby]': '_getAriaLabelledby()',\n                    '[attr.aria-required]': 'required.toString()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-invalid]': 'errorState',\n                    '[attr.aria-owns]': 'panelOpen ? _optionIds : null',\n                    '[attr.aria-multiselectable]': 'multiple',\n                    '[attr.aria-describedby]': '_ariaDescribedby || null',\n                    '[attr.aria-activedescendant]': '_getAriaActiveDescendant()',\n                    '[class.mat-select-disabled]': 'disabled',\n                    '[class.mat-select-invalid]': 'errorState',\n                    '[class.mat-select-required]': 'required',\n                    '[class.mat-select-empty]': 'empty',\n                    'class': 'mat-select',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(focus)': '_onFocus()',\n                    '(blur)': '_onBlur()'\n                },\n                animations: [\n                    matSelectAnimations.transformPanelWrap,\n                    matSelectAnimations.transformPanel\n                ],\n                providers: [\n                    { provide: MatFormFieldControl, useExisting: MatSelect },\n                    { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect }\n                ],\n                styles: [\".mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc1.ViewportRuler }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc2.ErrorStateMatcher }, { type: ɵngcc0.ElementRef }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc8.MatFormField, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD]\n            }] }, { type: ɵngcc4.NgControl, decorators: [{\n                type: Self\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_SELECT_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc5.LiveAnnouncer }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_SELECT_CONFIG]\n            }] }]; }, { ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], openedChange: [{\n            type: Output\n        }], _openedStream: [{\n            type: Output,\n            args: ['opened']\n        }], _closedStream: [{\n            type: Output,\n            args: ['closed']\n        }], selectionChange: [{\n            type: Output\n        }], valueChange: [{\n            type: Output\n        }], id: [{\n            type: Input\n        }], disableOptionCentering: [{\n            type: Input\n        }], typeaheadDebounceInterval: [{\n            type: Input\n        }], placeholder: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], multiple: [{\n            type: Input\n        }], compareWith: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], trigger: [{\n            type: ViewChild,\n            args: ['trigger']\n        }], panel: [{\n            type: ViewChild,\n            args: ['panel']\n        }], overlayDir: [{\n            type: ViewChild,\n            args: [CdkConnectedOverlay]\n        }], options: [{\n            type: ContentChildren,\n            args: [MatOption, { descendants: true }]\n        }], optionGroups: [{\n            type: ContentChildren,\n            args: [MatOptgroup, { descendants: true }]\n        }], panelClass: [{\n            type: Input\n        }], customTrigger: [{\n            type: ContentChild,\n            args: [MatSelectTrigger]\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], errorStateMatcher: [{\n            type: Input\n        }], sortComparator: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_required;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_multiple;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_disableOptionCentering;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_typeaheadDebounceInterval;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_disableRipple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._scrollStrategyFactory;\n    /**\n     * Whether or not the overlay panel is open.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._panelOpen;\n    /**\n     * Whether filling out the select is required in the form.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._required;\n    /**\n     * The scroll position of the overlay panel, calculated to center the selected option.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._scrollTop;\n    /**\n     * The placeholder displayed in the trigger of the select.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._placeholder;\n    /**\n     * Whether the component is in multiple selection mode.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._multiple;\n    /**\n     * Comparison function to specify which option is displayed. Defaults to object equality.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._compareWith;\n    /**\n     * Unique id for this input.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._uid;\n    /**\n     * Emits whenever the component is destroyed.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._destroy;\n    /**\n     * The last measured value for the trigger's client bounding rect.\n     * @type {?}\n     */\n    MatSelect.prototype._triggerRect;\n    /**\n     * The aria-describedby attribute on the select for improved a11y.\n     * @type {?}\n     */\n    MatSelect.prototype._ariaDescribedby;\n    /**\n     * The cached font-size of the trigger element.\n     * @type {?}\n     */\n    MatSelect.prototype._triggerFontSize;\n    /**\n     * Deals with the selection logic.\n     * @type {?}\n     */\n    MatSelect.prototype._selectionModel;\n    /**\n     * Manages keyboard events for options in the panel.\n     * @type {?}\n     */\n    MatSelect.prototype._keyManager;\n    /**\n     * `View -> model callback called when value changes`\n     * @type {?}\n     */\n    MatSelect.prototype._onChange;\n    /**\n     * `View -> model callback called when select has been touched`\n     * @type {?}\n     */\n    MatSelect.prototype._onTouched;\n    /**\n     * The IDs of child options to be passed to the aria-owns attribute.\n     * @type {?}\n     */\n    MatSelect.prototype._optionIds;\n    /**\n     * The value of the select panel's transform-origin property.\n     * @type {?}\n     */\n    MatSelect.prototype._transformOrigin;\n    /**\n     * Emits when the panel element is finished transforming in.\n     * @type {?}\n     */\n    MatSelect.prototype._panelDoneAnimatingStream;\n    /**\n     * Strategy that will be used to handle scrolling while the select panel is open.\n     * @type {?}\n     */\n    MatSelect.prototype._scrollStrategy;\n    /**\n     * The y-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text.\n     * when the panel opens. Will change based on the y-position of the selected option.\n     * @type {?}\n     */\n    MatSelect.prototype._offsetY;\n    /**\n     * This position config ensures that the top \"start\" corner of the overlay\n     * is aligned with with the top \"start\" of the origin by default (overlapping\n     * the trigger completely). If the panel cannot fit below the trigger, it\n     * will fall back to a position above the trigger.\n     * @type {?}\n     */\n    MatSelect.prototype._positions;\n    /**\n     * Whether the component is disabling centering of the active option over the trigger.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._disableOptionCentering;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._focused;\n    /**\n     * A name for this control that can be used by `mat-form-field`.\n     * @type {?}\n     */\n    MatSelect.prototype.controlType;\n    /**\n     * Trigger that opens the select.\n     * @type {?}\n     */\n    MatSelect.prototype.trigger;\n    /**\n     * Panel containing the select options.\n     * @type {?}\n     */\n    MatSelect.prototype.panel;\n    /**\n     * Overlay pane containing the options.\n     * @deprecated To be turned into a private API.\n     * \\@breaking-change 10.0.0\n     * \\@docs-private\n     * @type {?}\n     */\n    MatSelect.prototype.overlayDir;\n    /**\n     * All of the defined select options.\n     * @type {?}\n     */\n    MatSelect.prototype.options;\n    /**\n     * All of the defined groups of options.\n     * @type {?}\n     */\n    MatSelect.prototype.optionGroups;\n    /**\n     * Classes to be passed to the select panel. Supports the same syntax as `ngClass`.\n     * @type {?}\n     */\n    MatSelect.prototype.panelClass;\n    /**\n     * User-supplied override of the trigger element.\n     * @type {?}\n     */\n    MatSelect.prototype.customTrigger;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._value;\n    /**\n     * Aria label of the select. If not specified, the placeholder will be used as label.\n     * @type {?}\n     */\n    MatSelect.prototype.ariaLabel;\n    /**\n     * Input that can be used to specify the `aria-labelledby` attribute.\n     * @type {?}\n     */\n    MatSelect.prototype.ariaLabelledby;\n    /**\n     * Object used to control when error messages are shown.\n     * @type {?}\n     */\n    MatSelect.prototype.errorStateMatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._typeaheadDebounceInterval;\n    /**\n     * Function used to sort the values in a select in multiple mode.\n     * Follows the same logic as `Array.prototype.sort`.\n     * @type {?}\n     */\n    MatSelect.prototype.sortComparator;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._id;\n    /**\n     * Combined stream of all of the child options' change events.\n     * @type {?}\n     */\n    MatSelect.prototype.optionSelectionChanges;\n    /**\n     * Event emitted when the select panel has been toggled.\n     * @type {?}\n     */\n    MatSelect.prototype.openedChange;\n    /**\n     * Event emitted when the select has been opened.\n     * @type {?}\n     */\n    MatSelect.prototype._openedStream;\n    /**\n     * Event emitted when the select has been closed.\n     * @type {?}\n     */\n    MatSelect.prototype._closedStream;\n    /**\n     * Event emitted when the selected value has been changed by the user.\n     * @type {?}\n     */\n    MatSelect.prototype.selectionChange;\n    /**\n     * Event that emits whenever the raw value of the select changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatSelect.prototype.valueChange;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._parentFormField;\n    /** @type {?} */\n    MatSelect.prototype.ngControl;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._liveAnnouncer;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/select-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatSelectModule {\n}\nMatSelectModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSelectModule });\nMatSelectModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSelectModule_Factory(t) { return new (t || MatSelectModule)(); }, providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER], imports: [[\n            CommonModule,\n            OverlayModule,\n            MatOptionModule,\n            MatCommonModule,\n        ],\n        MatFormFieldModule, MatOptionModule, MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSelectModule, { declarations: function () { return [MatSelect,\n        MatSelectTrigger]; }, imports: function () { return [CommonModule,\n        OverlayModule,\n        MatOptionModule,\n        MatCommonModule]; }, exports: function () { return [MatFormFieldModule,\n        MatSelect,\n        MatSelectTrigger,\n        MatOptionModule, MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelectModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    OverlayModule,\n                    MatOptionModule,\n                    MatCommonModule,\n                ],\n                exports: [MatFormFieldModule, MatSelect, MatSelectTrigger, MatOptionModule, MatCommonModule],\n                declarations: [MatSelect, MatSelectTrigger],\n                providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SELECT_CONFIG, MAT_SELECT_SCROLL_STRATEGY, MAT_SELECT_SCROLL_STRATEGY_PROVIDER, MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY, MatSelect, MatSelectChange, MatSelectModule, MatSelectTrigger, SELECT_ITEM_HEIGHT_EM, SELECT_MULTIPLE_PANEL_PADDING_X, SELECT_PANEL_INDENT_PADDING_X, SELECT_PANEL_MAX_HEIGHT, SELECT_PANEL_PADDING_X, SELECT_PANEL_VIEWPORT_PADDING, matSelectAnimations };\n\n//# sourceMappingURL=select.js.map","import { PortalModule } from '@angular/cdk/portal';\nimport { CdkStepLabel, CdkStepHeader, CdkStep, STEPPER_GLOBAL_OPTIONS, CdkStepper, CdkStepperNext, CdkStepperPrevious, CdkStepperModule } from '@angular/cdk/stepper';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { Directive, Injectable, ɵɵdefineInjectable, Optional, SkipSelf, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Input, TemplateRef, Inject, forwardRef, ContentChild, EventEmitter, ViewChildren, ContentChildren, Output, NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { ErrorStateMatcher, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Subject } from 'rxjs';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { takeUntil, distinctUntilChanged } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/stepper/step-label.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from '@angular/material/icon';\nimport * as ɵngcc5 from '@angular/cdk/bidi';\n\nfunction MatStepHeader_ng_container_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0, 9);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.iconOverrides[ctx_r0.state])(\"ngTemplateOutletContext\", ctx_r0._getIconContext());\n} }\nfunction MatStepHeader_ng_container_4_span_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r6 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r6._getDefaultTextForState(ctx_r6.state));\n} }\nfunction MatStepHeader_ng_container_4_mat_icon_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-icon\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r7 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r7._getDefaultTextForState(ctx_r7.state));\n} }\nfunction MatStepHeader_ng_container_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0, 10);\n    ɵngcc0.ɵɵtemplate(1, MatStepHeader_ng_container_4_span_1_Template, 2, 1, \"span\", 11);\n    ɵngcc0.ɵɵtemplate(2, MatStepHeader_ng_container_4_mat_icon_2_Template, 2, 1, \"mat-icon\", 12);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx_r1.state);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"number\");\n} }\nfunction MatStepHeader_ng_container_6_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0, 13);\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2._templateLabel().template);\n} }\nfunction MatStepHeader_div_7_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 14);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r3.label);\n} }\nfunction MatStepHeader_div_8_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 15);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r4._intl.optionalLabel);\n} }\nfunction MatStepHeader_div_9_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 16);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r5.errorMessage);\n} }\nfunction MatStep_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0);\n} }\nconst _c0 = [\"*\"];\nfunction MatHorizontalStepper_ng_container_1_div_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 6);\n} }\nfunction MatHorizontalStepper_ng_container_1_Template(rf, ctx) { if (rf & 1) {\n    const _r8 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"mat-step-header\", 4);\n    ɵngcc0.ɵɵlistener(\"click\", function MatHorizontalStepper_ng_container_1_Template_mat_step_header_click_1_listener() { const step_r2 = ctx.$implicit; return step_r2.select(); })(\"keydown\", function MatHorizontalStepper_ng_container_1_Template_mat_step_header_keydown_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7._onKeydown($event); });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(2, MatHorizontalStepper_ng_container_1_div_2_Template, 1, 0, \"div\", 5);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const step_r2 = ctx.$implicit;\n    const i_r3 = ctx.index;\n    const isLast_r4 = ctx.last;\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"tabIndex\", ctx_r0._getFocusIndex() === i_r3 ? 0 : 0 - 1)(\"id\", ctx_r0._getStepLabelId(i_r3))(\"index\", i_r3)(\"state\", ctx_r0._getIndicatorType(i_r3, step_r2.state))(\"label\", step_r2.stepLabel || step_r2.label)(\"selected\", ctx_r0.selectedIndex === i_r3)(\"active\", step_r2.completed || ctx_r0.selectedIndex === i_r3 || !ctx_r0.linear)(\"optional\", step_r2.optional)(\"errorMessage\", step_r2.errorMessage)(\"iconOverrides\", ctx_r0._iconOverrides)(\"disableRipple\", ctx_r0.disableRipple);\n    ɵngcc0.ɵɵattribute(\"aria-posinset\", i_r3 + 1)(\"aria-setsize\", ctx_r0.steps.length)(\"aria-controls\", ctx_r0._getStepContentId(i_r3))(\"aria-selected\", ctx_r0.selectedIndex == i_r3)(\"aria-label\", step_r2.ariaLabel || null)(\"aria-labelledby\", !step_r2.ariaLabel && step_r2.ariaLabelledby ? step_r2.ariaLabelledby : null);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !isLast_r4);\n} }\nfunction MatHorizontalStepper_div_3_Template(rf, ctx) { if (rf & 1) {\n    const _r12 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 7);\n    ɵngcc0.ɵɵlistener(\"@stepTransition.done\", function MatHorizontalStepper_div_3_Template_div_animation_stepTransition_done_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11._animationDone.next($event); });\n    ɵngcc0.ɵɵelementContainer(1, 8);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const step_r9 = ctx.$implicit;\n    const i_r10 = ctx.index;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@stepTransition\", ctx_r1._getAnimationDirection(i_r10))(\"id\", ctx_r1._getStepContentId(i_r10));\n    ɵngcc0.ɵɵattribute(\"tabindex\", ctx_r1.selectedIndex === i_r10 ? 0 : null)(\"aria-labelledby\", ctx_r1._getStepLabelId(i_r10))(\"aria-expanded\", ctx_r1.selectedIndex === i_r10);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", step_r9.content);\n} }\nfunction MatVerticalStepper_div_0_Template(rf, ctx) { if (rf & 1) {\n    const _r6 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1);\n    ɵngcc0.ɵɵelementStart(1, \"mat-step-header\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function MatVerticalStepper_div_0_Template_mat_step_header_click_1_listener() { const step_r1 = ctx.$implicit; return step_r1.select(); })(\"keydown\", function MatVerticalStepper_div_0_Template_mat_step_header_keydown_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r6); const ctx_r5 = ɵngcc0.ɵɵnextContext(); return ctx_r5._onKeydown($event); });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(2, \"div\", 3);\n    ɵngcc0.ɵɵelementStart(3, \"div\", 4);\n    ɵngcc0.ɵɵlistener(\"@stepTransition.done\", function MatVerticalStepper_div_0_Template_div_animation_stepTransition_done_3_listener($event) { ɵngcc0.ɵɵrestoreView(_r6); const ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7._animationDone.next($event); });\n    ɵngcc0.ɵɵelementStart(4, \"div\", 5);\n    ɵngcc0.ɵɵelementContainer(5, 6);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const step_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    const isLast_r3 = ctx.last;\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"tabIndex\", ctx_r0._getFocusIndex() == i_r2 ? 0 : 0 - 1)(\"id\", ctx_r0._getStepLabelId(i_r2))(\"index\", i_r2)(\"state\", ctx_r0._getIndicatorType(i_r2, step_r1.state))(\"label\", step_r1.stepLabel || step_r1.label)(\"selected\", ctx_r0.selectedIndex === i_r2)(\"active\", step_r1.completed || ctx_r0.selectedIndex === i_r2 || !ctx_r0.linear)(\"optional\", step_r1.optional)(\"errorMessage\", step_r1.errorMessage)(\"iconOverrides\", ctx_r0._iconOverrides)(\"disableRipple\", ctx_r0.disableRipple);\n    ɵngcc0.ɵɵattribute(\"aria-posinset\", i_r2 + 1)(\"aria-setsize\", ctx_r0.steps.length)(\"aria-controls\", ctx_r0._getStepContentId(i_r2))(\"aria-selected\", ctx_r0.selectedIndex === i_r2)(\"aria-label\", step_r1.ariaLabel || null)(\"aria-labelledby\", !step_r1.ariaLabel && step_r1.ariaLabelledby ? step_r1.ariaLabelledby : null);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"mat-stepper-vertical-line\", !isLast_r3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"@stepTransition\", ctx_r0._getAnimationDirection(i_r2))(\"id\", ctx_r0._getStepContentId(i_r2));\n    ɵngcc0.ɵɵattribute(\"tabindex\", ctx_r0.selectedIndex === i_r2 ? 0 : null)(\"aria-labelledby\", ctx_r0._getStepLabelId(i_r2))(\"aria-expanded\", ctx_r0.selectedIndex === i_r2);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", step_r1.content);\n} }\nclass MatStepLabel extends CdkStepLabel {\n}\nMatStepLabel.ɵfac = function MatStepLabel_Factory(t) { return ɵMatStepLabel_BaseFactory(t || MatStepLabel); };\nMatStepLabel.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatStepLabel, selectors: [[\"\", \"matStepLabel\", \"\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatStepLabel_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatStepLabel);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatStepLabel, [{\n        type: Directive,\n        args: [{\n                selector: '[matStepLabel]'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/stepper/stepper-intl.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Stepper data that is required for internationalization.\n */\nclass MatStepperIntl {\n    constructor() {\n        /**\n         * Stream that emits whenever the labels here are changed. Use this to notify\n         * components if the labels have changed after initialization.\n         */\n        this.changes = new Subject();\n        /**\n         * Label that is rendered below optional steps.\n         */\n        this.optionalLabel = 'Optional';\n    }\n}\nMatStepperIntl.ɵfac = function MatStepperIntl_Factory(t) { return new (t || MatStepperIntl)(); };\n/** @nocollapse */ MatStepperIntl.ɵprov = ɵɵdefineInjectable({ factory: function MatStepperIntl_Factory() { return new MatStepperIntl(); }, token: MatStepperIntl, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatStepperIntl, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\nif (false) {\n    /**\n     * Stream that emits whenever the labels here are changed. Use this to notify\n     * components if the labels have changed after initialization.\n     * @type {?}\n     */\n    MatStepperIntl.prototype.changes;\n    /**\n     * Label that is rendered below optional steps.\n     * @type {?}\n     */\n    MatStepperIntl.prototype.optionalLabel;\n}\n/**\n * \\@docs-private\n * @param {?} parentIntl\n * @return {?}\n */\nfunction MAT_STEPPER_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatStepperIntl();\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_STEPPER_INTL_PROVIDER = {\n    provide: MatStepperIntl,\n    deps: [[new Optional(), new SkipSelf(), MatStepperIntl]],\n    useFactory: MAT_STEPPER_INTL_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/stepper/step-header.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatStepHeader extends CdkStepHeader {\n    /**\n     * @param {?} _intl\n     * @param {?} _focusMonitor\n     * @param {?} _elementRef\n     * @param {?} changeDetectorRef\n     */\n    constructor(_intl, _focusMonitor, _elementRef, changeDetectorRef) {\n        super(_elementRef);\n        this._intl = _intl;\n        this._focusMonitor = _focusMonitor;\n        _focusMonitor.monitor(_elementRef, true);\n        this._intlSubscription = _intl.changes.subscribe((/**\n         * @return {?}\n         */\n        () => changeDetectorRef.markForCheck()));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._intlSubscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /**\n     * Focuses the step header.\n     * @return {?}\n     */\n    focus() {\n        this._focusMonitor.focusVia(this._elementRef, 'program');\n    }\n    /**\n     * Returns string label of given step if it is a text label.\n     * @return {?}\n     */\n    _stringLabel() {\n        return this.label instanceof MatStepLabel ? null : this.label;\n    }\n    /**\n     * Returns MatStepLabel if the label of given step is a template label.\n     * @return {?}\n     */\n    _templateLabel() {\n        return this.label instanceof MatStepLabel ? this.label : null;\n    }\n    /**\n     * Returns the host HTML element.\n     * @return {?}\n     */\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n    /**\n     * Template context variables that are exposed to the `matStepperIcon` instances.\n     * @return {?}\n     */\n    _getIconContext() {\n        return {\n            index: this.index,\n            active: this.active,\n            optional: this.optional\n        };\n    }\n    /**\n     * @param {?} state\n     * @return {?}\n     */\n    _getDefaultTextForState(state) {\n        if (state == 'number') {\n            return `${this.index + 1}`;\n        }\n        if (state == 'edit') {\n            return 'create';\n        }\n        if (state == 'error') {\n            return 'warning';\n        }\n        return state;\n    }\n}\nMatStepHeader.ɵfac = function MatStepHeader_Factory(t) { return new (t || MatStepHeader)(ɵngcc0.ɵɵdirectiveInject(MatStepperIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatStepHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatStepHeader, selectors: [[\"mat-step-header\"]], hostAttrs: [\"role\", \"tab\", 1, \"mat-step-header\", \"mat-focus-indicator\"], inputs: { state: \"state\", label: \"label\", errorMessage: \"errorMessage\", iconOverrides: \"iconOverrides\", index: \"index\", selected: \"selected\", active: \"active\", optional: \"optional\", disableRipple: \"disableRipple\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 10, vars: 19, consts: [[\"matRipple\", \"\", 1, \"mat-step-header-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [1, \"mat-step-icon-content\", 3, \"ngSwitch\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\", 4, \"ngSwitchCase\"], [3, \"ngSwitch\", 4, \"ngSwitchDefault\"], [1, \"mat-step-label\"], [3, \"ngTemplateOutlet\", 4, \"ngIf\"], [\"class\", \"mat-step-text-label\", 4, \"ngIf\"], [\"class\", \"mat-step-optional\", 4, \"ngIf\"], [\"class\", \"mat-step-sub-label-error\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [4, \"ngSwitchDefault\"], [3, \"ngTemplateOutlet\"], [1, \"mat-step-text-label\"], [1, \"mat-step-optional\"], [1, \"mat-step-sub-label-error\"]], template: function MatStepHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\");\n        ɵngcc0.ɵɵelementStart(2, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(3, MatStepHeader_ng_container_3_Template, 1, 2, \"ng-container\", 2);\n        ɵngcc0.ɵɵtemplate(4, MatStepHeader_ng_container_4_Template, 3, 2, \"ng-container\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(5, \"div\", 4);\n        ɵngcc0.ɵɵtemplate(6, MatStepHeader_ng_container_6_Template, 1, 1, \"ng-container\", 5);\n        ɵngcc0.ɵɵtemplate(7, MatStepHeader_div_7_Template, 2, 1, \"div\", 6);\n        ɵngcc0.ɵɵtemplate(8, MatStepHeader_div_8_Template, 2, 1, \"div\", 7);\n        ɵngcc0.ɵɵtemplate(9, MatStepHeader_div_9_Template, 2, 1, \"div\", 8);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx.disableRipple);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassMapInterpolate1(\"mat-step-icon-state-\", ctx.state, \" mat-step-icon\");\n        ɵngcc0.ɵɵclassProp(\"mat-step-icon-selected\", ctx.selected);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", !!(ctx.iconOverrides && ctx.iconOverrides[ctx.state]));\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-step-label-active\", ctx.active)(\"mat-step-label-selected\", ctx.selected)(\"mat-step-label-error\", ctx.state == \"error\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._templateLabel());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._stringLabel());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.optional && ctx.state != \"error\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.state == \"error\");\n    } }, directives: [ɵngcc2.MatRipple, ɵngcc3.NgSwitch, ɵngcc3.NgSwitchCase, ɵngcc3.NgSwitchDefault, ɵngcc3.NgIf, ɵngcc3.NgTemplateOutlet, ɵngcc4.MatIcon], styles: [\".mat-step-header{overflow:hidden;outline:none;cursor:pointer;position:relative;box-sizing:content-box;-webkit-tap-highlight-color:transparent}.mat-step-optional,.mat-step-sub-label-error{font-size:12px}.mat-step-icon{border-radius:50%;height:24px;width:24px;flex-shrink:0;position:relative}.mat-step-icon-content,.mat-step-icon .mat-icon{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%)}.mat-step-icon .mat-icon{font-size:16px;height:16px;width:16px}.mat-step-icon-state-error .mat-icon{font-size:24px;height:24px;width:24px}.mat-step-label{display:inline-block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;min-width:50px;vertical-align:middle}.mat-step-text-label{text-overflow:ellipsis;overflow:hidden}.mat-step-header .mat-step-header-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatStepHeader.ctorParameters = () => [\n    { type: MatStepperIntl },\n    { type: FocusMonitor },\n    { type: ElementRef },\n    { type: ChangeDetectorRef }\n];\nMatStepHeader.propDecorators = {\n    state: [{ type: Input }],\n    label: [{ type: Input }],\n    errorMessage: [{ type: Input }],\n    iconOverrides: [{ type: Input }],\n    index: [{ type: Input }],\n    selected: [{ type: Input }],\n    active: [{ type: Input }],\n    optional: [{ type: Input }],\n    disableRipple: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatStepHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-step-header',\n                template: \"<div class=\\\"mat-step-header-ripple\\\" matRipple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"\\n     [matRippleDisabled]=\\\"disableRipple\\\"></div>\\n\\n<div class=\\\"mat-step-icon-state-{{state}} mat-step-icon\\\" [class.mat-step-icon-selected]=\\\"selected\\\">\\n  <div class=\\\"mat-step-icon-content\\\" [ngSwitch]=\\\"!!(iconOverrides && iconOverrides[state])\\\">\\n    <ng-container\\n      *ngSwitchCase=\\\"true\\\"\\n      [ngTemplateOutlet]=\\\"iconOverrides[state]\\\"\\n      [ngTemplateOutletContext]=\\\"_getIconContext()\\\"></ng-container>\\n    <ng-container *ngSwitchDefault [ngSwitch]=\\\"state\\\">\\n      <span *ngSwitchCase=\\\"'number'\\\">{{_getDefaultTextForState(state)}}</span>\\n      <mat-icon *ngSwitchDefault>{{_getDefaultTextForState(state)}}</mat-icon>\\n    </ng-container>\\n  </div>\\n</div>\\n<div class=\\\"mat-step-label\\\"\\n     [class.mat-step-label-active]=\\\"active\\\"\\n     [class.mat-step-label-selected]=\\\"selected\\\"\\n     [class.mat-step-label-error]=\\\"state == 'error'\\\">\\n  <!-- If there is a label template, use it. -->\\n  <ng-container *ngIf=\\\"_templateLabel()\\\" [ngTemplateOutlet]=\\\"_templateLabel()!.template\\\">\\n  </ng-container>\\n  <!-- If there is no label template, fall back to the text label. -->\\n  <div class=\\\"mat-step-text-label\\\" *ngIf=\\\"_stringLabel()\\\">{{label}}</div>\\n\\n  <div class=\\\"mat-step-optional\\\" *ngIf=\\\"optional && state != 'error'\\\">{{_intl.optionalLabel}}</div>\\n  <div class=\\\"mat-step-sub-label-error\\\" *ngIf=\\\"state == 'error'\\\">{{errorMessage}}</div>\\n</div>\\n\\n\",\n                host: {\n                    'class': 'mat-step-header mat-focus-indicator',\n                    'role': 'tab'\n                },\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-step-header{overflow:hidden;outline:none;cursor:pointer;position:relative;box-sizing:content-box;-webkit-tap-highlight-color:transparent}.mat-step-optional,.mat-step-sub-label-error{font-size:12px}.mat-step-icon{border-radius:50%;height:24px;width:24px;flex-shrink:0;position:relative}.mat-step-icon-content,.mat-step-icon .mat-icon{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%)}.mat-step-icon .mat-icon{font-size:16px;height:16px;width:16px}.mat-step-icon-state-error .mat-icon{font-size:24px;height:24px;width:24px}.mat-step-label{display:inline-block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;min-width:50px;vertical-align:middle}.mat-step-text-label{text-overflow:ellipsis;overflow:hidden}.mat-step-header .mat-step-header-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"]\n            }]\n    }], function () { return [{ type: MatStepperIntl }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }]; }, { state: [{\n            type: Input\n        }], label: [{\n            type: Input\n        }], errorMessage: [{\n            type: Input\n        }], iconOverrides: [{\n            type: Input\n        }], index: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], active: [{\n            type: Input\n        }], optional: [{\n            type: Input\n        }], disableRipple: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatStepHeader.prototype._intlSubscription;\n    /**\n     * State of the given step.\n     * @type {?}\n     */\n    MatStepHeader.prototype.state;\n    /**\n     * Label of the given step.\n     * @type {?}\n     */\n    MatStepHeader.prototype.label;\n    /**\n     * Error message to display when there's an error.\n     * @type {?}\n     */\n    MatStepHeader.prototype.errorMessage;\n    /**\n     * Overrides for the header icons, passed in via the stepper.\n     * @type {?}\n     */\n    MatStepHeader.prototype.iconOverrides;\n    /**\n     * Index of the given step.\n     * @type {?}\n     */\n    MatStepHeader.prototype.index;\n    /**\n     * Whether the given step is selected.\n     * @type {?}\n     */\n    MatStepHeader.prototype.selected;\n    /**\n     * Whether the given step label is active.\n     * @type {?}\n     */\n    MatStepHeader.prototype.active;\n    /**\n     * Whether the given step is optional.\n     * @type {?}\n     */\n    MatStepHeader.prototype.optional;\n    /**\n     * Whether the ripple should be disabled.\n     * @type {?}\n     */\n    MatStepHeader.prototype.disableRipple;\n    /** @type {?} */\n    MatStepHeader.prototype._intl;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatStepHeader.prototype._focusMonitor;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/stepper/stepper-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the Material steppers.\n * \\@docs-private\n * @type {?}\n */\nconst matStepperAnimations = {\n    /**\n     * Animation that transitions the step along the X axis in a horizontal stepper.\n     */\n    horizontalStepTransition: trigger('stepTransition', [\n        state('previous', style({ transform: 'translate3d(-100%, 0, 0)', visibility: 'hidden' })),\n        state('current', style({ transform: 'none', visibility: 'visible' })),\n        state('next', style({ transform: 'translate3d(100%, 0, 0)', visibility: 'hidden' })),\n        transition('* => *', animate('500ms cubic-bezier(0.35, 0, 0.25, 1)'))\n    ]),\n    /**\n     * Animation that transitions the step along the Y axis in a vertical stepper.\n     */\n    verticalStepTransition: trigger('stepTransition', [\n        state('previous', style({ height: '0px', visibility: 'hidden' })),\n        state('next', style({ height: '0px', visibility: 'hidden' })),\n        state('current', style({ height: '*', visibility: 'visible' })),\n        transition('* <=> current', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)'))\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/stepper/stepper-icon.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Template context available to an attached `matStepperIcon`.\n * @record\n */\nfunction MatStepperIconContext() { }\nif (false) {\n    /**\n     * Index of the step.\n     * @type {?}\n     */\n    MatStepperIconContext.prototype.index;\n    /**\n     * Whether the step is currently active.\n     * @type {?}\n     */\n    MatStepperIconContext.prototype.active;\n    /**\n     * Whether the step is optional.\n     * @type {?}\n     */\n    MatStepperIconContext.prototype.optional;\n}\n/**\n * Template to be used to override the icons inside the step header.\n */\nclass MatStepperIcon {\n    /**\n     * @param {?} templateRef\n     */\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nMatStepperIcon.ɵfac = function MatStepperIcon_Factory(t) { return new (t || MatStepperIcon)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nMatStepperIcon.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatStepperIcon, selectors: [[\"ng-template\", \"matStepperIcon\", \"\"]], inputs: { name: [\"matStepperIcon\", \"name\"] } });\n/** @nocollapse */\nMatStepperIcon.ctorParameters = () => [\n    { type: TemplateRef }\n];\nMatStepperIcon.propDecorators = {\n    name: [{ type: Input, args: ['matStepperIcon',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatStepperIcon, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[matStepperIcon]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, { name: [{\n            type: Input,\n            args: ['matStepperIcon']\n        }] }); })();\nif (false) {\n    /**\n     * Name of the icon to be overridden.\n     * @type {?}\n     */\n    MatStepperIcon.prototype.name;\n    /** @type {?} */\n    MatStepperIcon.prototype.templateRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/stepper/stepper.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatStep extends CdkStep {\n    /**\n     * \\@breaking-change 8.0.0 remove the `?` after `stepperOptions`\n     * @param {?} stepper\n     * @param {?} _errorStateMatcher\n     * @param {?=} stepperOptions\n     */\n    constructor(stepper, _errorStateMatcher, stepperOptions) {\n        super(stepper, stepperOptions);\n        this._errorStateMatcher = _errorStateMatcher;\n    }\n    /**\n     * Custom error state matcher that additionally checks for validity of interacted form.\n     * @param {?} control\n     * @param {?} form\n     * @return {?}\n     */\n    isErrorState(control, form) {\n        /** @type {?} */\n        const originalErrorState = this._errorStateMatcher.isErrorState(control, form);\n        // Custom error state checks for the validity of form that is not submitted or touched\n        // since user can trigger a form change by calling for another step without directly\n        // interacting with the current form.\n        /** @type {?} */\n        const customErrorState = !!(control && control.invalid && this.interacted);\n        return originalErrorState || customErrorState;\n    }\n}\nMatStep.ɵfac = function MatStep_Factory(t) { return new (t || MatStep)(ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**\n                 * @return {?}\n                 */() => MatStepper))), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ErrorStateMatcher, 4), ɵngcc0.ɵɵdirectiveInject(STEPPER_GLOBAL_OPTIONS, 8)); };\nMatStep.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatStep, selectors: [[\"mat-step\"]], contentQueries: function MatStep_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatStepLabel, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.stepLabel = _t.first);\n    } }, exportAs: [\"matStep\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: ErrorStateMatcher, useExisting: MatStep },\n            { provide: CdkStep, useExisting: MatStep },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatStep_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatStep_ng_template_0_Template, 1, 0, \"ng-template\");\n    } }, encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatStep.ctorParameters = () => [\n    { type: MatStepper, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => MatStepper)),] }] },\n    { type: ErrorStateMatcher, decorators: [{ type: SkipSelf }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [STEPPER_GLOBAL_OPTIONS,] }] }\n];\nMatStep.propDecorators = {\n    stepLabel: [{ type: ContentChild, args: [MatStepLabel,] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatStep, [{\n        type: Component,\n        args: [{\n                selector: 'mat-step',\n                template: \"<ng-template><ng-content></ng-content></ng-template>\\n\",\n                providers: [\n                    { provide: ErrorStateMatcher, useExisting: MatStep },\n                    { provide: CdkStep, useExisting: MatStep },\n                ],\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matStep',\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: MatStepper, decorators: [{\n                type: Inject,\n                args: [forwardRef(( /**\n                                     * @return {?}\n                                     */() => MatStepper))]\n            }] }, { type: ɵngcc2.ErrorStateMatcher, decorators: [{\n                type: SkipSelf\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [STEPPER_GLOBAL_OPTIONS]\n            }] }]; }, { stepLabel: [{\n            type: ContentChild,\n            args: [MatStepLabel]\n        }] }); })();\nif (false) {\n    /**\n     * Content for step label given by `<ng-template matStepLabel>`.\n     * @type {?}\n     */\n    MatStep.prototype.stepLabel;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatStep.prototype._errorStateMatcher;\n}\nclass MatStepper extends CdkStepper {\n    constructor() {\n        super(...arguments);\n        /**\n         * Event emitted when the current step is done transitioning in.\n         */\n        this.animationDone = new EventEmitter();\n        /**\n         * Consumer-specified template-refs to be used to override the header icons.\n         */\n        this._iconOverrides = {};\n        /**\n         * Stream of animation `done` events when the body expands/collapses.\n         */\n        this._animationDone = new Subject();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._icons.forEach((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ({ name, templateRef }) => this._iconOverrides[name] = templateRef));\n        // Mark the component for change detection whenever the content children query changes\n        this._steps.changes.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._stateChanged();\n        }));\n        this._animationDone.pipe(\n        // This needs a `distinctUntilChanged` in order to avoid emitting the same event twice due\n        // to a bug in animations where the `.done` callback gets invoked twice on some browsers.\n        // See https://github.com/angular/angular/issues/24084\n        distinctUntilChanged((/**\n         * @param {?} x\n         * @param {?} y\n         * @return {?}\n         */\n        (x, y) => x.fromState === y.fromState && x.toState === y.toState)), takeUntil(this._destroyed)).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            if (((/** @type {?} */ (event.toState))) === 'current') {\n                this.animationDone.emit();\n            }\n        }));\n    }\n}\nMatStepper.ɵfac = function MatStepper_Factory(t) { return ɵMatStepper_BaseFactory(t || MatStepper); };\nMatStepper.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatStepper, selectors: [[\"\", \"matStepper\", \"\"]], contentQueries: function MatStepper_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatStep, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatStepperIcon, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._steps = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._icons = _t);\n    } }, viewQuery: function MatStepper_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatStepHeader, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._stepHeader = _t);\n    } }, inputs: { disableRipple: \"disableRipple\" }, outputs: { animationDone: \"animationDone\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkStepper, useExisting: MatStepper }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatStepper.propDecorators = {\n    _stepHeader: [{ type: ViewChildren, args: [MatStepHeader,] }],\n    _steps: [{ type: ContentChildren, args: [MatStep, { descendants: true },] }],\n    _icons: [{ type: ContentChildren, args: [MatStepperIcon, { descendants: true },] }],\n    animationDone: [{ type: Output }],\n    disableRipple: [{ type: Input }]\n};\nconst ɵMatStepper_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatStepper);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatStepper, [{\n        type: Directive,\n        args: [{ selector: '[matStepper]', providers: [{ provide: CdkStepper, useExisting: MatStepper }] }]\n    }], null, { animationDone: [{\n            type: Output\n        }], _stepHeader: [{\n            type: ViewChildren,\n            args: [MatStepHeader]\n        }], _steps: [{\n            type: ContentChildren,\n            args: [MatStep, { descendants: true }]\n        }], _icons: [{\n            type: ContentChildren,\n            args: [MatStepperIcon, { descendants: true }]\n        }], disableRipple: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatStepper.ngAcceptInputType_editable;\n    /** @type {?} */\n    MatStepper.ngAcceptInputType_optional;\n    /** @type {?} */\n    MatStepper.ngAcceptInputType_completed;\n    /** @type {?} */\n    MatStepper.ngAcceptInputType_hasError;\n    /**\n     * The list of step headers of the steps in the stepper.\n     * @type {?}\n     */\n    MatStepper.prototype._stepHeader;\n    /**\n     * Steps that the stepper holds.\n     * @type {?}\n     */\n    MatStepper.prototype._steps;\n    /**\n     * Custom icon overrides passed in by the consumer.\n     * @type {?}\n     */\n    MatStepper.prototype._icons;\n    /**\n     * Event emitted when the current step is done transitioning in.\n     * @type {?}\n     */\n    MatStepper.prototype.animationDone;\n    /**\n     * Whether ripples should be disabled for the step headers.\n     * @type {?}\n     */\n    MatStepper.prototype.disableRipple;\n    /**\n     * Consumer-specified template-refs to be used to override the header icons.\n     * @type {?}\n     */\n    MatStepper.prototype._iconOverrides;\n    /**\n     * Stream of animation `done` events when the body expands/collapses.\n     * @type {?}\n     */\n    MatStepper.prototype._animationDone;\n}\nclass MatHorizontalStepper extends MatStepper {\n    constructor() {\n        super(...arguments);\n        /**\n         * Whether the label should display in bottom or end position.\n         */\n        this.labelPosition = 'end';\n    }\n}\nMatHorizontalStepper.ɵfac = function MatHorizontalStepper_Factory(t) { return ɵMatHorizontalStepper_BaseFactory(t || MatHorizontalStepper); };\nMatHorizontalStepper.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatHorizontalStepper, selectors: [[\"mat-horizontal-stepper\"]], hostAttrs: [\"aria-orientation\", \"horizontal\", \"role\", \"tablist\", 1, \"mat-stepper-horizontal\"], hostVars: 4, hostBindings: function MatHorizontalStepper_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-stepper-label-position-end\", ctx.labelPosition == \"end\")(\"mat-stepper-label-position-bottom\", ctx.labelPosition == \"bottom\");\n    } }, inputs: { selectedIndex: \"selectedIndex\", labelPosition: \"labelPosition\" }, exportAs: [\"matHorizontalStepper\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MatStepper, useExisting: MatHorizontalStepper },\n            { provide: CdkStepper, useExisting: MatHorizontalStepper }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 4, vars: 2, consts: [[1, \"mat-horizontal-stepper-header-container\"], [4, \"ngFor\", \"ngForOf\"], [1, \"mat-horizontal-content-container\"], [\"class\", \"mat-horizontal-stepper-content\", \"role\", \"tabpanel\", 3, \"id\", 4, \"ngFor\", \"ngForOf\"], [1, \"mat-horizontal-stepper-header\", 3, \"tabIndex\", \"id\", \"index\", \"state\", \"label\", \"selected\", \"active\", \"optional\", \"errorMessage\", \"iconOverrides\", \"disableRipple\", \"click\", \"keydown\"], [\"class\", \"mat-stepper-horizontal-line\", 4, \"ngIf\"], [1, \"mat-stepper-horizontal-line\"], [\"role\", \"tabpanel\", 1, \"mat-horizontal-stepper-content\", 3, \"id\"], [3, \"ngTemplateOutlet\"]], template: function MatHorizontalStepper_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵtemplate(1, MatHorizontalStepper_ng_container_1_Template, 3, 18, \"ng-container\", 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵtemplate(3, MatHorizontalStepper_div_3_Template, 2, 6, \"div\", 3);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.steps);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.steps);\n    } }, directives: [ɵngcc3.NgForOf, MatStepHeader, ɵngcc3.NgIf, ɵngcc3.NgTemplateOutlet], styles: [\".mat-stepper-vertical,.mat-stepper-horizontal{display:block}.mat-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header-container{align-items:flex-start}.mat-stepper-horizontal-line{border-top-width:1px;border-top-style:solid;flex:auto;height:0;margin:0 -16px;min-width:32px}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{margin:0;min-width:0;position:relative;top:36px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{border-top-width:1px;border-top-style:solid;content:\\\"\\\";display:inline-block;height:0;position:absolute;top:36px;width:calc(50% - 20px)}.mat-horizontal-stepper-header{display:flex;height:72px;overflow:hidden;align-items:center;padding:0 24px}.mat-horizontal-stepper-header .mat-step-icon{margin-right:8px;flex:none}[dir=rtl] .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:8px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{box-sizing:border-box;flex-direction:column;height:auto;padding:24px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{right:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before{left:0}[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:last-child::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:first-child::after{display:none}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-label{padding:16px 0 0 0;text-align:center;width:100%}.mat-vertical-stepper-header{display:flex;align-items:center;padding:24px;height:24px}.mat-vertical-stepper-header .mat-step-icon{margin-right:12px}[dir=rtl] .mat-vertical-stepper-header .mat-step-icon{margin-right:0;margin-left:12px}.mat-horizontal-stepper-content{outline:0}.mat-horizontal-stepper-content[aria-expanded=false]{height:0;overflow:hidden}.mat-horizontal-content-container{overflow:hidden;padding:0 24px 24px 24px}.mat-vertical-content-container{margin-left:36px;border:0;position:relative}[dir=rtl] .mat-vertical-content-container{margin-left:0;margin-right:36px}.mat-stepper-vertical-line::before{content:\\\"\\\";position:absolute;top:-16px;bottom:-16px;left:0;border-left-width:1px;border-left-style:solid}[dir=rtl] .mat-stepper-vertical-line::before{left:auto;right:0}.mat-vertical-stepper-content{overflow:hidden;outline:0}.mat-vertical-content{padding:0 24px 24px 24px}.mat-step:last-child .mat-vertical-content-container{border:none}\\n\"], encapsulation: 2, data: { animation: [matStepperAnimations.horizontalStepTransition] }, changeDetection: 0 });\nMatHorizontalStepper.propDecorators = {\n    labelPosition: [{ type: Input }]\n};\nconst ɵMatHorizontalStepper_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHorizontalStepper);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHorizontalStepper, [{\n        type: Component,\n        args: [{\n                selector: 'mat-horizontal-stepper',\n                exportAs: 'matHorizontalStepper',\n                template: \"<div class=\\\"mat-horizontal-stepper-header-container\\\">\\n  <ng-container *ngFor=\\\"let step of steps; let i = index; let isLast = last\\\">\\n    <mat-step-header class=\\\"mat-horizontal-stepper-header\\\"\\n                     (click)=\\\"step.select()\\\"\\n                     (keydown)=\\\"_onKeydown($event)\\\"\\n                     [tabIndex]=\\\"_getFocusIndex() === i ? 0 : -1\\\"\\n                     [id]=\\\"_getStepLabelId(i)\\\"\\n                     [attr.aria-posinset]=\\\"i + 1\\\"\\n                     [attr.aria-setsize]=\\\"steps.length\\\"\\n                     [attr.aria-controls]=\\\"_getStepContentId(i)\\\"\\n                     [attr.aria-selected]=\\\"selectedIndex == i\\\"\\n                     [attr.aria-label]=\\\"step.ariaLabel || null\\\"\\n                     [attr.aria-labelledby]=\\\"(!step.ariaLabel && step.ariaLabelledby) ? step.ariaLabelledby : null\\\"\\n                     [index]=\\\"i\\\"\\n                     [state]=\\\"_getIndicatorType(i, step.state)\\\"\\n                     [label]=\\\"step.stepLabel || step.label\\\"\\n                     [selected]=\\\"selectedIndex === i\\\"\\n                     [active]=\\\"step.completed || selectedIndex === i || !linear\\\"\\n                     [optional]=\\\"step.optional\\\"\\n                     [errorMessage]=\\\"step.errorMessage\\\"\\n                     [iconOverrides]=\\\"_iconOverrides\\\"\\n                     [disableRipple]=\\\"disableRipple\\\">\\n    </mat-step-header>\\n    <div *ngIf=\\\"!isLast\\\" class=\\\"mat-stepper-horizontal-line\\\"></div>\\n  </ng-container>\\n</div>\\n\\n<div class=\\\"mat-horizontal-content-container\\\">\\n  <div *ngFor=\\\"let step of steps; let i = index\\\"\\n       [attr.tabindex]=\\\"selectedIndex === i ? 0 : null\\\"\\n       class=\\\"mat-horizontal-stepper-content\\\" role=\\\"tabpanel\\\"\\n       [@stepTransition]=\\\"_getAnimationDirection(i)\\\"\\n       (@stepTransition.done)=\\\"_animationDone.next($event)\\\"\\n       [id]=\\\"_getStepContentId(i)\\\"\\n       [attr.aria-labelledby]=\\\"_getStepLabelId(i)\\\"\\n       [attr.aria-expanded]=\\\"selectedIndex === i\\\">\\n    <ng-container [ngTemplateOutlet]=\\\"step.content\\\"></ng-container>\\n  </div>\\n</div>\\n\",\n                inputs: ['selectedIndex'],\n                host: {\n                    'class': 'mat-stepper-horizontal',\n                    '[class.mat-stepper-label-position-end]': 'labelPosition == \"end\"',\n                    '[class.mat-stepper-label-position-bottom]': 'labelPosition == \"bottom\"',\n                    'aria-orientation': 'horizontal',\n                    'role': 'tablist'\n                },\n                animations: [matStepperAnimations.horizontalStepTransition],\n                providers: [\n                    { provide: MatStepper, useExisting: MatHorizontalStepper },\n                    { provide: CdkStepper, useExisting: MatHorizontalStepper }\n                ],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-stepper-vertical,.mat-stepper-horizontal{display:block}.mat-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header-container{align-items:flex-start}.mat-stepper-horizontal-line{border-top-width:1px;border-top-style:solid;flex:auto;height:0;margin:0 -16px;min-width:32px}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{margin:0;min-width:0;position:relative;top:36px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{border-top-width:1px;border-top-style:solid;content:\\\"\\\";display:inline-block;height:0;position:absolute;top:36px;width:calc(50% - 20px)}.mat-horizontal-stepper-header{display:flex;height:72px;overflow:hidden;align-items:center;padding:0 24px}.mat-horizontal-stepper-header .mat-step-icon{margin-right:8px;flex:none}[dir=rtl] .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:8px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{box-sizing:border-box;flex-direction:column;height:auto;padding:24px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{right:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before{left:0}[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:last-child::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:first-child::after{display:none}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-label{padding:16px 0 0 0;text-align:center;width:100%}.mat-vertical-stepper-header{display:flex;align-items:center;padding:24px;height:24px}.mat-vertical-stepper-header .mat-step-icon{margin-right:12px}[dir=rtl] .mat-vertical-stepper-header .mat-step-icon{margin-right:0;margin-left:12px}.mat-horizontal-stepper-content{outline:0}.mat-horizontal-stepper-content[aria-expanded=false]{height:0;overflow:hidden}.mat-horizontal-content-container{overflow:hidden;padding:0 24px 24px 24px}.mat-vertical-content-container{margin-left:36px;border:0;position:relative}[dir=rtl] .mat-vertical-content-container{margin-left:0;margin-right:36px}.mat-stepper-vertical-line::before{content:\\\"\\\";position:absolute;top:-16px;bottom:-16px;left:0;border-left-width:1px;border-left-style:solid}[dir=rtl] .mat-stepper-vertical-line::before{left:auto;right:0}.mat-vertical-stepper-content{overflow:hidden;outline:0}.mat-vertical-content{padding:0 24px 24px 24px}.mat-step:last-child .mat-vertical-content-container{border:none}\\n\"]\n            }]\n    }], null, { labelPosition: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatHorizontalStepper.ngAcceptInputType_editable;\n    /** @type {?} */\n    MatHorizontalStepper.ngAcceptInputType_optional;\n    /** @type {?} */\n    MatHorizontalStepper.ngAcceptInputType_completed;\n    /** @type {?} */\n    MatHorizontalStepper.ngAcceptInputType_hasError;\n    /**\n     * Whether the label should display in bottom or end position.\n     * @type {?}\n     */\n    MatHorizontalStepper.prototype.labelPosition;\n}\nclass MatVerticalStepper extends MatStepper {\n    /**\n     * @param {?} dir\n     * @param {?} changeDetectorRef\n     * @param {?=} elementRef\n     * @param {?=} _document\n     */\n    constructor(dir, changeDetectorRef, \n    // @breaking-change 8.0.0 `elementRef` and `_document` parameters to become required.\n    elementRef, _document) {\n        super(dir, changeDetectorRef, elementRef, _document);\n        this._orientation = 'vertical';\n    }\n}\nMatVerticalStepper.ɵfac = function MatVerticalStepper_Factory(t) { return new (t || MatVerticalStepper)(ɵngcc0.ɵɵdirectiveInject(ɵngcc5.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nMatVerticalStepper.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatVerticalStepper, selectors: [[\"mat-vertical-stepper\"]], hostAttrs: [\"aria-orientation\", \"vertical\", \"role\", \"tablist\", 1, \"mat-stepper-vertical\"], inputs: { selectedIndex: \"selectedIndex\" }, exportAs: [\"matVerticalStepper\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MatStepper, useExisting: MatVerticalStepper },\n            { provide: CdkStepper, useExisting: MatVerticalStepper }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 1, consts: [[\"class\", \"mat-step\", 4, \"ngFor\", \"ngForOf\"], [1, \"mat-step\"], [1, \"mat-vertical-stepper-header\", 3, \"tabIndex\", \"id\", \"index\", \"state\", \"label\", \"selected\", \"active\", \"optional\", \"errorMessage\", \"iconOverrides\", \"disableRipple\", \"click\", \"keydown\"], [1, \"mat-vertical-content-container\"], [\"role\", \"tabpanel\", 1, \"mat-vertical-stepper-content\", 3, \"id\"], [1, \"mat-vertical-content\"], [3, \"ngTemplateOutlet\"]], template: function MatVerticalStepper_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, MatVerticalStepper_div_0_Template, 6, 25, \"div\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.steps);\n    } }, directives: [ɵngcc3.NgForOf, MatStepHeader, ɵngcc3.NgTemplateOutlet], styles: [\".mat-stepper-vertical,.mat-stepper-horizontal{display:block}.mat-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header-container{align-items:flex-start}.mat-stepper-horizontal-line{border-top-width:1px;border-top-style:solid;flex:auto;height:0;margin:0 -16px;min-width:32px}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{margin:0;min-width:0;position:relative;top:36px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{border-top-width:1px;border-top-style:solid;content:\\\"\\\";display:inline-block;height:0;position:absolute;top:36px;width:calc(50% - 20px)}.mat-horizontal-stepper-header{display:flex;height:72px;overflow:hidden;align-items:center;padding:0 24px}.mat-horizontal-stepper-header .mat-step-icon{margin-right:8px;flex:none}[dir=rtl] .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:8px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{box-sizing:border-box;flex-direction:column;height:auto;padding:24px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{right:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before{left:0}[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:last-child::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:first-child::after{display:none}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-label{padding:16px 0 0 0;text-align:center;width:100%}.mat-vertical-stepper-header{display:flex;align-items:center;padding:24px;height:24px}.mat-vertical-stepper-header .mat-step-icon{margin-right:12px}[dir=rtl] .mat-vertical-stepper-header .mat-step-icon{margin-right:0;margin-left:12px}.mat-horizontal-stepper-content{outline:0}.mat-horizontal-stepper-content[aria-expanded=false]{height:0;overflow:hidden}.mat-horizontal-content-container{overflow:hidden;padding:0 24px 24px 24px}.mat-vertical-content-container{margin-left:36px;border:0;position:relative}[dir=rtl] .mat-vertical-content-container{margin-left:0;margin-right:36px}.mat-stepper-vertical-line::before{content:\\\"\\\";position:absolute;top:-16px;bottom:-16px;left:0;border-left-width:1px;border-left-style:solid}[dir=rtl] .mat-stepper-vertical-line::before{left:auto;right:0}.mat-vertical-stepper-content{overflow:hidden;outline:0}.mat-vertical-content{padding:0 24px 24px 24px}.mat-step:last-child .mat-vertical-content-container{border:none}\\n\"], encapsulation: 2, data: { animation: [matStepperAnimations.verticalStepTransition] }, changeDetection: 0 });\n/** @nocollapse */\nMatVerticalStepper.ctorParameters = () => [\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatVerticalStepper, [{\n        type: Component,\n        args: [{\n                selector: 'mat-vertical-stepper',\n                exportAs: 'matVerticalStepper',\n                template: \"<div class=\\\"mat-step\\\" *ngFor=\\\"let step of steps; let i = index; let isLast = last\\\">\\n  <mat-step-header class=\\\"mat-vertical-stepper-header\\\"\\n                   (click)=\\\"step.select()\\\"\\n                   (keydown)=\\\"_onKeydown($event)\\\"\\n                   [tabIndex]=\\\"_getFocusIndex() == i ? 0 : -1\\\"\\n                   [id]=\\\"_getStepLabelId(i)\\\"\\n                   [attr.aria-posinset]=\\\"i + 1\\\"\\n                   [attr.aria-setsize]=\\\"steps.length\\\"\\n                   [attr.aria-controls]=\\\"_getStepContentId(i)\\\"\\n                   [attr.aria-selected]=\\\"selectedIndex === i\\\"\\n                   [attr.aria-label]=\\\"step.ariaLabel || null\\\"\\n                   [attr.aria-labelledby]=\\\"(!step.ariaLabel && step.ariaLabelledby) ? step.ariaLabelledby : null\\\"\\n                   [index]=\\\"i\\\"\\n                   [state]=\\\"_getIndicatorType(i, step.state)\\\"\\n                   [label]=\\\"step.stepLabel || step.label\\\"\\n                   [selected]=\\\"selectedIndex === i\\\"\\n                   [active]=\\\"step.completed || selectedIndex === i || !linear\\\"\\n                   [optional]=\\\"step.optional\\\"\\n                   [errorMessage]=\\\"step.errorMessage\\\"\\n                   [iconOverrides]=\\\"_iconOverrides\\\"\\n                   [disableRipple]=\\\"disableRipple\\\">\\n  </mat-step-header>\\n\\n  <div class=\\\"mat-vertical-content-container\\\" [class.mat-stepper-vertical-line]=\\\"!isLast\\\">\\n    <div class=\\\"mat-vertical-stepper-content\\\" role=\\\"tabpanel\\\"\\n         [attr.tabindex]=\\\"selectedIndex === i ? 0 : null\\\"\\n         [@stepTransition]=\\\"_getAnimationDirection(i)\\\"\\n         (@stepTransition.done)=\\\"_animationDone.next($event)\\\"\\n         [id]=\\\"_getStepContentId(i)\\\"\\n         [attr.aria-labelledby]=\\\"_getStepLabelId(i)\\\"\\n         [attr.aria-expanded]=\\\"selectedIndex === i\\\">\\n      <div class=\\\"mat-vertical-content\\\">\\n        <ng-container [ngTemplateOutlet]=\\\"step.content\\\"></ng-container>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\",\n                inputs: ['selectedIndex'],\n                host: {\n                    'class': 'mat-stepper-vertical',\n                    'aria-orientation': 'vertical',\n                    'role': 'tablist'\n                },\n                animations: [matStepperAnimations.verticalStepTransition],\n                providers: [\n                    { provide: MatStepper, useExisting: MatVerticalStepper },\n                    { provide: CdkStepper, useExisting: MatVerticalStepper }\n                ],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-stepper-vertical,.mat-stepper-horizontal{display:block}.mat-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header-container{align-items:flex-start}.mat-stepper-horizontal-line{border-top-width:1px;border-top-style:solid;flex:auto;height:0;margin:0 -16px;min-width:32px}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{margin:0;min-width:0;position:relative;top:36px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{border-top-width:1px;border-top-style:solid;content:\\\"\\\";display:inline-block;height:0;position:absolute;top:36px;width:calc(50% - 20px)}.mat-horizontal-stepper-header{display:flex;height:72px;overflow:hidden;align-items:center;padding:0 24px}.mat-horizontal-stepper-header .mat-step-icon{margin-right:8px;flex:none}[dir=rtl] .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:8px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{box-sizing:border-box;flex-direction:column;height:auto;padding:24px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{right:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before{left:0}[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:last-child::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:first-child::after{display:none}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-label{padding:16px 0 0 0;text-align:center;width:100%}.mat-vertical-stepper-header{display:flex;align-items:center;padding:24px;height:24px}.mat-vertical-stepper-header .mat-step-icon{margin-right:12px}[dir=rtl] .mat-vertical-stepper-header .mat-step-icon{margin-right:0;margin-left:12px}.mat-horizontal-stepper-content{outline:0}.mat-horizontal-stepper-content[aria-expanded=false]{height:0;overflow:hidden}.mat-horizontal-content-container{overflow:hidden;padding:0 24px 24px 24px}.mat-vertical-content-container{margin-left:36px;border:0;position:relative}[dir=rtl] .mat-vertical-content-container{margin-left:0;margin-right:36px}.mat-stepper-vertical-line::before{content:\\\"\\\";position:absolute;top:-16px;bottom:-16px;left:0;border-left-width:1px;border-left-style:solid}[dir=rtl] .mat-stepper-vertical-line::before{left:auto;right:0}.mat-vertical-stepper-content{overflow:hidden;outline:0}.mat-vertical-content{padding:0 24px 24px 24px}.mat-step:last-child .mat-vertical-content-container{border:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc5.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    MatVerticalStepper.ngAcceptInputType_editable;\n    /** @type {?} */\n    MatVerticalStepper.ngAcceptInputType_optional;\n    /** @type {?} */\n    MatVerticalStepper.ngAcceptInputType_completed;\n    /** @type {?} */\n    MatVerticalStepper.ngAcceptInputType_hasError;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/stepper/stepper-button.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Button that moves to the next step in a stepper workflow.\n */\nclass MatStepperNext extends CdkStepperNext {\n}\nMatStepperNext.ɵfac = function MatStepperNext_Factory(t) { return ɵMatStepperNext_BaseFactory(t || MatStepperNext); };\nMatStepperNext.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatStepperNext, selectors: [[\"button\", \"matStepperNext\", \"\"]], hostVars: 1, hostBindings: function MatStepperNext_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"type\", ctx.type);\n    } }, inputs: { type: \"type\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatStepperNext_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatStepperNext);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatStepperNext, [{\n        type: Directive,\n        args: [{\n                selector: 'button[matStepperNext]',\n                host: {\n                    '[type]': 'type'\n                },\n                inputs: ['type']\n            }]\n    }], null, null); })();\n/**\n * Button that moves to the previous step in a stepper workflow.\n */\nclass MatStepperPrevious extends CdkStepperPrevious {\n}\nMatStepperPrevious.ɵfac = function MatStepperPrevious_Factory(t) { return ɵMatStepperPrevious_BaseFactory(t || MatStepperPrevious); };\nMatStepperPrevious.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatStepperPrevious, selectors: [[\"button\", \"matStepperPrevious\", \"\"]], hostVars: 1, hostBindings: function MatStepperPrevious_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"type\", ctx.type);\n    } }, inputs: { type: \"type\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatStepperPrevious_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatStepperPrevious);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatStepperPrevious, [{\n        type: Directive,\n        args: [{\n                selector: 'button[matStepperPrevious]',\n                host: {\n                    '[type]': 'type'\n                },\n                inputs: ['type']\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/stepper/stepper-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatStepperModule {\n}\nMatStepperModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatStepperModule });\nMatStepperModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatStepperModule_Factory(t) { return new (t || MatStepperModule)(); }, providers: [MAT_STEPPER_INTL_PROVIDER, ErrorStateMatcher], imports: [[\n            MatCommonModule,\n            CommonModule,\n            PortalModule,\n            MatButtonModule,\n            CdkStepperModule,\n            MatIconModule,\n            MatRippleModule,\n        ],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatStepperModule, { declarations: function () { return [MatHorizontalStepper,\n        MatVerticalStepper,\n        MatStep,\n        MatStepLabel,\n        MatStepper,\n        MatStepperNext,\n        MatStepperPrevious,\n        MatStepHeader,\n        MatStepperIcon]; }, imports: function () { return [MatCommonModule,\n        CommonModule,\n        PortalModule,\n        MatButtonModule,\n        CdkStepperModule,\n        MatIconModule,\n        MatRippleModule]; }, exports: function () { return [MatCommonModule,\n        MatHorizontalStepper,\n        MatVerticalStepper,\n        MatStep,\n        MatStepLabel,\n        MatStepper,\n        MatStepperNext,\n        MatStepperPrevious,\n        MatStepHeader,\n        MatStepperIcon]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatStepperModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    MatCommonModule,\n                    CommonModule,\n                    PortalModule,\n                    MatButtonModule,\n                    CdkStepperModule,\n                    MatIconModule,\n                    MatRippleModule,\n                ],\n                exports: [\n                    MatCommonModule,\n                    MatHorizontalStepper,\n                    MatVerticalStepper,\n                    MatStep,\n                    MatStepLabel,\n                    MatStepper,\n                    MatStepperNext,\n                    MatStepperPrevious,\n                    MatStepHeader,\n                    MatStepperIcon,\n                ],\n                declarations: [\n                    MatHorizontalStepper,\n                    MatVerticalStepper,\n                    MatStep,\n                    MatStepLabel,\n                    MatStepper,\n                    MatStepperNext,\n                    MatStepperPrevious,\n                    MatStepHeader,\n                    MatStepperIcon,\n                ],\n                providers: [MAT_STEPPER_INTL_PROVIDER, ErrorStateMatcher]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/stepper/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_STEPPER_INTL_PROVIDER, MAT_STEPPER_INTL_PROVIDER_FACTORY, MatHorizontalStepper, MatStep, MatStepHeader, MatStepLabel, MatStepper, MatStepperIcon, MatStepperIntl, MatStepperModule, MatStepperNext, MatStepperPrevious, MatVerticalStepper, matStepperAnimations };\n\n//# sourceMappingURL=stepper.js.map","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MixDesignComponent } from './mix-design.component';\n\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: MixDesignComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class MixDesignRoutingModule { }","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\n\n@Component({\n  selector: 'o-mix-design',\n  templateUrl: './mix-design.component.html',\n  styleUrls: ['./mix-design.component.scss']\n})\nexport class MixDesignComponent implements OnInit {\n  isLinear = false;\n  firstFormGroup: FormGroup;\n  secondFormGroup: FormGroup;\n  constructor(private _formBuilder: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.firstFormGroup = this._formBuilder.group({\n      firstCtrl: ['', Validators.required]\n    });\n    this.secondFormGroup = this._formBuilder.group({\n      secondCtrl: ['', Validators.required]\n    });\n  }\n\n}\n","<div class=\"container\">\n  <mat-card class=\"example-card\">\n    <mat-card-header>\n      <mat-card-title>Mix Design</mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n      <mat-horizontal-stepper labelPosition=\"bottom\" linear=\"false\" #stepper>\n        <mat-step [stepControl]=\"firstFormGroup\">\n          <form [formGroup]=\"firstFormGroup\">\n            <ng-template matStepLabel>STIPULATIONS FOR PROPORTIONING</ng-template>\n            <!-- <mat-form-field>\n              <mat-label>Name</mat-label>\n              <input matInput placeholder=\"Last name, First name\" formControlName=\"firstCtrl\" required>\n            </mat-form-field>\n            <div>\n              <button mat-button matStepperNext>Next</button>\n            </div>-->\n            <div fxLayout='column' fxLayoutGap=\"20px\" class=\"pd-t-20\">\n              <div fxFlex>\n                <div fxFlex=\"40%\" dir=\"rtl\" fxFlexAlign=\"center\" class=\"pd-r-15\">\n                  Grade Designation (M)\n                </div>\n                <div fxFlex=\"60%\">\n                  <mat-form-field>\n                    <mat-label>Select an option</mat-label>\n                    <mat-select>\n                      <mat-option>None</mat-option>\n                      <mat-option value=\"option1\">Option 1</mat-option>\n                      <mat-option value=\"option2\">Option 2</mat-option>\n                      <mat-option value=\"option3\">Option 3</mat-option>\n                    </mat-select>\n                  </mat-form-field>\n                </div>\n              </div>\n              <div fxFlex>\n                <div fxFlex=\"40%\" dir=\"rtl\" fxFlexAlign=\"center\" class=\"pd-r-15\">Type of Cement </div>\n                <div fxFlex=\"60%\">\n                  <mat-checkbox>Check me!</mat-checkbox>\n                </div>\n              </div>\n              <div fxFlex>\n                <div fxFlex=\"40%\" dir=\"rtl\" fxFlexAlign=\"center\" class=\"pd-r-15\">Type of mineral admixture</div>\n                <div fxFlex=\"60%\">\n                  <mat-form-field>\n                    <mat-label>Select an option</mat-label>\n                    <mat-select>\n                      <mat-option>None</mat-option>\n                      <mat-option value=\"option1\">Option 1</mat-option>\n                      <mat-option value=\"option2\">Option 2</mat-option>\n                      <mat-option value=\"option3\">Option 3</mat-option>\n                    </mat-select>\n                  </mat-form-field>\n                </div>\n              </div>\n              <div fxFlex>\n                <div fxFlex=\"40%\" dir=\"rtl\" fxFlexAlign=\"center\" class=\"pd-r-15\">Maximum Nominal size of the aggregate\n                </div>\n                <div fxFlex=\"60%\">\n                  <mat-form-field>\n                    <mat-label>Select an option</mat-label>\n                    <mat-select>\n                      <mat-option>None</mat-option>\n                      <mat-option value=\"option1\">Option 1</mat-option>\n                      <mat-option value=\"option2\">Option 2</mat-option>\n                      <mat-option value=\"option3\">Option 3</mat-option>\n                    </mat-select>\n                  </mat-form-field>\n                </div>\n              </div>\n              <div fxFlex>\n                <div fxFlex=\"40%\" dir=\"rtl\" fxFlexAlign=\"center\" class=\"pd-r-15\">Minimum Cement Content and Maximum\n                  water-Cement ratio to be adopted\n                  and/or\n                  Exposure conditions as per Table-3 of IS 456</div>\n                <div fxFlex=\"60%\">\n                  <mat-form-field>\n                    <mat-label>Select an option</mat-label>\n                    <mat-select>\n                      <mat-option>None</mat-option>\n                      <mat-option value=\"option1\">Option 1</mat-option>\n                      <mat-option value=\"option2\">Option 2</mat-option>\n                      <mat-option value=\"option3\">Option 3</mat-option>\n                    </mat-select>\n                  </mat-form-field>\n                </div>\n              </div>\n              <div fxFlex>\n                <div fxFlex=\"40%\" dir=\"rtl\" fxFlexAlign=\"center\" class=\"pd-r-15\">Workibility</div>\n                <div fxFlex=\"60%\">\n                  <mat-form-field>\n                    <mat-label>Select an option</mat-label>\n                    <mat-select>\n                      <mat-option>None</mat-option>\n                      <mat-option value=\"option1\">Option 1</mat-option>\n                      <mat-option value=\"option2\">Option 2</mat-option>\n                      <mat-option value=\"option3\">Option 3</mat-option>\n                    </mat-select>\n                  </mat-form-field>\n                </div>\n              </div>\n              <div fxFlex>\n                <div fxFlex=\"40%\" dir=\"rtl\" fxFlexAlign=\"center\" class=\"pd-r-15\">Method of Concrete Placing</div>\n                <div fxFlex=\"60%\">\n                  <mat-form-field>\n                    <mat-label>Select an option</mat-label>\n                    <mat-select>\n                      <mat-option>None</mat-option>\n                      <mat-option value=\"option1\">Option 1</mat-option>\n                      <mat-option value=\"option2\">Option 2</mat-option>\n                      <mat-option value=\"option3\">Option 3</mat-option>\n                    </mat-select>\n                  </mat-form-field>\n                </div>\n              </div>\n              <div fxFlex>\n                <div fxFlex=\"40%\" dir=\"rtl\" fxFlexAlign=\"center\" class=\"pd-r-15\">Degree of Site Control </div>\n                <div fxFlex=\"60%\">\n                  <mat-form-field>\n                    <mat-label>Select an option</mat-label>\n                    <mat-select>\n                      <mat-option>None</mat-option>\n                      <mat-option value=\"option1\">Option 1</mat-option>\n                      <mat-option value=\"option2\">Option 2</mat-option>\n                      <mat-option value=\"option3\">Option 3</mat-option>\n                    </mat-select>\n                  </mat-form-field>\n                </div>\n              </div>\n              <div fxFlex>\n                <div fxFlex=\"40%\" dir=\"rtl\" fxFlexAlign=\"center\" class=\"pd-r-15\">Type of aggregate</div>\n                <div fxFlex=\"60%\">\n                  <mat-form-field>\n                    <mat-label>Select an option</mat-label>\n                    <mat-select>\n                      <mat-option>None</mat-option>\n                      <mat-option value=\"option1\">Option 1</mat-option>\n                      <mat-option value=\"option2\">Option 2</mat-option>\n                      <mat-option value=\"option3\">Option 3</mat-option>\n                    </mat-select>\n                  </mat-form-field>\n                </div>\n              </div>\n              <div fxFlex>\n                <div fxFlex=\"40%\" dir=\"rtl\" fxFlexAlign=\"center\" class=\"pd-r-15\">Maximum Cement Content (OPC content)\n                </div>\n                <div fxFlex=\"60%\">\n                  <mat-form-field>\n                    <mat-label>Select an option</mat-label>\n                    <mat-select>\n                      <mat-option>None</mat-option>\n                      <mat-option value=\"option1\">Option 1</mat-option>\n                      <mat-option value=\"option2\">Option 2</mat-option>\n                      <mat-option value=\"option3\">Option 3</mat-option>\n                    </mat-select>\n                  </mat-form-field>\n                </div>\n              </div>\n              <div fxFlex>\n                <div fxFlex=\"40%\" dir=\"rtl\" fxFlexAlign=\"center\" class=\"pd-r-15\">Chemical Admixture Type</div>\n                <div fxFlex=\"60%\">\n                  <mat-form-field>\n                    <mat-label>Select an option</mat-label>\n                    <mat-select>\n                      <mat-option>None</mat-option>\n                      <mat-option value=\"option1\">Option 1</mat-option>\n                      <mat-option value=\"option2\">Option 2</mat-option>\n                      <mat-option value=\"option3\">Option 3</mat-option>\n                    </mat-select>\n                  </mat-form-field>\n                </div>\n              </div>\n              <div fxFlex>\n                <div fxFlex=\"50%\" dir=\"ltr\">\n\n                </div>\n                <div fxFlex=\"50%\" dir=\"rtl\">\n                  <button mat-raised-button color=\"primary\" matStepperNext>Next</button>\n                </div>\n              </div>\n            </div>\n          </form>\n        </mat-step>\n        <mat-step [stepControl]=\"secondFormGroup\">\n          <form [formGroup]=\"secondFormGroup\">\n            <ng-template matStepLabel>TEST DATA FOR MATERIALS</ng-template>\n            <div fxLayout='column' fxLayoutGap=\"20px\" class=\"pd-t-20\">\n              <div fxFlex>\n                <div fxFlex=\"40%\" dir=\"rtl\" fxFlexAlign=\"center\" class=\"pd-r-15\">\n                  Cement Used (OPC)\n                </div>\n                <div fxFlex=\"60%\">\n                  <mat-form-field>\n                    <mat-label>Select an option</mat-label>\n                    <mat-select>\n                      <mat-option>None</mat-option>\n                      <mat-option value=\"option1\">Option 1</mat-option>\n                      <mat-option value=\"option2\">Option 2</mat-option>\n                      <mat-option value=\"option3\">Option 3</mat-option>\n                    </mat-select>\n                  </mat-form-field>\n                </div>\n              </div>\n              <div fxFlex>\n                <div fxFlex=\"40%\" dir=\"rtl\" fxFlexAlign=\"center\" class=\"pd-r-15\">Specific Gravity of Cement</div>\n                <div fxFlex=\"60%\">\n                  <mat-form-field>\n                    <mat-label>Select an option</mat-label>\n                    <mat-select>\n                      <mat-option>None</mat-option>\n                      <mat-option value=\"option1\">Option 1</mat-option>\n                      <mat-option value=\"option2\">Option 2</mat-option>\n                      <mat-option value=\"option3\">Option 3</mat-option>\n                    </mat-select>\n                  </mat-form-field>\n                </div>\n              </div>\n              <div fxFlex>\n                <div fxFlex=\"40%\" dir=\"rtl\" fxFlexAlign=\"center\" class=\"pd-r-15\">Fly ash</div>\n                <div fxFlex=\"60%\">\n                  <mat-form-field>\n                    <mat-label>Select an option</mat-label>\n                    <mat-select>\n                      <mat-option>None</mat-option>\n                      <mat-option value=\"option1\">Option 1</mat-option>\n                      <mat-option value=\"option2\">Option 2</mat-option>\n                      <mat-option value=\"option3\">Option 3</mat-option>\n                    </mat-select>\n                  </mat-form-field>\n                </div>\n              </div>\n              <div fxFlex>\n                <div fxFlex=\"40%\" dir=\"rtl\" fxFlexAlign=\"center\" class=\"pd-r-15\">Specific Gravity of Fly ash</div>\n                <div fxFlex=\"60%\">\n                  <mat-form-field>\n                    <mat-label>Select an option</mat-label>\n                    <mat-select>\n                      <mat-option>None</mat-option>\n                      <mat-option value=\"option1\">Option 1</mat-option>\n                      <mat-option value=\"option2\">Option 2</mat-option>\n                      <mat-option value=\"option3\">Option 3</mat-option>\n                    </mat-select>\n                  </mat-form-field>\n                </div>\n              </div>\n              <div fxFlex>\n                <div fxFlex=\"40%\" dir=\"rtl\" fxFlexAlign=\"center\" class=\"pd-r-15\">Chemical Admixture</div>\n                <div fxFlex=\"60%\">\n                  <mat-form-field>\n                    <mat-label>Select an option</mat-label>\n                    <mat-select>\n                      <mat-option>None</mat-option>\n                      <mat-option value=\"option1\">Option 1</mat-option>\n                      <mat-option value=\"option2\">Option 2</mat-option>\n                      <mat-option value=\"option3\">Option 3</mat-option>\n                    </mat-select>\n                  </mat-form-field>\n                </div>\n              </div>\n              <div fxFlex>\n                <div fxFlex=\"100%\" dir=\"ltr\" fxFlexAlign=\"center\">\n                  <h2>Specific Gravity of</h2>\n                </div>\n              </div>\n              <div fxFlex>\n                <div fxFlex=\"40%\" fxFlexAlign=\"center\" class=\"pd-r-15 align-right\">1. Coarse Grregate [at saturated\n                  surface dry (SSD) condition]</div>\n                <div fxFlex=\"60%\">\n                  <mat-form-field>\n                    <mat-label>Select an option</mat-label>\n                    <mat-select>\n                      <mat-option>None</mat-option>\n                      <mat-option value=\"option1\">Option 1</mat-option>\n                      <mat-option value=\"option2\">Option 2</mat-option>\n                      <mat-option value=\"option3\">Option 3</mat-option>\n                    </mat-select>\n                  </mat-form-field>\n                </div>\n              </div>\n              <div fxFlex>\n                <div fxFlex=\"40%\" fxFlexAlign=\"center\" class=\"pd-r-15 align-right\">2. FIne Grregate [at saturated\n                  surface dry (SSD) condition]</div>\n                <div fxFlex=\"60%\">\n                  <mat-form-field>\n                    <mat-label>Select an option</mat-label>\n                    <mat-select>\n                      <mat-option>None</mat-option>\n                      <mat-option value=\"option1\">Option 1</mat-option>\n                      <mat-option value=\"option2\">Option 2</mat-option>\n                      <mat-option value=\"option3\">Option 3</mat-option>\n                    </mat-select>\n                  </mat-form-field>\n                </div>\n              </div>\n              <div fxFlex>\n                <div fxFlex=\"40%\" fxFlexAlign=\"center\" class=\"pd-r-15 align-right\">3. Chemical admixture</div>\n                <div fxFlex=\"60%\">\n                  <mat-form-field>\n                    <mat-label>Select an option</mat-label>\n                    <mat-select>\n                      <mat-option>None</mat-option>\n                      <mat-option value=\"option1\">Option 1</mat-option>\n                      <mat-option value=\"option2\">Option 2</mat-option>\n                      <mat-option value=\"option3\">Option 3</mat-option>\n                    </mat-select>\n                  </mat-form-field>\n                </div>\n              </div>\n              <div fxFlex>\n                <div fxFlex=\"100%\" dir=\"ltr\" fxFlexAlign=\"center\">\n                  <h2>Water absorption</h2>\n                </div>\n              </div>\n              <div fxFlex>\n                <div fxFlex=\"40%\" fxFlexAlign=\"center\" class=\"pd-r-15 align-right\">1. Coarse Aggregate</div>\n                <div fxFlex=\"60%\">\n                  <mat-form-field>\n                    <mat-label>Select an option</mat-label>\n                    <mat-select>\n                      <mat-option>None</mat-option>\n                      <mat-option value=\"option1\">Option 1</mat-option>\n                      <mat-option value=\"option2\">Option 2</mat-option>\n                      <mat-option value=\"option3\">Option 3</mat-option>\n                    </mat-select>\n                  </mat-form-field>\n                </div>\n              </div>\n              <div fxFlex>\n                <div fxFlex=\"40%\" fxFlexAlign=\"center\" class=\"pd-r-15 align-right\">2. Fine Aggregate</div>\n                <div fxFlex=\"60%\">\n                  <mat-form-field>\n                    <mat-label>Select an option</mat-label>\n                    <mat-select>\n                      <mat-option>None</mat-option>\n                      <mat-option value=\"option1\">Option 1</mat-option>\n                      <mat-option value=\"option2\">Option 2</mat-option>\n                      <mat-option value=\"option3\">Option 3</mat-option>\n                    </mat-select>\n                  </mat-form-field>\n                </div>\n              </div>\n              <div fxFlex>\n                <div fxFlex=\"100%\" dir=\"ltr\" fxFlexAlign=\"center\">\n                  <h2>Moisture Content of aggregate [As per IS 2386 (part(3)</h2>\n                </div>\n              </div>\n              <div fxFlex>\n                <div fxFlex=\"40%\" fxFlexAlign=\"center\" class=\"pd-r-15 align-right\">1. Coarse Aggregate</div>\n                <div fxFlex=\"60%\">\n                  <mat-form-field>\n                    <mat-label>Select an option</mat-label>\n                    <mat-select>\n                      <mat-option>None</mat-option>\n                      <mat-option value=\"option1\">Option 1</mat-option>\n                      <mat-option value=\"option2\">Option 2</mat-option>\n                      <mat-option value=\"option3\">Option 3</mat-option>\n                    </mat-select>\n                  </mat-form-field>\n                </div>\n              </div>\n              <div fxFlex>\n                <div fxFlex=\"40%\" fxFlexAlign=\"center\" class=\"pd-r-15 align-right\">2. Fine Aggregate</div>\n                <div fxFlex=\"60%\">\n                  <mat-form-field>\n                    <mat-label>Select an option</mat-label>\n                    <mat-select>\n                      <mat-option>None</mat-option>\n                      <mat-option value=\"option1\">Option 1</mat-option>\n                      <mat-option value=\"option2\">Option 2</mat-option>\n                      <mat-option value=\"option3\">Option 3</mat-option>\n                    </mat-select>\n                  </mat-form-field>\n                </div>\n              </div>\n              <div fxFlex>\n                <div fxFlex=\"100%\" dir=\"ltr\" fxFlexAlign=\"center\">\n                  <h2>Free Surface Moisture</h2>\n                </div>\n              </div>\n              <div fxFlex>\n                <div fxFlex=\"40%\" fxFlexAlign=\"center\" class=\"pd-r-15 align-right\">1. Coarse Aggregate</div>\n                <div fxFlex=\"60%\">\n                  <mat-form-field>\n                    <mat-label>Select an option</mat-label>\n                    <mat-select>\n                      <mat-option>None</mat-option>\n                      <mat-option value=\"option1\">Option 1</mat-option>\n                      <mat-option value=\"option2\">Option 2</mat-option>\n                      <mat-option value=\"option3\">Option 3</mat-option>\n                    </mat-select>\n                  </mat-form-field>\n                </div>\n              </div>\n              <div fxFlex>\n                <div fxFlex=\"40%\" fxFlexAlign=\"center\" class=\"pd-r-15 align-right\">2. Fine Aggregate</div>\n                <div fxFlex=\"60%\">\n                  <mat-form-field>\n                    <mat-label>Select an option</mat-label>\n                    <mat-select>\n                      <mat-option>None</mat-option>\n                      <mat-option value=\"option1\">Option 1</mat-option>\n                      <mat-option value=\"option2\">Option 2</mat-option>\n                      <mat-option value=\"option3\">Option 3</mat-option>\n                    </mat-select>\n                  </mat-form-field>\n                </div>\n              </div>\n              <div fxFlex>\n                <div fxFlex=\"100%\" dir=\"ltr\" fxFlexAlign=\"center\">\n                  <h2>Seive analysis</h2>\n                </div>\n              </div>\n              <div fxFlex>\n                <div fxFlex=\"40%\" fxFlexAlign=\"center\" class=\"pd-r-15 align-right\">1. Coarse Aggregate</div>\n                <div fxFlex=\"60%\">\n                  <mat-form-field>\n                    <mat-label>Select an option</mat-label>\n                    <mat-select>\n                      <mat-option>None</mat-option>\n                      <mat-option value=\"option1\">Option 1</mat-option>\n                      <mat-option value=\"option2\">Option 2</mat-option>\n                      <mat-option value=\"option3\">Option 3</mat-option>\n                    </mat-select>\n                  </mat-form-field>\n                </div>\n              </div>\n              <div fxFlex>\n                <div fxFlex=\"40%\" fxFlexAlign=\"center\" class=\"pd-r-15 align-right\">2. Fine Aggregate</div>\n                <div fxFlex=\"60%\">\n                  <mat-form-field>\n                    <mat-label>Select an option</mat-label>\n                    <mat-select>\n                      <mat-option>None</mat-option>\n                      <mat-option value=\"option1\">Option 1</mat-option>\n                      <mat-option value=\"option2\">Option 2</mat-option>\n                      <mat-option value=\"option3\">Option 3</mat-option>\n                    </mat-select>\n                  </mat-form-field>\n                </div>\n              </div>\n              <div fxFlex>\n                <div fxFlex=\"50%\" dir=\"ltr\">\n                  <button mat-stroked-button color=\"primary\" matStepperPrevious>Back</button>\n                </div>\n                <div fxFlex=\"50%\" dir=\"rtl\">\n                  <button mat-raised-button color=\"primary\">Save</button>\n                </div>\n              </div>\n            </div>\n          </form>\n        </mat-step>\n      </mat-horizontal-stepper>\n    </mat-card-content>\n  </mat-card>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MixDesignRoutingModule } from './mix-design-routing.module';\nimport { MixDesignComponent } from './mix-design.component';\n\n@NgModule({\n  declarations: [MixDesignComponent],\n  imports: [\n    CommonModule,\n    FlexLayoutModule,\n    MatCardModule,\n    MatStepperModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    ScrollingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MixDesignRoutingModule\n  ]\n})\nexport class MixDesignModule { }\n"]}